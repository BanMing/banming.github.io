import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as e,o as i}from"./app-CEr_ZYc6.js";const t={};function p(l,n){return i(),a("div",null,n[0]||(n[0]=[e(`<h1 id="motion-matching" tabindex="-1"><a class="header-anchor" href="#motion-matching"><span>Motion Matching</span></a></h1><p>Motion Matching is a simple idea, that helps us reason about movement description and control.</p><p>It’s also a new type of animation system, with three advantages:</p><ul><li>High quality</li><li>Controllable responsiveness</li><li>Minimal manual work</li></ul><h2 id="播放动画" tabindex="-1"><a class="header-anchor" href="#播放动画"><span>播放动画</span></a></h2><p>一段播放动画的代码：</p><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp" data-title="cpp"><pre><code><span class="line"><span class="token comment">// start</span></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>walking <span class="token operator">&amp;&amp;</span> wantToWalk<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">PlayAnim</span><span class="token punctuation">(</span>StartAnim<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    walking <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// walk loop</span></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">IsPlaying</span><span class="token punctuation">(</span>StartAnim<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">IsAtEndOfAnim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">PlayAnim</span><span class="token punctuation">(</span>WalkLoopAnim<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// stop</span></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">(</span>walking <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>wantToWalk<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">PlayAnim</span><span class="token punctuation">(</span>StopAnim<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    walking <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>同样可以使用状态机，可视化：</p><p>但如果动画过多就会出现下图：</p><p>当然还有混合树的情况播放动画：</p><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp" data-title="cpp"><pre><code><span class="line"><span class="token keyword">if</span> <span class="token punctuation">(</span>speed <span class="token operator">&gt;</span> <span class="token number">3.0f</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">PlayAnim</span><span class="token punctuation">(</span>RunAnim<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>speed <span class="token operator">&gt;</span> <span class="token number">0.0f</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">PlayAnim</span><span class="token punctuation">(</span>WalkAnim<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token keyword">else</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">PlayAnim</span><span class="token punctuation">(</span>IdleAnim<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>同样也可以使用可视化工具来处理：</p><h3 id="多个参数控制动画" tabindex="-1"><a class="header-anchor" href="#多个参数控制动画"><span>多个参数控制动画</span></a></h3><p>如果有多个数据都会影响着动画的播放，就是需要配表来控制标准选择动画，然后实时传递值给动画控制器。这个逻辑就是动画蓝图的功能。</p><h3 id="改变固定动画播放路径" tabindex="-1"><a class="header-anchor" href="#改变固定动画播放路径"><span>改变固定动画播放路径</span></a></h3><p><a href="https://research.cs.wisc.edu/graphics/Papers/Gleicher/Mocap/mograph.pdf" target="_blank" rel="noopener noreferrer">Motion Graphs</a></p><h3 id="选择下一个动画" tabindex="-1"><a class="header-anchor" href="#选择下一个动画"><span>选择下一个动画</span></a></h3><p><a href="https://gdcvault.com/play/1017727/Reinforcement-Learning-Based-Character-Locomotion" target="_blank" rel="noopener noreferrer">Reinforcement Learning Based Character Locomotion in Hitman: Absolution</a></p><p><a href="https://grail.cs.washington.edu/projects/motion-fields/motion-fields.pdf" target="_blank" rel="noopener noreferrer">Motion Fields for Interactive Character Animation</a></p><p>Motion Fields 性能消耗非常大，这里只使用了跳转到其他动画的任何一帧。</p><h3 id="选择正确的开始和结束时间" tabindex="-1"><a class="header-anchor" href="#选择正确的开始和结束时间"><span>选择正确的开始和结束时间</span></a></h3><ul><li>姿势匹配</li><li>速度匹配</li><li>精确的末端位置匹配</li></ul><h2 id="原理简介" tabindex="-1"><a class="header-anchor" href="#原理简介"><span>原理简介</span></a></h2><p>核心逻辑：每一帧都去寻找最合适的动画，然后跳转播放。</p><h3 id="mocap" tabindex="-1"><a class="header-anchor" href="#mocap"><span>Mocap</span></a></h3><p>先做动作捕捉</p><h3 id="code" tabindex="-1"><a class="header-anchor" href="#code"><span>Code</span></a></h3><p>下面是每帧计算匹配的简单代码：</p><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp" data-title="cpp"><pre><code><span class="line"><span class="token keyword">int</span> m_CurrentAnimIndex<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">int</span> m_CurrentAnimTime<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">void</span> <span class="token function">AmoUpdate</span><span class="token punctuation">(</span>Goal goal<span class="token punctuation">,</span> <span class="token keyword">float</span> dt<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    m_CurrentAnimTime <span class="token operator">+=</span> dt<span class="token punctuation">;</span></span>
<span class="line">    Pose currentPose <span class="token operator">=</span> <span class="token function">EValuateLerpedPoseFromData</span><span class="token punctuation">(</span>m_CurrentAnimIndex<span class="token punctuation">,</span> m_CurrentAnimTime<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">float</span> bestCost <span class="token operator">=</span> <span class="token number">1000000</span><span class="token punctuation">;</span></span>
<span class="line">    Pose bestPose<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// loop on all mocap</span></span>
<span class="line">    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> m_Poses<span class="token punctuation">.</span><span class="token function">Size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">        Pose candidatePose <span class="token operator">=</span> m_Poses<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// every candidate jumping point has a cost</span></span>
<span class="line">        <span class="token keyword">float</span> thisCost <span class="token operator">=</span> <span class="token function">ComputeCost</span><span class="token punctuation">(</span>currentPose<span class="token punctuation">,</span> candidatePose<span class="token punctuation">,</span> goal<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>thisCost <span class="token operator">&lt;</span> bestCost<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">// remember the best candidate</span></span>
<span class="line">            bestCost <span class="token operator">=</span> thisCost<span class="token punctuation">;</span></span>
<span class="line">            bestPose <span class="token operator">=</span> candidatePose<span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">bool</span> theWinnerIsAtTheSameLocation <span class="token operator">=</span> m_CurrentAnimIndex <span class="token operator">==</span> bestPose<span class="token punctuation">.</span>m_AnimIndex <span class="token operator">&amp;&amp;</span> <span class="token function">fabs</span><span class="token punctuation">(</span>m_CurrentAnimTime <span class="token operator">-</span> bestPose<span class="token punctuation">.</span>m_AnimTime<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0.2f</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>theWinnerIsAtTheSmaeLocation<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// blend to the winning location</span></span>
<span class="line">        m_CurrentAnimIndex <span class="token operator">=</span> bestPose<span class="token punctuation">.</span>m_AnimIndex<span class="token punctuation">;</span></span>
<span class="line">        m_CurrentAnimTime <span class="token operator">=</span> bestPose<span class="token punctuation">.</span>m_AnimTime<span class="token punctuation">;</span></span>
<span class="line">        <span class="token function">PlayAnimStartingAtTime</span><span class="token punctuation">(</span>m_CurrentAnimIndex<span class="token punctuation">,</span> m_CurrentAnimTime<span class="token punctuation">,</span> <span class="token number">0.25f</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="trick-1-posematch-only-a-few-bones" tabindex="-1"><a class="header-anchor" href="#trick-1-posematch-only-a-few-bones"><span>Trick 1: Posematch only a few bones</span></a></h3><ul><li>Local velocity</li><li>Feet positions</li><li>Feet velocities</li><li>Weapon position</li></ul><h3 id="trick-2-just-check-where-a-piece-of-animation-brings-you-if-you-play-it" tabindex="-1"><a class="header-anchor" href="#trick-2-just-check-where-a-piece-of-animation-brings-you-if-you-play-it"><span>Trick 2: Just check where a piece of animation brings you if you play it</span></a></h3><p>动画的目标，部分代码：</p><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp" data-title="cpp"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">TrajectoryPoint</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    Vector3 m_Position<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">float</span> m_Sight<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">float</span> m_TimeDelay<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// desired goal, sent by gameplay each frame</span></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">Goal</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    Array<span class="token operator">&lt;</span>TrajectoryPoint<span class="token operator">&gt;</span> m_DesiredTrajectory<span class="token punctuation">;</span></span>
<span class="line">    Stance m_DesiredStance<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// ...</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>计算调整到新的姿势的花销的代码：</p><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp" data-title="cpp"><pre><code><span class="line"><span class="token keyword">float</span> <span class="token function">ComputeCost</span><span class="token punctuation">(</span>Pose currentPose<span class="token punctuation">,</span> Pose candidatePose<span class="token punctuation">,</span> Goal goal<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">float</span> cost <span class="token operator">=</span> <span class="token number">0.0f</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// how much the candidate jumping position matches the current situation</span></span>
<span class="line">    cost <span class="token operator">+=</span> <span class="token function">ComputeCurrentCost</span><span class="token punctuation">(</span>currentPose<span class="token punctuation">,</span> candidatePose<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// this is our responsivity slider</span></span>
<span class="line">    <span class="token keyword">static</span> <span class="token keyword">float</span> reponsivity <span class="token operator">=</span> <span class="token number">1.0f</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// how much the candidate piece of motion matches the desired trajectory</span></span>
<span class="line">    cost <span class="token operator">+=</span> responsivity <span class="token operator">*</span> <span class="token function">ComputeFutureCost</span><span class="token punctuation">(</span>candidatePose<span class="token punctuation">,</span> goal<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">return</span> cost<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="match-more-things" tabindex="-1"><a class="header-anchor" href="#match-more-things"><span>Match more things</span></a></h3><ul><li>Future Stance Matching</li><li>Elegantly find transitions when they exist</li></ul><h3 id="optimizations" tabindex="-1"><a class="header-anchor" href="#optimizations"><span>Optimizations</span></a></h3><ul><li>LOD</li><li>KD-Tree</li><li>Motion Shaders</li></ul><h3 id="trajectory-simulation-choices" tabindex="-1"><a class="header-anchor" href="#trajectory-simulation-choices"><span>Trajectory Simulation Choices</span></a></h3><ul><li>Displacement from Animation?</li><li>Displacement from Simulation? 更可控，可预测</li></ul><h2 id="workflow" tabindex="-1"><a class="header-anchor" href="#workflow"><span>Workflow</span></a></h2><ul><li>Mocap is tweaked, imported, and marked up</li><li>At runtime Gameplay makes a request(desired trajectory and event constraints)</li><li>The animation system continuously finds the best piece of data to play</li><li>We modify the result to precisely match gameplay and environment</li></ul><h2 id="procedural-touchups" tabindex="-1"><a class="header-anchor" href="#procedural-touchups"><span>Procedural Touchups</span></a></h2><h3 id="orientation-corrections" tabindex="-1"><a class="header-anchor" href="#orientation-corrections"><span>Orientation corrections</span></a></h3><ul><li>Let the animation decide rotation</li><li>Correctt to match future desired position</li><li>Orientation to match future desired orientation</li></ul><h3 id="sliding-prevention" tabindex="-1"><a class="header-anchor" href="#sliding-prevention"><span>Sliding Prevention</span></a></h3><p>Lock the toe when it <strong>doesn’t move too much</strong> in the main animation</p><h3 id="slope-warping" tabindex="-1"><a class="header-anchor" href="#slope-warping"><span>Slope Warping</span></a></h3><ul><li>Carefully tweak ground smoothing</li><li>Smoothly pull the hips down</li><li>Prefer smoothness over absolute penetration prevention</li><li>Don’t break the pose: Never hyper-extend the knee</li></ul><h3 id="slope-animations" tabindex="-1"><a class="header-anchor" href="#slope-animations"><span>Slope Animations</span></a></h3><p>Slope anims are automatically chosen by 3D trajectory matching</p><p>IK only compensate for what is missing from the anim</p><h3 id="spine-pitch-bending" tabindex="-1"><a class="header-anchor" href="#spine-pitch-bending"><span>Spine Pitch Bending</span></a></h3><p>Keep whole upper body in sync</p><h2 id="reference" tabindex="-1"><a class="header-anchor" href="#reference"><span>Reference</span></a></h2><ul><li>https://gdcvault.com/play/1023280/Motion-Matching-and-The-Road</li><li>https://ubm-twvideo01.s3.amazonaws.com/o1/vault/gdc2016/Presentations/Clavet_Simon_MotionMatching.pdf</li><li>https://research.cs.wisc.edu/graphics/Papers/Gleicher/Mocap/mograph.pdf</li><li>https://github.com/JLPM22/MotionMatching</li><li>https://zhuanlan.zhihu.com/p/50141261</li><li></li></ul>`,58)]))}const r=s(t,[["render",p],["__file","index.html.vue"]]),u=JSON.parse('{"path":"/Animation/MotionMatching/","title":"Motion Matching","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"播放动画","slug":"播放动画","link":"#播放动画","children":[{"level":3,"title":"多个参数控制动画","slug":"多个参数控制动画","link":"#多个参数控制动画","children":[]},{"level":3,"title":"改变固定动画播放路径","slug":"改变固定动画播放路径","link":"#改变固定动画播放路径","children":[]},{"level":3,"title":"选择下一个动画","slug":"选择下一个动画","link":"#选择下一个动画","children":[]},{"level":3,"title":"选择正确的开始和结束时间","slug":"选择正确的开始和结束时间","link":"#选择正确的开始和结束时间","children":[]}]},{"level":2,"title":"原理简介","slug":"原理简介","link":"#原理简介","children":[{"level":3,"title":"Mocap","slug":"mocap","link":"#mocap","children":[]},{"level":3,"title":"Code","slug":"code","link":"#code","children":[]},{"level":3,"title":"Trick 1: Posematch only a few bones","slug":"trick-1-posematch-only-a-few-bones","link":"#trick-1-posematch-only-a-few-bones","children":[]},{"level":3,"title":"Trick 2: Just check where a piece of animation brings you if you play it","slug":"trick-2-just-check-where-a-piece-of-animation-brings-you-if-you-play-it","link":"#trick-2-just-check-where-a-piece-of-animation-brings-you-if-you-play-it","children":[]},{"level":3,"title":"Match more things","slug":"match-more-things","link":"#match-more-things","children":[]},{"level":3,"title":"Optimizations","slug":"optimizations","link":"#optimizations","children":[]},{"level":3,"title":"Trajectory Simulation Choices","slug":"trajectory-simulation-choices","link":"#trajectory-simulation-choices","children":[]}]},{"level":2,"title":"Workflow","slug":"workflow","link":"#workflow","children":[]},{"level":2,"title":"Procedural Touchups","slug":"procedural-touchups","link":"#procedural-touchups","children":[{"level":3,"title":"Orientation corrections","slug":"orientation-corrections","link":"#orientation-corrections","children":[]},{"level":3,"title":"Sliding Prevention","slug":"sliding-prevention","link":"#sliding-prevention","children":[]},{"level":3,"title":"Slope Warping","slug":"slope-warping","link":"#slope-warping","children":[]},{"level":3,"title":"Slope Animations","slug":"slope-animations","link":"#slope-animations","children":[]},{"level":3,"title":"Spine Pitch Bending","slug":"spine-pitch-bending","link":"#spine-pitch-bending","children":[]}]},{"level":2,"title":"Reference","slug":"reference","link":"#reference","children":[]}],"git":{"createdTime":1725877412000,"updatedTime":1726742868000,"contributors":[{"name":"ban-ming@foxmail.com","email":"ban-ming@foxmail.com","commits":3}]},"readingTime":{"minutes":2.57,"words":771},"filePathRelative":"Animation/MotionMatching/README.md","localizedDate":"September 9, 2024","excerpt":"\\n<p>Motion Matching is a simple idea, that helps us reason about movement description and control.</p>\\n<p>It’s also a new type of animation system, with three advantages:</p>\\n<ul>\\n<li>High quality</li>\\n<li>Controllable responsiveness</li>\\n<li>Minimal manual work</li>\\n</ul>\\n<h2>播放动画</h2>\\n<p>一段播放动画的代码：</p>"}');export{r as comp,u as data};
