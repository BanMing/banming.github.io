import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{e as o,f as t,g as n,h as i,j as s,r as p,o as r}from"./app-m9mnr41q.js";const d="/assets/2023-04-25_10-56-DTYtd2j7.png",u={},c={id:"bgfxmain",tabindex:"-1"},m={class:"header-anchor",href:"#bgfxmain"},f={id:"entryinit",tabindex:"-1"},g={class:"header-anchor",href:"#entryinit"},w={id:"entryshutdown",tabindex:"-1"},h={class:"header-anchor",href:"#entryshutdown"},x={id:"entryupdate",tabindex:"-1"},b={class:"header-anchor",href:"#entryupdate"};function y(k,e){const a=p("VPIcon");return r(),o("div",null,[e[8]||(e[8]=t('<h1 id="example-windows-launch-flow" tabindex="-1"><a class="header-anchor" href="#example-windows-launch-flow"><span>Example Windows Launch Flow</span></a></h1><h2 id="create-window" tabindex="-1"><a class="header-anchor" href="#create-window"><span>Create Window</span></a></h2><p>文件为：<code>bgfx.cmake\\bgfx\\examples\\common\\entry\\entry_windows.cpp</code>，入口函数如下：</p><figure><img src="'+d+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>在 <code>Context::run</code> 函数中创建Windows的窗口以及监听窗口事件，与此同时创建一个线程来开启 <code>bgfx::entry::main</code> 方法。</p>',5)),n("h2",c,[n("a",m,[n("span",null,[e[0]||(e[0]=i("bgfx")),s(a,{icon:"entry"}),e[1]||(e[1]=i("main"))])])]),e[9]||(e[9]=t(`<p>该方法首先初始化以下模块：</p><ul><li>cmdInit</li><li>input <ul><li>inputInit</li><li>inputAddBindings</li></ul></li><li>windows info</li></ul><p>然后启动<code>entry::AppI</code>程序。</p><h2 id="launch-entry-appi" tabindex="-1"><a class="header-anchor" href="#launch-entry-appi"><span>Launch entry::AppI</span></a></h2><p>在自己的脚本里必须实现，以下函数：</p><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp"><pre><code><span class="line"><span class="token keyword">int</span> <span class="token function">_main_</span><span class="token punctuation">(</span><span class="token keyword">int</span> _argc<span class="token punctuation">,</span> <span class="token keyword">char</span><span class="token operator">*</span><span class="token operator">*</span> _argv<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">   <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以直接在该函数里实例化一个应用，然后调用<code>entry::runApp</code>，来启动应用。</p><p>如果已经实例化<code>AppI</code>对象，启动<code>AppI</code>有两种方式：</p><ul><li>多个应用，使用命令行传入App名字来判断启动那个</li><li>一个时，直接运行<code>entry::runApp</code></li></ul>`,9)),n("h2",f,[n("a",g,[n("span",null,[e[2]||(e[2]=i("entry")),s(a,{icon:"AppI"}),e[3]||(e[3]=i("init"))])])]),e[10]||(e[10]=n("ul",null,[n("li",null,"初始化宽度，调试等级..."),n("li",null,"bgfx::init(init)"),n("li",null,"bgfx::setViewClear(0...)"),n("li",null,"imguiCreate()")],-1)),n("h2",w,[n("a",h,[n("span",null,[e[4]||(e[4]=i("entry")),s(a,{icon:"AppI"}),e[5]||(e[5]=i("shutdown"))])])]),e[11]||(e[11]=n("ul",null,[n("li",null,"imguiDestroy()"),n("li",null,"bgfx::shutdown()")],-1)),n("h2",x,[n("a",b,[n("span",null,[e[6]||(e[6]=i("entry")),s(a,{icon:"AppI"}),e[7]||(e[7]=i("update"))])])]),e[12]||(e[12]=n("ul",null,[n("li",null,"entry::processEvents(...)"),n("li",null,"bgfx::setViewRect(..)"),n("li",null,"bgfx::touch(...): submit an empty primitive for rendering."),n("li",null,"commit frame buffer..."),n("li",null,"bgfx::frame(): advance to next frame"),n("li",null,"imguiBeginFrame()"),n("li",null,"custom imgui..."),n("li",null,"imguiEndFrame()")],-1))])}const A=l(u,[["render",y],["__file","windows_launch_flow.html.vue"]]),I=JSON.parse('{"path":"/Graphic/bgfx/windows_launch_flow.html","title":"Example Windows Launch Flow","lang":"en-US","frontmatter":{"date":"2023-04-27T15:24:16.000Z","tag":["Graphic"]},"git":{"createdTime":1682580256000,"updatedTime":1707214279000,"contributors":[{"name":"wupeng","username":"wupeng","email":"wupeng_a2484@virtuos.com.cn","commits":3,"url":"https://github.com/wupeng"},{"name":"BanMing","username":"BanMing","email":"ban-ming@foxmail.com","commits":5,"url":"https://github.com/BanMing"}]},"readingTime":{"minutes":0.87,"words":260},"filePathRelative":"Graphic/bgfx/windows_launch_flow.md","localizedDate":"April 27, 2023","excerpt":"\\n<h2>Create Window</h2>\\n<p>文件为：<code>bgfx.cmake\\\\bgfx\\\\examples\\\\common\\\\entry\\\\entry_windows.cpp</code>，入口函数如下：</p>\\n<figure><figcaption></figcaption></figure>\\n<p>在 <code>Context::run</code> 函数中创建Windows的窗口以及监听窗口事件，与此同时创建一个线程来开启 <code>bgfx::entry::main</code> 方法。</p>\\n<h2>bgfx</h2>\\n<p>该方法首先初始化以下模块：</p>\\n<ul>\\n<li>cmdInit</li>\\n<li>input\\n<ul>\\n<li>inputInit</li>\\n<li>inputAddBindings</li>\\n</ul>\\n</li>\\n<li>windows info</li>\\n</ul>"}');export{A as comp,I as data};
