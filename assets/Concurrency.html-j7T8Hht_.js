const e=JSON.parse('{"key":"v-644edd9b","path":"/Basic/language/Cplusplus/Concurrency.html","title":"Concurrency","lang":"en-US","frontmatter":{"date":"2023-03-15T19:20:37.000Z","tag":["C++","Concurrency"]},"headers":[{"level":2,"title":"Hello Concurrent World","slug":"hello-concurrent-world","link":"#hello-concurrent-world","children":[{"level":3,"title":"Approaches to concurrency","slug":"approaches-to-concurrency","link":"#approaches-to-concurrency","children":[]},{"level":3,"title":"Managing threads","slug":"managing-threads","link":"#managing-threads","children":[]},{"level":3,"title":"join","slug":"join","link":"#join","children":[]},{"level":3,"title":"detach","slug":"detach","link":"#detach","children":[]},{"level":3,"title":"Passing argument","slug":"passing-argument","link":"#passing-argument","children":[]},{"level":3,"title":"Transferring ownership of a thread","slug":"transferring-ownership-of-a-thread","link":"#transferring-ownership-of-a-thread","children":[]},{"level":3,"title":"Choosing the number of threads at runtime","slug":"choosing-the-number-of-threads-at-runtime","link":"#choosing-the-number-of-threads-at-runtime","children":[]}]},{"level":2,"title":"Sharing data between threads","slug":"sharing-data-between-threads","link":"#sharing-data-between-threads","children":[{"level":3,"title":"Avoiding problematic race conditions","slug":"avoiding-problematic-race-conditions","link":"#avoiding-problematic-race-conditions","children":[]},{"level":3,"title":"Protecting shared data with mutexes","slug":"protecting-shared-data-with-mutexes","link":"#protecting-shared-data-with-mutexes","children":[]}]}],"git":{"createdTime":1699280150000,"updatedTime":1707212881000,"contributors":[{"name":"BanMing","email":"ban-ming@foxmail.com","commits":4},{"name":"wupeng","email":"wupeng_a2484@virtuos.com.cn","commits":2}]},"readingTime":{"minutes":5.19,"words":1556},"filePathRelative":"Basic/language/Cplusplus/Concurrency.md","localizedDate":"March 15, 2023","excerpt":"<h1> Concurrency</h1>\\n<h2> Hello Concurrent World</h2>\\n<h3> Approaches to concurrency</h3>\\n<p>有两种方式实现并发：</p>\\n<ul>\\n<li>\\n<p>多个进程，使用信号，套接字，文件等作为信息传递媒介。</p>\\n<figure><figcaption></figcaption></figure>\\n<ul>\\n<li>两个处理器之间交流比较缓慢且难开始，因为操作系统会限制一个进程突然修改另一个进程使用到的数据。</li>\\n<li>操作系统在开启一个进程时，消耗比较大，需要单独准备资源。</li>\\n<li>安全的编写并行代码。</li>\\n<li>通过网络连接可以在不同的物理机器上跑并行，再好的设计下，很好的提高并行度和性能。</li>\\n</ul>\\n</li>\\n<li>\\n<p>单个处理器，多线程</p>\\n<figure><figcaption></figcaption></figure>\\n<ul>\\n<li>更小的开销</li>\\n<li>共享内存，交流方便</li>\\n<li>管理共享内存复杂</li>\\n</ul>\\n</li>\\n</ul>"}');export{e as data};
