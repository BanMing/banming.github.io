import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{e as s,f as t,o as p}from"./app-rNOnmUYH.js";const e="/assets/1594968731647-01ced26d-94a8-4cc2-abe4-c087defe5d91-DMgcH4bH.png",l="/assets/1594968736208-1796a601-3452-4985-bdf7-e20e66bf2bf1-C6IS3UJN.png",o={};function c(u,a){return p(),s("div",null,a[0]||(a[0]=[t('<h1 id="multi-platform-跨平台" tabindex="-1"><a class="header-anchor" href="#multi-platform-跨平台"><span>Multi-Platform 跨平台</span></a></h1><h2 id="mono" tabindex="-1"><a class="header-anchor" href="#mono"><span>Mono</span></a></h2><p>把c#转成IL（intermediatelanguage）中间语言，再在各平台上建上专属Mono VM（虚拟机），在VM上面运行IL即可以实现跨平台。<br> C#为静态语言，IL为动态语言。<br> 难点：<br> 实现各个平台的VM比较复杂，VM官方并没有实现太多。</p><figure><img src="'+e+'" alt="5.png" tabindex="0" loading="lazy"><figcaption>5.png</figcaption></figure><hr><h2 id="il2cpp" tabindex="-1"><a class="header-anchor" href="#il2cpp"><span>IL2CPP</span></a></h2><p>把C#直接转为各个平台原生C++执行，例如安卓使用ndk编译。这其中为了保证c#的一些原生特性，为此也加个一个VM，但是功能比较少，比如实现c#的GC功能等。</p><p><img src="'+l+`" alt="6.png" loading="lazy"><br>  <br> 使用动态特性<br> 可以使用link.xml文件来做黑名单：</p><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>linker</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>assembly</span> <span class="token attr-name">fullname</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>System.Web.Services<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>type</span> <span class="token attr-name">fullname</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>System.Web.Services.Protocols.SoapTypeStubInfo<span class="token punctuation">&quot;</span></span> <span class="token attr-name">preserve</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>all<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span></span>
<span class="line">       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>assembly</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line">       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>assembly</span> <span class="token attr-name">fullname</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>System<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>type</span> <span class="token attr-name">fullname</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>System.Net.Configuration.WebRequestModuleHandler<span class="token punctuation">&quot;</span></span> <span class="token attr-name">preserve</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>all<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span></span>
<span class="line">               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>type</span> <span class="token attr-name">fullname</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>System.Net.HttpRequestCreator<span class="token punctuation">&quot;</span></span> <span class="token attr-name">preserve</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>all<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span></span>
<span class="line">               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>type</span> <span class="token attr-name">fullname</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>System.Net.FileWebRequestCreator<span class="token punctuation">&quot;</span></span> <span class="token attr-name">preserve</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>all<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span></span>
<span class="line">       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>assembly</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line">       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>assembly</span> <span class="token attr-name">fullname</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mscorlib<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>type</span> <span class="token attr-name">fullname</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>System.AppDomain<span class="token punctuation">&quot;</span></span> <span class="token attr-name">preserve</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>fields<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span></span>
<span class="line">               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>type</span> <span class="token attr-name">fullname</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>System.InvalidOperationException<span class="token punctuation">&quot;</span></span> <span class="token attr-name">preserve</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>fields<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">                       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>method</span> <span class="token attr-name">signature</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>System.Void .ctor()<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span></span>
<span class="line">               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>type</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>type</span> <span class="token attr-name">fullname</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>System.Object<span class="token punctuation">&quot;</span></span> <span class="token attr-name">preserve</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>nothing<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>method</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Finalize<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span></span>
<span class="line">               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>type</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>assembly</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>linker</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><p>参考：</p><p><a href="https://docs.unity3d.com/Manual/IL2CPP-BytecodeStripping.html" target="_blank" rel="noopener noreferrer">https://docs.unity3d.com/Manual/IL2CPP-BytecodeStripping.html</a></p><p><a href="https://zhuanlan.zhihu.com/p/19972689" target="_blank" rel="noopener noreferrer">https://zhuanlan.zhihu.com/p/19972689</a></p><p>扩展：.net 的跨平台</p><p><a href="https://www.cnblogs.com/artech/p/how-to-cross-platform-03.html" target="_blank" rel="noopener noreferrer">https://www.cnblogs.com/artech/p/how-to-cross-platform-03.html</a></p>`,15)]))}const k=n(o,[["render",c],["__file","Multi-Platform.html.vue"]]),m=JSON.parse('{"path":"/GameEngine/Unity/manual/normal/Multi-Platform.html","title":"Multi-Platform 跨平台","lang":"en-US","frontmatter":{"date":"2020-11-30T22:26:35.000Z","tag":["Unity"]},"git":{"createdTime":1606746395000,"updatedTime":1707213711000,"contributors":[{"name":"BanMing","username":"BanMing","email":"ban-ming@foxmail.com","commits":3,"url":"https://github.com/BanMing"},{"name":"BanMing","username":"BanMing","email":"banming729@163.com","commits":2,"url":"https://github.com/BanMing"},{"name":"wupeng","username":"wupeng","email":"wupeng_a2484@virtuos.com.cn","commits":2,"url":"https://github.com/wupeng"}]},"readingTime":{"minutes":0.95,"words":285},"filePathRelative":"GameEngine/Unity/manual/normal/Multi-Platform.md","localizedDate":"November 30, 2020","excerpt":"\\n<h2>Mono</h2>\\n<p>把c#转成IL（intermediatelanguage）中间语言，再在各平台上建上专属Mono VM（虚拟机），在VM上面运行IL即可以实现跨平台。<br>\\nC#为静态语言，IL为动态语言。<br>\\n难点：<br>\\n实现各个平台的VM比较复杂，VM官方并没有实现太多。</p>\\n<figure><figcaption>5.png</figcaption></figure>\\n<hr>\\n<h2>IL2CPP</h2>\\n<p>把C#直接转为各个平台原生C++执行，例如安卓使用ndk编译。这其中为了保证c#的一些原生特性，为此也加个一个VM，但是功能比较少，比如实现c#的GC功能等。</p>"}');export{k as comp,m as data};
