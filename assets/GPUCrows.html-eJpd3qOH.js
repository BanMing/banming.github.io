import{_ as a}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as e,c as r,b as t}from"./app-EpDlH_S7.js";const i={},n=t('<h1 id="rendering-instanced-crowds" tabindex="-1"><a class="header-anchor" href="#rendering-instanced-crowds" aria-hidden="true">#</a> Rendering Instanced Crowds</h1><h2 id="storing-arbitrary-data-in-textures" tabindex="-1"><a class="header-anchor" href="#storing-arbitrary-data-in-textures" aria-hidden="true">#</a> Storing arbitrary data in textures</h2><p>可以使用一个<code>GL_RGBA32F</code>格式的贴图来存储动画信息，每个像素有4个32位浮点数来存。</p><h2 id="retrieving-arbitrary-data-from-textures" tabindex="-1"><a class="header-anchor" href="#retrieving-arbitrary-data-from-textures" aria-hidden="true">#</a> Retrieving arbitrary data from textures</h2><p>在shader中可以对其采样读取</p><h2 id="baking-animations-into-a-texture" tabindex="-1"><a class="header-anchor" href="#baking-animations-into-a-texture" aria-hidden="true">#</a> Baking animations into a texture</h2><h2 id="sampling-animation-textures-in-a-vertex-shader" tabindex="-1"><a class="header-anchor" href="#sampling-animation-textures-in-a-vertex-shader" aria-hidden="true">#</a> Sampling animation textures in a vertex shader</h2><h2 id="optimizing-the-crowd-system" tabindex="-1"><a class="header-anchor" href="#optimizing-the-crowd-system" aria-hidden="true">#</a> Optimizing the crowd system</h2>',8),d=[n];function s(o,h){return e(),r("div",null,d)}const x=a(i,[["render",s],["__file","GPUCrows.html.vue"]]);export{x as default};
