import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,o as s,a as t}from"./app-FYR72jWX.js";const e="/assets/image-CwLsQX2b.png",i="/assets/23-22-20-Cf8wCnl7.png",o="/assets/23-22-42-BG3HyBaG.png",p={},c=t('<h1 id="skeletal-animation" tabindex="-1"><a class="header-anchor" href="#skeletal-animation"><span>Skeletal Animation</span></a></h1><h2 id="keyframe-animation-basics" tabindex="-1"><a class="header-anchor" href="#keyframe-animation-basics"><span>Keyframe animation basics</span></a></h2><p>帧动画由一段时间中几个特定时间点和物体姿势组成。如下图：</p><figure><img src="'+e+`" alt="Alt text" tabindex="0" loading="lazy"><figcaption>Alt text</figcaption></figure><p>其中姿势可以由<code>位置</code>，<code>缩放</code>，<code>旋转</code>组成。在DX9中使用<code>D3DXKEY_VECTOR3</code>表示位置和缩放，使用<code>D3DXKEY_QUATERNION</code>表示旋转。</p><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token keyword">struct</span> <span class="token class-name">D3DXKEY_VECTOR3</span> 
<span class="token punctuation">{</span>
FLOAT Time<span class="token punctuation">;</span>
D3DXVECTOR3 Value<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">struct</span> <span class="token class-name">D3DXKEY_QUATERNION</span> 
<span class="token punctuation">{</span>
FLOAT Time<span class="token punctuation">;</span>
D3DXQUATERNION Value<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用<code>ID3DXKeyframedAnimationSet</code>来表示一个帧动画，其中主要方法：</p><ul><li>D3DXCreateKeyframedAnimationSet 创建</li><li>RegisterAnimationSRTKeys 添加动画帧</li><li>GetSRT 通过时间获得SRT</li></ul><h2 id="loading-animation-data" tabindex="-1"><a class="header-anchor" href="#loading-animation-data"><span>Loading animation data</span></a></h2><p>使用方法<code>D3DXLoadMeshHierarchyFromX</code>加载x文件中的动画信息到<code>ID3DXAnimationController</code>。</p><h2 id="the-id3dxanimationcontroller" tabindex="-1"><a class="header-anchor" href="#the-id3dxanimationcontroller"><span>The ID3DXAnimationController</span></a></h2><p>用来激活当前播放的动画，动画混合等。主要使用到API</p><ul><li>SetTrackAnimationSet 设置当前播放的动画</li><li>AdvanceTime 采样下一个时间的动画姿势</li></ul><p>获取动画信息示例：</p><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token keyword">void</span> <span class="token class-name">SkinnedMesh</span><span class="token double-colon punctuation">::</span><span class="token function">GetAnimations</span><span class="token punctuation">(</span>std<span class="token double-colon punctuation">::</span>vector<span class="token operator">&lt;</span>std<span class="token double-colon punctuation">::</span>string<span class="token operator">&gt;</span><span class="token operator">&amp;</span> animations<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	ID3DXAnimationSet<span class="token operator">*</span> anim <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>

	<span class="token keyword">for</span> <span class="token punctuation">(</span>size_t i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> m_pAnimControl<span class="token operator">-&gt;</span><span class="token function">GetMaxNumAnimationSets</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		anim <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>
		m_pAnimControl<span class="token operator">-&gt;</span><span class="token function">GetAnimationSet</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token operator">&amp;</span>anim<span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token keyword">if</span> <span class="token punctuation">(</span>anim <span class="token operator">!=</span> <span class="token constant">NULL</span><span class="token punctuation">)</span>
		<span class="token punctuation">{</span>
			animations<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span>anim<span class="token operator">-&gt;</span><span class="token function">GetName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			anim<span class="token operator">-&gt;</span><span class="token function">Release</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="having-multiple-controllers-affecting-the-same-mesh" tabindex="-1"><a class="header-anchor" href="#having-multiple-controllers-affecting-the-same-mesh"><span>Having multiple controllers affecting the same mesh</span></a></h2><p>渲染多个物体，使用同一个mesh数据，但是播放不同的动画。效果如下：</p><figure><img src="`+i+'" alt="Alt text" tabindex="0" loading="lazy"><figcaption>Alt text</figcaption></figure><p>这里使用<code>CloneAnimationController</code>复制多份动画控制器。渲染步骤：</p><ol><li>Call <code>AdvanceTime()</code> for the active animation controller.</li><li>Calculate the world matrix for this character instance.</li><li>Update the combined transformation matrices for the skinned mesh with the world matrix.</li><li>Render the skinned mesh.</li><li>Repeat with the next character instance.</li></ol><p>值得注意的是这里使用的<code>GPU</code>蒙皮，每个人物是分别提交的。直接使用<code>CPU</code>蒙皮的话还是需要多个mesh。直接使用CPU蒙皮如下：</p><figure><img src="'+o+'" alt="Alt text" tabindex="0" loading="lazy"><figcaption>Alt text</figcaption></figure>',22),l=[c];function r(d,u){return s(),a("div",null,l)}const h=n(p,[["render",r],["__file","SkeletalAnimation.html.vue"]]),v=JSON.parse('{"path":"/Animation/CharacterAnimation/SkeletalAnimation.html","title":"Skeletal Animation","lang":"en-US","frontmatter":{"date":"2023-11-04T16:27:21.000Z","tag":["Animation","D3D"]},"headers":[{"level":2,"title":"Keyframe animation basics","slug":"keyframe-animation-basics","link":"#keyframe-animation-basics","children":[]},{"level":2,"title":"Loading animation data","slug":"loading-animation-data","link":"#loading-animation-data","children":[]},{"level":2,"title":"The ID3DXAnimationController","slug":"the-id3dxanimationcontroller","link":"#the-id3dxanimationcontroller","children":[]},{"level":2,"title":"Having multiple controllers affecting the same mesh","slug":"having-multiple-controllers-affecting-the-same-mesh","link":"#having-multiple-controllers-affecting-the-same-mesh","children":[]}],"git":{"createdTime":1699086441000,"updatedTime":1707212040000,"contributors":[{"name":"BanMing","email":"ban-ming@foxmail.com","commits":4},{"name":"wupeng","email":"wupeng_a2484@virtuos.com.cn","commits":2}]},"readingTime":{"minutes":1.3,"words":390},"filePathRelative":"Animation/CharacterAnimation/SkeletalAnimation.md","localizedDate":"November 4, 2023","excerpt":"\\n<h2>Keyframe animation basics</h2>\\n<p>帧动画由一段时间中几个特定时间点和物体姿势组成。如下图：</p>\\n<figure><figcaption>Alt text</figcaption></figure>\\n<p>其中姿势可以由<code>位置</code>，<code>缩放</code>，<code>旋转</code>组成。在DX9中使用<code>D3DXKEY_VECTOR3</code>表示位置和缩放，使用<code>D3DXKEY_QUATERNION</code>表示旋转。</p>\\n<div class=\\"language-cpp\\" data-ext=\\"cpp\\" data-title=\\"cpp\\"><pre class=\\"language-cpp\\"><code><span class=\\"token keyword\\">struct</span> <span class=\\"token class-name\\">D3DXKEY_VECTOR3</span> \\n<span class=\\"token punctuation\\">{</span>\\nFLOAT Time<span class=\\"token punctuation\\">;</span>\\nD3DXVECTOR3 Value<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">struct</span> <span class=\\"token class-name\\">D3DXKEY_QUATERNION</span> \\n<span class=\\"token punctuation\\">{</span>\\nFLOAT Time<span class=\\"token punctuation\\">;</span>\\nD3DXQUATERNION Value<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n</code></pre></div>"}');export{h as comp,v as data};
