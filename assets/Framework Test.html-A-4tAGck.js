const e=JSON.parse('{"key":"v-25a6c420","path":"/GameEngine/Unity/somecode/Framework%20Test.html","title":"Framework Test","lang":"en-US","frontmatter":{"date":"2024-01-27T14:41:00.000Z"},"headers":[{"level":2,"title":"代码放哪里？","slug":"代码放哪里","link":"#代码放哪里","children":[]},{"level":2,"title":"单例测试","slug":"单例测试","link":"#单例测试","children":[]}],"git":{"createdTime":1706337660000,"updatedTime":1706518071000,"contributors":[{"name":"BanMing","email":"ban-ming@foxmail.com","commits":2},{"name":"wupeng","email":"wupeng_a2484@virtuos.com.cn","commits":1}]},"readingTime":{"minutes":1.16,"words":347},"filePathRelative":"GameEngine/Unity/somecode/Framework Test.md","localizedDate":"January 27, 2024","excerpt":"<h1> Framework Test</h1>\\n<h2> 代码放哪里？</h2>\\n<p>在项目中代码是直接新建一个C#的solution，直接生成dll导入unity工程中，这样可以把代码和资源彻底分开，这样也非常适合分远程库。但是有一个致命的问题就是IL2CPP，这样就需要自己接入IL2CPP到C#工程里去。暂时还没有找到相应的教程指导我们生成IL2CPP文件。这里有个最差的想法就是在打包的时候，把代码复制到unity工程中去，这样就可以使用IL2CPP。</p>\\n<p>第二个方案可以使用: <a href=\\"https://docs.unity3d.com/Manual/ScriptCompilationAssemblyDefinitionFiles.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">ScriptCompilationAssemblyDefinitionFiles</a>，官方的程序集分包。</p>"}');export{e as data};
