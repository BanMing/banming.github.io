import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as a,c as s,b as t}from"./app-D53c36U9.js";const o={},p=t(`<h1 id="transforms" tabindex="-1"><a class="header-anchor" href="#transforms" aria-hidden="true">#</a> Transforms</h1><p>Understand what a transform is</p><h2 id="understand-how-to-combine-transforms" tabindex="-1"><a class="header-anchor" href="#understand-how-to-combine-transforms" aria-hidden="true">#</a> Understand how to combine transforms</h2><p>转移子物体到父物体的空间中</p><h2 id="convert-between-transforms-and-matrices" tabindex="-1"><a class="header-anchor" href="#convert-between-transforms-and-matrices" aria-hidden="true">#</a> Convert between transforms and matrices</h2><h2 id="understand-how-to-apply-transforms-to-points-and-vectors" tabindex="-1"><a class="header-anchor" href="#understand-how-to-apply-transforms-to-points-and-vectors" aria-hidden="true">#</a> Understand how to apply transforms to points and vectors</h2><p>获得一个点在一个<code>transform</code>空间的位置。 http://gabormakesgames.com/transforms.html</p><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code>Transform <span class="token function">combine</span><span class="token punctuation">(</span><span class="token keyword">const</span> Transform<span class="token operator">&amp;</span> a<span class="token punctuation">,</span> <span class="token keyword">const</span> Transform<span class="token operator">&amp;</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	Transform out<span class="token punctuation">;</span>

	out<span class="token punctuation">.</span>scale <span class="token operator">=</span> a<span class="token punctuation">.</span>scale <span class="token operator">*</span> b<span class="token punctuation">.</span>scale<span class="token punctuation">;</span>
	out<span class="token punctuation">.</span>rotation <span class="token operator">=</span> b<span class="token punctuation">.</span>rotation <span class="token operator">*</span> a<span class="token punctuation">.</span>rotation<span class="token punctuation">;</span>

	out<span class="token punctuation">.</span>position <span class="token operator">=</span> a<span class="token punctuation">.</span>rotation <span class="token operator">*</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span>scale <span class="token operator">*</span> b<span class="token punctuation">.</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span>
	out<span class="token punctuation">.</span>position <span class="token operator">=</span> a<span class="token punctuation">.</span>position <span class="token operator">+</span> out<span class="token punctuation">.</span>position<span class="token punctuation">;</span>

	<span class="token keyword">return</span> out<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

Matrix <span class="token function">combine</span><span class="token punctuation">(</span>Transform transform<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    Matrix localMatrix <span class="token operator">=</span> <span class="token function">ToMatrix</span><span class="token punctuation">(</span>transform<span class="token punctuation">)</span><span class="token punctuation">;</span>
    Matrix parentMatrix  <span class="token operator">=</span> <span class="token function">ToMatrix</span><span class="token punctuation">(</span>transform<span class="token punctuation">.</span>parent<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> localMatrix <span class="token operator">*</span> parentMatrix<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code>Matrix <span class="token function">GetInParentMatrix</span><span class="token punctuation">(</span>Transform transform<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    Matrix localMatrix <span class="token operator">=</span> <span class="token function">ToMatrix</span><span class="token punctuation">(</span>transform<span class="token punctuation">)</span><span class="token punctuation">;</span>
    Matrix localParentMatrix <span class="token operator">=</span> <span class="token function">ToMatrix</span><span class="token punctuation">(</span>transform<span class="token punctuation">.</span>parent<span class="token punctuation">)</span><span class="token punctuation">;</span>
 
    <span class="token keyword">return</span> localParentMatrix <span class="token operator">*</span> localMatrix<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9),e=[p];function c(r,i){return a(),s("div",null,e)}const d=n(o,[["render",c],["__file","Transforms.html.vue"]]);export{d as default};
