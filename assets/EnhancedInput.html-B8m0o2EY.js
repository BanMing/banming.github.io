import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{e as t,f as a,o as i}from"./app-D6tz6rtV.js";const o="/assets/2023-12-29-12-43-13-BVpmcxeI.png",c="/assets/2023-12-29-14-08-08-K9L_UUPf.png",r="/assets/2023-12-29-14-13-12-C2VU7Kk8.png",p="/assets/2023-12-29-13-26-19-kLuPBW-G.png",l="/assets/2023-12-29-13-19-58-BESFuQ1W.png",s="/assets/2023-12-29-13-23-11-Bq_QMwFB.png",d="/assets/2023-12-29-13-35-59-Cn1m1YQY.png",g="/assets/2023-12-29-12-54-08-BSZa3kf2.png",u="/assets/2023-12-29-13-02-27-5nDnNM1c.png",h="/assets/2023-12-29-13-16-20-B2WqY4bZ.png",f="/assets/2023-12-29-13-39-29-QkRqqjAb.png",m="/assets/2023-12-29-13-43-25-B0tGiSbD.png",x="/assets/2023-12-29-14-05-20-DQ44nSg_.png",b={};function I(_,e){return i(),t("div",null,e[0]||(e[0]=[a('<h1 id="enhanced-input" tabindex="-1"><a class="header-anchor" href="#enhanced-input"><span>Enhanced Input</span></a></h1><h2 id="enable" tabindex="-1"><a class="header-anchor" href="#enable"><span>Enable</span></a></h2><p>在<code>Build.cs</code>中的<code>PublicDependencyModuleNames</code>添加<code>EnhancedInput</code>。<br> 且需要在<code>Project Setting</code>中确认默认的输入类型是Enhanced Input:</p><figure><img src="'+o+'" alt="Alt text" tabindex="0" loading="lazy"><figcaption>Alt text</figcaption></figure><h2 id="core" tabindex="-1"><a class="header-anchor" href="#core"><span>Core</span></a></h2><p>主要有6大模块组成：</p><ul><li>UInputAction，输入动作，按键转换为游戏内的数值。 <code>IA</code></li><li>UInputModifier，输入修改器，对输入动作中的数值做出特定修改。<code>IM</code></li><li>UInputTrigger，输入触发器，什么时候触发按键后的函数。<code>IT</code></li><li>UInputMappingContext，输入映射上下文环境，绑定输入动作到按键和执行的函数。<code>IMC</code></li><li>UEnhancedPlayerInput，输入处理，把按键关联上输入动作。</li><li>UEnhancedInputComponent，输入组件，把输入动作关联上执行函数。</li></ul><h2 id="how-to-use" tabindex="-1"><a class="header-anchor" href="#how-to-use"><span>How To Use</span></a></h2><figure><img src="'+c+'" alt="Alt text" tabindex="0" loading="lazy"><figcaption>Alt text</figcaption></figure><figure><img src="'+r+'" alt="Alt text" tabindex="0" loading="lazy"><figcaption>Alt text</figcaption></figure><h2 id="input-action" tabindex="-1"><a class="header-anchor" href="#input-action"><span>Input Action</span></a></h2><figure><img src="'+p+'" alt="Alt text" tabindex="0" loading="lazy"><figcaption>Alt text</figcaption></figure><h2 id="input-modifier" tabindex="-1"><a class="header-anchor" href="#input-modifier"><span>Input Modifier</span></a></h2><figure><img src="'+l+'" alt="Alt text" tabindex="0" loading="lazy"><figcaption>Alt text</figcaption></figure><p>在<code>UInputAction</code>和<code>UInputMappingContext</code>中都可以对一个输入动作设置修改器，在<code>IMC</code>中是全局配置。如果两个同时都配置了，两个都会生效，先执行<code>IMC</code>，在执行<code>IA</code>。</p><h2 id="input-trigger" tabindex="-1"><a class="header-anchor" href="#input-trigger"><span>Input Trigger</span></a></h2><figure><img src="'+s+'" alt="Alt text" tabindex="0" loading="lazy"><figcaption>Alt text</figcaption></figure><h2 id="input-mapping-context" tabindex="-1"><a class="header-anchor" href="#input-mapping-context"><span>Input Mapping Context</span></a></h2><figure><img src="'+d+'" alt="Alt text" tabindex="0" loading="lazy"><figcaption>Alt text</figcaption></figure><h2 id="framework" tabindex="-1"><a class="header-anchor" href="#framework"><span>Framework</span></a></h2><p>在UE中的收到按键指令后执行流程如下：先压入Pawn，再压入关卡蓝图，接着PlayerController最后EnableInput的Actors。</p><figure><img src="'+g+'" alt="框架" tabindex="0" loading="lazy"><figcaption>框架</figcaption></figure><p>在<code>UEnhancedPlayerInput</code>中通过<code>UInputMappingContext</code>来触发按键和输入动作。</p><figure><img src="'+u+'" alt="Alt text" tabindex="0" loading="lazy"><figcaption>Alt text</figcaption></figure><p>在<code>EnhancedInputComponent</code>中存储<code>InputAction</code>和回调的映射，使用<code>BindAction</code>来实现绑定。</p><figure><img src="'+h+'" alt="Alt text" tabindex="0" loading="lazy"><figcaption>Alt text</figcaption></figure><p>总体流程如下：</p><figure><img src="'+f+'" alt="Alt text" tabindex="0" loading="lazy"><figcaption>Alt text</figcaption></figure><figure><img src="'+m+'" alt="Alt text" tabindex="0" loading="lazy"><figcaption>Alt text</figcaption></figure><p>AddMappingContext流程：</p><figure><img src="'+x+`" alt="Alt text" tabindex="0" loading="lazy"><figcaption>Alt text</figcaption></figure><h2 id="debug" tabindex="-1"><a class="header-anchor" href="#debug"><span>Debug</span></a></h2><p>调试命令：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">showdebug enhancedinput</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="notes" tabindex="-1"><a class="header-anchor" href="#notes"><span>Notes</span></a></h2><ul><li><a href="https://docs.unrealengine.com/5.0/zh-CN/enhanced-input-in-unreal-engine/" target="_blank" rel="noopener noreferrer">https://docs.unrealengine.com/5.0/zh-CN/enhanced-input-in-unreal-engine/</a></li><li><a href="https://zhuanlan.zhihu.com/p/470949422" target="_blank" rel="noopener noreferrer">https://zhuanlan.zhihu.com/p/470949422</a></li><li><a href="https://zhuanlan.zhihu.com/p/668048398" target="_blank" rel="noopener noreferrer">https://zhuanlan.zhihu.com/p/668048398</a></li><li><a href="https://zhuanlan.zhihu.com/p/640271313" target="_blank" rel="noopener noreferrer">https://zhuanlan.zhihu.com/p/640271313</a></li><li><a href="https://www.bilibili.com/video/BV14r4y1r7nz/" target="_blank" rel="noopener noreferrer">https://www.bilibili.com/video/BV14r4y1r7nz/</a></li></ul>`,36)]))}const E=n(b,[["render",I],["__file","EnhancedInput.html.vue"]]),U=JSON.parse('{"path":"/GameEngine/Unreal/manual/EnhancedInput.html","title":"Enhanced Input","lang":"en-US","frontmatter":{"date":"2023-12-29T18:03:06.000Z","tag":["Unreal Engine"]},"git":{"createdTime":1703844186000,"updatedTime":1707213711000,"contributors":[{"name":"BanMing","username":"BanMing","email":"ban-ming@foxmail.com","commits":2,"url":"https://github.com/BanMing"},{"name":"wupeng","username":"wupeng","email":"wupeng_a2484@virtuos.com.cn","commits":2,"url":"https://github.com/wupeng"}]},"readingTime":{"minutes":1.46,"words":439},"filePathRelative":"GameEngine/Unreal/manual/EnhancedInput.md","localizedDate":"December 29, 2023","excerpt":"\\n<h2>Enable</h2>\\n<p>在<code>Build.cs</code>中的<code>PublicDependencyModuleNames</code>添加<code>EnhancedInput</code>。<br>\\n且需要在<code>Project Setting</code>中确认默认的输入类型是Enhanced Input:</p>\\n<figure><figcaption>Alt text</figcaption></figure>\\n<h2>Core</h2>\\n<p>主要有6大模块组成：</p>\\n<ul>\\n<li>UInputAction，输入动作，按键转换为游戏内的数值。 <code>IA</code></li>\\n<li>UInputModifier，输入修改器，对输入动作中的数值做出特定修改。<code>IM</code></li>\\n<li>UInputTrigger，输入触发器，什么时候触发按键后的函数。<code>IT</code></li>\\n<li>UInputMappingContext，输入映射上下文环境，绑定输入动作到按键和执行的函数。<code>IMC</code></li>\\n<li>UEnhancedPlayerInput，输入处理，把按键关联上输入动作。</li>\\n<li>UEnhancedInputComponent，输入组件，把输入动作关联上执行函数。</li>\\n</ul>"}');export{E as comp,U as data};
