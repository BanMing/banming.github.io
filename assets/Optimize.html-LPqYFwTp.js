import{_ as t}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as e,c as a,e as i}from"./app-U_EQjXEx.js";const o={},c=i('<h1 id="优化" tabindex="-1"><a class="header-anchor" href="#优化" aria-hidden="true">#</a> 优化</h1><h2 id="字典gc" tabindex="-1"><a class="header-anchor" href="#字典gc" aria-hidden="true">#</a> 字典GC</h2><p>当枚举和结构体为字典索引时，调用<code>Contain</code>方法是会拆箱装箱，则会出现GC。解决方案：</p><ul><li>把枚举转成int类型</li><li>结构体继承IEquatable接口，然后在创建一个继承IEqualityComparer的类用来对结构体作比较。把比较类实例化一个全局变量，在字典初始化时把全局比较工具对象传入字典即可。</li></ul><p>https://blog.csdn.net/qq_36576410/article/details/87909947 https://answer.uwa4d.com/question/59f716c0727b4a5d10c6dfef https://stackoverflow.com/questions/50303424/why-is-dictionary-containskey-tostring-causing-gc-alloc https://forum.unity.com/threads/solved-question-about-dictionary-any-vs-dictionary-containskey.589939/</p>',5),n=[c];function s(r,d){return e(),a("div",null,n)}const u=t(o,[["render",s],["__file","Optimize.html.vue"]]);export{u as default};
