import{_ as r}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as o,o as i,c as s,a as t,b as e,d as n,e as c}from"./app-r28LZu7J.js";const l={},h=t("h1",{id:"cs50-s-introduction-to-artificial-intelligence-with-python",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#cs50-s-introduction-to-artificial-intelligence-with-python","aria-hidden":"true"},"#"),e(" CS50’s Introduction to Artificial Intelligence with Python")],-1),d={href:"https://cs50.harvard.edu/ai/2024/",target:"_blank",rel:"noopener noreferrer"},u=t("h2",{id:"search",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#search","aria-hidden":"true"},"#"),e(" Search")],-1),p={href:"https://cdn.cs50.net/ai/2020/spring/lectures/0/lecture0.pdf",target:"_blank",rel:"noopener noreferrer"},g=c('<p>Search problems involve an agent that is given an initial state and a goal state, and it returns a solution of how to get from the former to the latter. A navigator app uses a typical search process, where the agent (the thinking part of the program) receives as input your current location and your desired destination, and, based on a search algorithm, returns a suggested path. However, there are many other forms of search problems, like puzzles or mazes.</p><figure><img src="https://cs50.harvard.edu/ai/2024/notes/0/15puzzle.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>Finding a solution to a 15 puzzle would require the use of a search algorithm.</p><ul><li>Agent: An entity that perceives its environment and acts upon that environment. In a navigator app, for example, the agent would be a representation of a car that needs to decide on which actions to take to arrive at the destination.</li><li>State: a configuration of the agent and its environment <ul><li>Initial State: The state from which the search algorithm starts. In a navigator app, that would be the current location.</li></ul></li><li>actions: choices that can be made in a state. <strong>ACTION(s)</strong> returns the set of actions that can be executed in state <strong>s</strong></li><li>transition model: a description of what state results from performing any applicable action in any state. <strong>RESULT(s,a)</strong> retrurns the state resulting from performing action <strong>a</strong> in state <strong>s</strong></li></ul>',4);function f(m,_){const a=o("ExternalLinkIcon");return i(),s("div",null,[h,t("p",null,[t("a",d,[e("课程地址"),n(a)])]),u,t("ul",null,[t("li",null,[t("a",p,[e("Slides"),n(a)])])]),g])}const w=r(l,[["render",f],["__file","CS50 Introduction to Artificial Intelligence with Python.html.vue"]]);export{w as default};
