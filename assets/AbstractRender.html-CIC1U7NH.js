import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as r,o as s}from"./app-BpAZDfdM.js";const o={};function n(i,e){return s(),a("div",null,e[0]||(e[0]=[r('<h1 id="abstract-renderer" tabindex="-1"><a class="header-anchor" href="#abstract-renderer"><span>Abstract Renderer</span></a></h1><h2 id="how-to-create-shader" tabindex="-1"><a class="header-anchor" href="#how-to-create-shader"><span>How to create shader</span></a></h2><h2 id="how-to-store-mesh-data-in-buffers" tabindex="-1"><a class="header-anchor" href="#how-to-store-mesh-data-in-buffers"><span>How to store mesh data in buffers</span></a></h2><p>使用attribute来存储这些信息，属于每个顶点的信息：</p><ul><li>Position</li><li>Normal</li><li>UV or texture coordinate</li><li>Color</li></ul><h2 id="how-to-bind-those-buffers-as-shader-attributes" tabindex="-1"><a class="header-anchor" href="#how-to-bind-those-buffers-as-shader-attributes"><span>How to bind those buffers as shader attributes</span></a></h2><h2 id="how-to-send-uniform-data-to-a-shader" tabindex="-1"><a class="header-anchor" href="#how-to-send-uniform-data-to-a-shader"><span>How to send uniform data to a shader</span></a></h2><p>像是常量，只需要设置一次</p><h2 id="how-to-render-with-index-buffers" tabindex="-1"><a class="header-anchor" href="#how-to-render-with-index-buffers"><span>How to render with index buffers</span></a></h2><p>跟attribute相像，可以用来画primitives，这个是用来存储模型的几何数据。</p><h2 id="how-to-load-textures" tabindex="-1"><a class="header-anchor" href="#how-to-load-textures"><span>How to load textures</span></a></h2><p>使用stb_image加载图片信息，再把图片传给gpu，生成mipmap。</p><h2 id="basic-opengl-concepts" tabindex="-1"><a class="header-anchor" href="#basic-opengl-concepts"><span>Basic OpenGL concepts</span></a></h2><h2 id="creating-and-working-with-simple-shaders" tabindex="-1"><a class="header-anchor" href="#creating-and-working-with-simple-shaders"><span>Creating and working with simple shaders</span></a></h2>',14)]))}const l=t(o,[["render",n],["__file","AbstractRender.html.vue"]]),c=JSON.parse('{"path":"/Animation/gameOpenGL/AbstractRender.html","title":"Abstract Renderer","lang":"en-US","frontmatter":{"date":"2022-03-23T00:26:53.000Z","tag":["OpenGL"],"order":6},"headers":[{"level":2,"title":"How to create shader","slug":"how-to-create-shader","link":"#how-to-create-shader","children":[]},{"level":2,"title":"How to store mesh data in buffers","slug":"how-to-store-mesh-data-in-buffers","link":"#how-to-store-mesh-data-in-buffers","children":[]},{"level":2,"title":"How to bind those buffers as shader attributes","slug":"how-to-bind-those-buffers-as-shader-attributes","link":"#how-to-bind-those-buffers-as-shader-attributes","children":[]},{"level":2,"title":"How to send uniform data to a shader","slug":"how-to-send-uniform-data-to-a-shader","link":"#how-to-send-uniform-data-to-a-shader","children":[]},{"level":2,"title":"How to render with index buffers","slug":"how-to-render-with-index-buffers","link":"#how-to-render-with-index-buffers","children":[]},{"level":2,"title":"How to load textures","slug":"how-to-load-textures","link":"#how-to-load-textures","children":[]},{"level":2,"title":"Basic OpenGL concepts","slug":"basic-opengl-concepts","link":"#basic-opengl-concepts","children":[]},{"level":2,"title":"Creating and working with simple shaders","slug":"creating-and-working-with-simple-shaders","link":"#creating-and-working-with-simple-shaders","children":[]}],"git":{"createdTime":1647966413000,"updatedTime":1707215246000,"contributors":[{"name":"wupeng","email":"wupeng_a2484@virtuos.com.cn","commits":3},{"name":"BanMing","email":"ban-ming@foxmail.com","commits":2}]},"readingTime":{"minutes":0.46,"words":139},"filePathRelative":"Animation/gameOpenGL/AbstractRender.md","localizedDate":"March 23, 2022","excerpt":"\\n<h2>How to create shader</h2>\\n<h2>How to store mesh data in buffers</h2>\\n<p>使用attribute来存储这些信息，属于每个顶点的信息：</p>\\n<ul>\\n<li>Position</li>\\n<li>Normal</li>\\n<li>UV or texture coordinate</li>\\n<li>Color</li>\\n</ul>\\n<h2>How to bind those buffers as shader attributes</h2>\\n<h2>How to send uniform data to a shader</h2>"}');export{l as comp,c as data};
