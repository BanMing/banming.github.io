const l=JSON.parse('{"key":"v-a81f7200","path":"/Graphic/basic/raster/shading.html","title":"着色","lang":"en-US","frontmatter":{"date":"2021-03-01T18:53:55.000Z"},"headers":[{"level":2,"title":"标准光照模型","slug":"标准光照模型","link":"#标准光照模型","children":[]},{"level":2,"title":"漫反射","slug":"漫反射","link":"#漫反射","children":[{"level":3,"title":"光的方向","slug":"光的方向","link":"#光的方向","children":[]},{"level":3,"title":"光的强度","slug":"光的强度","link":"#光的强度","children":[]},{"level":3,"title":"兰伯特光照模型","slug":"兰伯特光照模型","link":"#兰伯特光照模型","children":[]}]},{"level":2,"title":"高光反射","slug":"高光反射","link":"#高光反射","children":[{"level":3,"title":"Phong","slug":"phong","link":"#phong","children":[]},{"level":3,"title":"Blinn","slug":"blinn","link":"#blinn","children":[]}]},{"level":2,"title":"环境光","slug":"环境光","link":"#环境光","children":[]},{"level":2,"title":"Blinn Phong 展示","slug":"blinn-phong-展示","link":"#blinn-phong-展示","children":[]},{"level":2,"title":"逐像素还是逐顶点","slug":"逐像素还是逐顶点","link":"#逐像素还是逐顶点","children":[{"level":3,"title":"平面着色","slug":"平面着色","link":"#平面着色","children":[]},{"level":3,"title":"Phong着色","slug":"phong着色","link":"#phong着色","children":[]},{"level":3,"title":"高洛德着色","slug":"高洛德着色","link":"#高洛德着色","children":[]},{"level":3,"title":"对比","slug":"对比","link":"#对比","children":[]}]},{"level":2,"title":"简单实现","slug":"简单实现","link":"#简单实现","children":[]}],"git":{"createdTime":1699280150000,"updatedTime":1706518071000,"contributors":[{"name":"BanMing","email":"ban-ming@foxmail.com","commits":2},{"name":"wupeng","email":"wupeng_a2484@virtuos.com.cn","commits":1}]},"readingTime":{"minutes":10.53,"words":3159},"filePathRelative":"Graphic/basic/raster/shading.md","localizedDate":"March 1, 2021","excerpt":"<h1> 着色</h1>\\n<p>我们在前面已经把图像三角形化了，明白了三角形的绘制规则，这样我们可以把一个物体画出来了，如下图：</p>\\n\\n<p>我们看到这个图是感受不出来是一个3d的模型，就是看起来很不真实，我们可以认出这个是个牛的模型，但是不知道这个是什么牛。</p>\\n<p>我们现实世界中看一个物体认为他是三维物体，是因为光照的关系，让物体表面有了明暗的差别，让我们知道是什么牛是因为物体表面的质感，也就是材质。</p>\\n<p>如果我们要在电脑上实现明暗的差别，简单的说就是为我们的渲染世界加一个灯，然后我们根据灯的一些属性（位置，方向，强度，颜色等）接合我们模型的颜色和位置，就可以产生明暗差别的效果（高光，漫反射，环境光）。如下图：</p>"}');export{l as data};
