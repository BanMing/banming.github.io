import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,o as s,a as e}from"./app-BvZ6rKdq.js";const p={},t=e(`<h1 id="ray-tracing-view-transform" tabindex="-1"><a class="header-anchor" href="#ray-tracing-view-transform"><span>ray tracing view transform</span></a></h1><p>they will project any point on a given pixel’s viewing ray back to that pixel’s position in image space</p><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token keyword">float</span> ndcPixelx <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0.5f</span> <span class="token operator">+</span> i<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span>scene<span class="token punctuation">.</span>width <span class="token operator">*</span> <span class="token number">1.f</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">float</span> ndcPixely <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0.5f</span> <span class="token operator">+</span> j<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span>scene<span class="token punctuation">.</span>height <span class="token operator">*</span> <span class="token number">1.f</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// screen [-1,1],keep y &gt; 0  </span>
<span class="token comment">// screen orgin is the center </span>
<span class="token comment">// ndc、raster orgin is the left-top</span>
<span class="token keyword">float</span> screenPixelx <span class="token operator">=</span> <span class="token number">2</span> <span class="token operator">*</span> ndcPixelx <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">float</span> screenPixely <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">-</span> <span class="token number">2</span> <span class="token operator">*</span> ndcPixely<span class="token punctuation">;</span>

<span class="token comment">// world space</span>
<span class="token comment">// camera-to-world matrix</span>
<span class="token keyword">float</span> tanFov <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span><span class="token function">tan</span><span class="token punctuation">(</span>scene<span class="token punctuation">.</span>fov <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">*</span> M_PI <span class="token operator">/</span> <span class="token number">180</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">float</span> cameraPixelx <span class="token operator">=</span> screenPixelx <span class="token operator">*</span> imageAspectRatio <span class="token operator">*</span> tanFov<span class="token punctuation">;</span>
<span class="token keyword">float</span> cameraPixely <span class="token operator">=</span> screenPixely <span class="token operator">*</span> tanFov<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),o=[t];function c(l,r){return s(),a("div",null,o)}const u=n(p,[["render",c],["__file","viewing.html.vue"]]),m=JSON.parse('{"path":"/Graphic/basic/raytracing/viewing.html","title":"ray tracing view transform","lang":"en-US","frontmatter":{"date":"2020-10-22T13:46:37.000Z","tag":["Graphic"]},"headers":[],"git":{"createdTime":1603345597000,"updatedTime":1707214279000,"contributors":[{"name":"BanMing","email":"ban-ming@foxmail.com","commits":2},{"name":"wupeng","email":"wupeng_a2484@virtuos.com.cn","commits":2}]},"readingTime":{"minutes":0.36,"words":107},"filePathRelative":"Graphic/basic/raytracing/viewing.md","localizedDate":"October 22, 2020","excerpt":"\\n<p>they will project any point on\\na given pixel’s viewing ray back to that pixel’s position in image space</p>\\n<div class=\\"language-cpp\\" data-ext=\\"cpp\\" data-title=\\"cpp\\"><pre class=\\"language-cpp\\"><code><span class=\\"token keyword\\">float</span> ndcPixelx <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span><span class=\\"token number\\">0.5f</span> <span class=\\"token operator\\">+</span> i<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">/</span> <span class=\\"token punctuation\\">(</span>scene<span class=\\"token punctuation\\">.</span>width <span class=\\"token operator\\">*</span> <span class=\\"token number\\">1.f</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">float</span> ndcPixely <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span><span class=\\"token number\\">0.5f</span> <span class=\\"token operator\\">+</span> j<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">/</span> <span class=\\"token punctuation\\">(</span>scene<span class=\\"token punctuation\\">.</span>height <span class=\\"token operator\\">*</span> <span class=\\"token number\\">1.f</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token comment\\">// screen [-1,1],keep y &gt; 0  </span>\\n<span class=\\"token comment\\">// screen orgin is the center </span>\\n<span class=\\"token comment\\">// ndc、raster orgin is the left-top</span>\\n<span class=\\"token keyword\\">float</span> screenPixelx <span class=\\"token operator\\">=</span> <span class=\\"token number\\">2</span> <span class=\\"token operator\\">*</span> ndcPixelx <span class=\\"token operator\\">-</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">float</span> screenPixely <span class=\\"token operator\\">=</span> <span class=\\"token number\\">1</span> <span class=\\"token operator\\">-</span> <span class=\\"token number\\">2</span> <span class=\\"token operator\\">*</span> ndcPixely<span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token comment\\">// world space</span>\\n<span class=\\"token comment\\">// camera-to-world matrix</span>\\n<span class=\\"token keyword\\">float</span> tanFov <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">float</span><span class=\\"token punctuation\\">)</span><span class=\\"token function\\">tan</span><span class=\\"token punctuation\\">(</span>scene<span class=\\"token punctuation\\">.</span>fov <span class=\\"token operator\\">/</span> <span class=\\"token number\\">2</span> <span class=\\"token operator\\">*</span> M_PI <span class=\\"token operator\\">/</span> <span class=\\"token number\\">180</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">float</span> cameraPixelx <span class=\\"token operator\\">=</span> screenPixelx <span class=\\"token operator\\">*</span> imageAspectRatio <span class=\\"token operator\\">*</span> tanFov<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">float</span> cameraPixely <span class=\\"token operator\\">=</span> screenPixely <span class=\\"token operator\\">*</span> tanFov<span class=\\"token punctuation\\">;</span>\\n</code></pre></div>"}');export{u as comp,m as data};
