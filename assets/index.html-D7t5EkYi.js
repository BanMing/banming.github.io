import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,o as s,a as e}from"./app-Cbf1m4W0.js";const t={},o=e(`<h1 id="motion-matching" tabindex="-1"><a class="header-anchor" href="#motion-matching"><span>Motion Matching</span></a></h1><h2 id="播放动画" tabindex="-1"><a class="header-anchor" href="#播放动画"><span>播放动画</span></a></h2><p>一段播放动画的代码：</p><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token comment">// start</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>walking <span class="token operator">&amp;&amp;</span> wantToWalk<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">PlayAnim</span><span class="token punctuation">(</span>StartAnim<span class="token punctuation">)</span><span class="token punctuation">;</span>
    walking <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// walk loop</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">IsPlaying</span><span class="token punctuation">(</span>StartAnim<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">IsAtEndOfAnim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">PlayAnim</span><span class="token punctuation">(</span>WalkLoopAnim<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// stop</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>walking <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>wantToWalk<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">PlayAnim</span><span class="token punctuation">(</span>StopAnim<span class="token punctuation">)</span><span class="token punctuation">;</span>
    walking <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>同样可以使用状态机，可视化：</p><p>但如果动画过多就会出现下图：</p><p>当然还有混合树的情况播放动画：</p><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>speed <span class="token operator">&gt;</span> <span class="token number">3.0f</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">PlayAnim</span><span class="token punctuation">(</span>RunAnim<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>speed <span class="token operator">&gt;</span> <span class="token number">0.0f</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">PlayAnim</span><span class="token punctuation">(</span>WalkAnim<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">else</span>
<span class="token punctuation">{</span>
    <span class="token function">PlayAnim</span><span class="token punctuation">(</span>IdleAnim<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>同样也可以使用可视化工具来处理：</p><h3 id="多个参数控制动画" tabindex="-1"><a class="header-anchor" href="#多个参数控制动画"><span>多个参数控制动画</span></a></h3><p>如果有多个数据都会影响着动画的播放，就是需要配表来控制标准选择动画，然后实时传递值给动画控制器。这个逻辑就是动画蓝图的功能。</p><h3 id="改变固定动画播放路径" tabindex="-1"><a class="header-anchor" href="#改变固定动画播放路径"><span>改变固定动画播放路径</span></a></h3><p><a href="https://research.cs.wisc.edu/graphics/Papers/Gleicher/Mocap/mograph.pdf" target="_blank" rel="noopener noreferrer">Motion Graphs</a></p><h3 id="选择下一个动画" tabindex="-1"><a class="header-anchor" href="#选择下一个动画"><span>选择下一个动画</span></a></h3><p><a href="https://gdcvault.com/play/1017727/Reinforcement-Learning-Based-Character-Locomotion" target="_blank" rel="noopener noreferrer">Reinforcement Learning Based Character Locomotion in Hitman: Absolution</a></p><p><a href="https://grail.cs.washington.edu/projects/motion-fields/motion-fields.pdf" target="_blank" rel="noopener noreferrer">Motion Fields for Interactive Character Animation</a></p><p>Motion Fields 性能消耗非常大，这里只使用了跳转到其他动画的任何一帧。</p><h3 id="选择正确的开始和结束时间" tabindex="-1"><a class="header-anchor" href="#选择正确的开始和结束时间"><span>选择正确的开始和结束时间</span></a></h3><ul><li>姿势匹配</li><li>速度匹配</li><li>精确的末端位置匹配</li></ul><h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介</span></a></h2><p>每一帧都去寻找最合适的动画，然后跳转播放。</p><h3 id="mocap" tabindex="-1"><a class="header-anchor" href="#mocap"><span>Mocap</span></a></h3><h3 id="code" tabindex="-1"><a class="header-anchor" href="#code"><span>Code</span></a></h3><h3 id="trick-posematch-only-a-few-bones" tabindex="-1"><a class="header-anchor" href="#trick-posematch-only-a-few-bones"><span>Trick: Posematch only a few bones</span></a></h3><ul><li>Local velocity</li><li>Feet positions</li><li>Feet velocities</li><li>Weapon position</li></ul><h3 id="how-to-follow-a-desired-trajectory" tabindex="-1"><a class="header-anchor" href="#how-to-follow-a-desired-trajectory"><span>How to follow a desired trajectory?</span></a></h3><h3 id="match-more-things" tabindex="-1"><a class="header-anchor" href="#match-more-things"><span>Match more things</span></a></h3><h3 id="optimizations" tabindex="-1"><a class="header-anchor" href="#optimizations"><span>Optimizations</span></a></h3><ul><li>LOD</li><li>KD-Tree</li><li>Motion Shaders</li></ul><h3 id="trajectory-simulation-choices" tabindex="-1"><a class="header-anchor" href="#trajectory-simulation-choices"><span>Trajectory Simulation Choices</span></a></h3><ul><li>Displacement from Animation?</li><li>Displacement from Simulation?</li></ul><h1 id="reference" tabindex="-1"><a class="header-anchor" href="#reference"><span>Reference</span></a></h1><ul><li>https://gdcvault.com/play/1023280/Motion-Matching-and-The-Road</li><li>https://ubm-twvideo01.s3.amazonaws.com/o1/vault/gdc2016/Presentations/Clavet_Simon_MotionMatching.pdf</li><li>https://research.cs.wisc.edu/graphics/Papers/Gleicher/Mocap/mograph.pdf</li></ul>`,33),p=[o];function i(l,c){return s(),a("div",null,p)}const d=n(t,[["render",i],["__file","index.html.vue"]]),k=JSON.parse('{"path":"/Animation/MotionMatching/","title":"Motion Matching","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"播放动画","slug":"播放动画","link":"#播放动画","children":[{"level":3,"title":"多个参数控制动画","slug":"多个参数控制动画","link":"#多个参数控制动画","children":[]},{"level":3,"title":"改变固定动画播放路径","slug":"改变固定动画播放路径","link":"#改变固定动画播放路径","children":[]},{"level":3,"title":"选择下一个动画","slug":"选择下一个动画","link":"#选择下一个动画","children":[]},{"level":3,"title":"选择正确的开始和结束时间","slug":"选择正确的开始和结束时间","link":"#选择正确的开始和结束时间","children":[]}]},{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[{"level":3,"title":"Mocap","slug":"mocap","link":"#mocap","children":[]},{"level":3,"title":"Code","slug":"code","link":"#code","children":[]},{"level":3,"title":"Trick: Posematch only a few bones","slug":"trick-posematch-only-a-few-bones","link":"#trick-posematch-only-a-few-bones","children":[]},{"level":3,"title":"How to follow a desired trajectory?","slug":"how-to-follow-a-desired-trajectory","link":"#how-to-follow-a-desired-trajectory","children":[]},{"level":3,"title":"Match more things","slug":"match-more-things","link":"#match-more-things","children":[]},{"level":3,"title":"Optimizations","slug":"optimizations","link":"#optimizations","children":[]},{"level":3,"title":"Trajectory Simulation Choices","slug":"trajectory-simulation-choices","link":"#trajectory-simulation-choices","children":[]}]}],"git":{"createdTime":1725877412000,"updatedTime":1725877412000,"contributors":[{"name":"ban-ming@foxmail.com","email":"ban-ming@foxmail.com","commits":1}]},"readingTime":{"minutes":1.17,"words":352},"filePathRelative":"Animation/MotionMatching/README.md","localizedDate":"September 9, 2024","excerpt":"\\n<h2>播放动画</h2>\\n<p>一段播放动画的代码：</p>\\n<div class=\\"language-cpp\\" data-ext=\\"cpp\\" data-title=\\"cpp\\"><pre class=\\"language-cpp\\"><code><span class=\\"token comment\\">// start</span>\\n<span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">!</span>walking <span class=\\"token operator\\">&amp;&amp;</span> wantToWalk<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token function\\">PlayAnim</span><span class=\\"token punctuation\\">(</span>StartAnim<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    walking <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">true</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token comment\\">// walk loop</span>\\n<span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token function\\">IsPlaying</span><span class=\\"token punctuation\\">(</span>StartAnim<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">&amp;&amp;</span> <span class=\\"token function\\">IsAtEndOfAnim</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token function\\">PlayAnim</span><span class=\\"token punctuation\\">(</span>WalkLoopAnim<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token comment\\">// stop</span>\\n<span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>walking <span class=\\"token operator\\">&amp;&amp;</span> <span class=\\"token operator\\">!</span>wantToWalk<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token function\\">PlayAnim</span><span class=\\"token punctuation\\">(</span>StopAnim<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    walking <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">false</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre></div>"}');export{d as comp,k as data};
