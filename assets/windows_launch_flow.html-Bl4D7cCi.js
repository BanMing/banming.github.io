import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,o as a,a as i}from"./app-DlGZ34jr.js";const t="/assets/2023-04-25_10-56-DTYtd2j7.png",p={},l=i('<h1 id="example-windows-launch-flow" tabindex="-1"><a class="header-anchor" href="#example-windows-launch-flow"><span>Example Windows Launch Flow</span></a></h1><h2 id="create-window" tabindex="-1"><a class="header-anchor" href="#create-window"><span>Create Window</span></a></h2><p>文件为：<code>bgfx.cmake\\bgfx\\examples\\common\\entry\\entry_windows.cpp</code>，入口函数如下：</p><figure><img src="'+t+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>在 <code>Context::run</code> 函数中创建Windows的窗口以及监听窗口事件，与此同时创建一个线程来开启 <code>bgfx::entry::main</code> 方法。</p><h2 id="bgfx-entry-main" tabindex="-1"><a class="header-anchor" href="#bgfx-entry-main"><span>bgfx::entry::main</span></a></h2><p>该方法首先初始化以下模块：</p><ul><li>cmdInit</li><li>input <ul><li>inputInit</li><li>inputAddBindings</li></ul></li><li>windows info</li></ul><p>然后启动<code>entry::AppI</code>程序。</p><h2 id="launch-entry-appi" tabindex="-1"><a class="header-anchor" href="#launch-entry-appi"><span>Launch entry::AppI</span></a></h2><p>在自己的脚本里必须实现，以下函数：</p><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token keyword">int</span> <span class="token function">_main_</span><span class="token punctuation">(</span><span class="token keyword">int</span> _argc<span class="token punctuation">,</span> <span class="token keyword">char</span><span class="token operator">*</span><span class="token operator">*</span> _argv<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
   <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以直接在该函数里实例化一个应用，然后调用<code>entry::runApp</code>，来启动应用。</p><p>如果已经实例化<code>AppI</code>对象，启动<code>AppI</code>有两种方式：</p><ul><li>多个应用，使用命令行传入App名字来判断启动那个</li><li>一个时，直接运行<code>entry::runApp</code></li></ul><h2 id="entry-appi-init" tabindex="-1"><a class="header-anchor" href="#entry-appi-init"><span>entry::AppI::init</span></a></h2><ul><li>初始化宽度，调试等级...</li><li>bgfx::init(init)</li><li>bgfx::setViewClear(0...)</li><li>imguiCreate()</li></ul><h2 id="entry-appi-shutdown" tabindex="-1"><a class="header-anchor" href="#entry-appi-shutdown"><span>entry::AppI::shutdown</span></a></h2><ul><li>imguiDestroy()</li><li>bgfx::shutdown()</li></ul><h2 id="entry-appi-update" tabindex="-1"><a class="header-anchor" href="#entry-appi-update"><span>entry::AppI::update</span></a></h2><ul><li>entry::processEvents(...)</li><li>bgfx::setViewRect(..)</li><li>bgfx::touch(...): submit an empty primitive for rendering.</li><li>commit frame buffer...</li><li>bgfx::frame(): advance to next frame</li><li>imguiBeginFrame()</li><li>custom imgui...</li><li>imguiEndFrame()</li></ul>`,21),s=[l];function r(o,c){return a(),e("div",null,s)}const h=n(p,[["render",r],["__file","windows_launch_flow.html.vue"]]),m=JSON.parse('{"path":"/Graphic/bgfx/windows_launch_flow.html","title":"Example Windows Launch Flow","lang":"en-US","frontmatter":{"date":"2023-04-27T15:24:16.000Z","tag":["Graphic"]},"headers":[{"level":2,"title":"Create Window","slug":"create-window","link":"#create-window","children":[]},{"level":2,"title":"bgfx::entry::main","slug":"bgfx-entry-main","link":"#bgfx-entry-main","children":[]},{"level":2,"title":"Launch entry::AppI","slug":"launch-entry-appi","link":"#launch-entry-appi","children":[]},{"level":2,"title":"entry::AppI::init","slug":"entry-appi-init","link":"#entry-appi-init","children":[]},{"level":2,"title":"entry::AppI::shutdown","slug":"entry-appi-shutdown","link":"#entry-appi-shutdown","children":[]},{"level":2,"title":"entry::AppI::update","slug":"entry-appi-update","link":"#entry-appi-update","children":[]}],"git":{"createdTime":1682580256000,"updatedTime":1707214279000,"contributors":[{"name":"BanMing","email":"ban-ming@foxmail.com","commits":4},{"name":"wupeng","email":"wupeng_a2484@virtuos.com.cn","commits":2}]},"readingTime":{"minutes":0.87,"words":260},"filePathRelative":"Graphic/bgfx/windows_launch_flow.md","localizedDate":"April 27, 2023","excerpt":"\\n<h2>Create Window</h2>\\n<p>文件为：<code>bgfx.cmake\\\\bgfx\\\\examples\\\\common\\\\entry\\\\entry_windows.cpp</code>，入口函数如下：</p>\\n<figure><figcaption></figcaption></figure>\\n<p>在 <code>Context::run</code> 函数中创建Windows的窗口以及监听窗口事件，与此同时创建一个线程来开启 <code>bgfx::entry::main</code> 方法。</p>\\n<h2>bgfx::entry::main</h2>\\n<p>该方法首先初始化以下模块：</p>"}');export{h as comp,m as data};
