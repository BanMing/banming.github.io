const e=JSON.parse('{"key":"v-0d5254d2","path":"/Animation/gameOpenGL/AbstractRender.html","title":"Abstract Renderer","lang":"en-US","frontmatter":{"date":"2022-03-23T00:26:53.000Z"},"headers":[{"level":2,"title":"How to create shader","slug":"how-to-create-shader","link":"#how-to-create-shader","children":[]},{"level":2,"title":"How to store mesh data in buffers","slug":"how-to-store-mesh-data-in-buffers","link":"#how-to-store-mesh-data-in-buffers","children":[]},{"level":2,"title":"How to bind those buffers as shader attributes","slug":"how-to-bind-those-buffers-as-shader-attributes","link":"#how-to-bind-those-buffers-as-shader-attributes","children":[]},{"level":2,"title":"How to send uniform data to a shader","slug":"how-to-send-uniform-data-to-a-shader","link":"#how-to-send-uniform-data-to-a-shader","children":[]},{"level":2,"title":"How to render with index buffers","slug":"how-to-render-with-index-buffers","link":"#how-to-render-with-index-buffers","children":[]},{"level":2,"title":"How to load textures","slug":"how-to-load-textures","link":"#how-to-load-textures","children":[]},{"level":2,"title":"Basic OpenGL concepts","slug":"basic-opengl-concepts","link":"#basic-opengl-concepts","children":[]},{"level":2,"title":"Creating and working with simple shaders","slug":"creating-and-working-with-simple-shaders","link":"#creating-and-working-with-simple-shaders","children":[]}],"git":{"createdTime":1699280150000,"updatedTime":1706518071000,"contributors":[{"name":"BanMing","email":"ban-ming@foxmail.com","commits":2},{"name":"wupeng","email":"wupeng_a2484@virtuos.com.cn","commits":1}]},"readingTime":{"minutes":0.45,"words":135},"filePathRelative":"Animation/gameOpenGL/AbstractRender.md","localizedDate":"March 23, 2022","excerpt":"<h1> Abstract Renderer</h1>\\n<h2> How to create shader</h2>\\n<h2> How to store mesh data in buffers</h2>\\n<p>使用attribute来存储这些信息，属于每个顶点的信息：</p>\\n<ul>\\n<li>Position</li>\\n<li>Normal</li>\\n<li>UV or texture coordinate</li>\\n<li>Color</li>\\n</ul>\\n<h2> How to bind those buffers as shader attributes</h2>\\n<h2> How to send uniform data to a shader</h2>"}');export{e as data};
