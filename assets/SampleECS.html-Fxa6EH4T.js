const e=JSON.parse('{"key":"v-24c63810","path":"/Gameplay/ECS/SampleECS.html","title":"一个简单实体框架","lang":"en-US","frontmatter":{"date":"2021-07-20T01:08:28.000Z","tag":["Gameplay"]},"headers":[{"level":2,"title":"是什么？","slug":"是什么","link":"#是什么","children":[]},{"level":2,"title":"为什么用ECS","slug":"为什么用ecs","link":"#为什么用ecs","children":[{"level":3,"title":"解耦","slug":"解耦","link":"#解耦","children":[]},{"level":3,"title":"轻量对象","slug":"轻量对象","link":"#轻量对象","children":[]}]},{"level":2,"title":"简单的设计","slug":"简单的设计","link":"#简单的设计","children":[]},{"level":2,"title":"实体组件管理","slug":"实体组件管理","link":"#实体组件管理","children":[]},{"level":2,"title":"索引池","slug":"索引池","link":"#索引池","children":[]},{"level":2,"title":"实体筛选","slug":"实体筛选","link":"#实体筛选","children":[]},{"level":2,"title":"Entity","slug":"entity","link":"#entity","children":[]},{"level":2,"title":"Component","slug":"component","link":"#component","children":[]},{"level":2,"title":"System","slug":"system","link":"#system","children":[]},{"level":2,"title":"源码","slug":"源码","link":"#源码","children":[]}],"git":{"createdTime":1699280150000,"updatedTime":1707213711000,"contributors":[{"name":"BanMing","email":"ban-ming@foxmail.com","commits":3},{"name":"wupeng","email":"wupeng_a2484@virtuos.com.cn","commits":2}]},"readingTime":{"minutes":4.65,"words":1396},"filePathRelative":"Gameplay/ECS/SampleECS.md","localizedDate":"July 20, 2021","excerpt":"<h1> 一个简单实体框架</h1>\\n<h2> 是什么？</h2>\\n<p>我们经常会听到ECS这个名词，最近Unity也在推动他的ECS框架。那到底什么呢?</p>\\n<p>我们从字面上来解释就是Entity-Component-System，也就是实体-组件-系统。</p>\\n<p>分别解释一下：</p>\\n<ul>\\n<li>Entity ：一个对象</li>\\n<li>Component ：存储数据的容器</li>\\n<li>System ：处理对象数据的运行器</li>\\n</ul>\\n<p>我们可以从《游戏编程模式》中看到一个叫作组件模式，我认为ECS就是该模式的变种。</p>\\n<h2> 为什么用ECS</h2>"}');export{e as data};
