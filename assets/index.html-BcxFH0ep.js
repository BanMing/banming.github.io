import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r,c,e,d as a,f as s,w as n,a as i,o}from"./app-DGIQaZNF.js";const p="/assets/20201229233249-JUvYvOAG.png",h="/assets/20210303152830-CWGeAPZS.png",d="/assets/20210303152957-B8Eqnlym.png",m="/assets/20210303153105-CeFQVvTh.png",u="/assets/20210303153157-CgSayOTu.png",g="/assets/20210303153512-D681ilug.png",_="/assets/20210303153629-VJ1p2vTM.png",f={},b=i('<h1 id="渲染管线" tabindex="-1"><a class="header-anchor" href="#渲染管线"><span>渲染管线</span></a></h1><p>开始我们先了解一下，以后我们需要学习那些东西，这样我们会对整个流程有一个大致的了解。让我们到每一个步骤都会明白我们是在处理什么，是在什么阶段，什么前提？</p><p>渲染管线就是渲染流程，就是我们需要把需要展示到屏幕中的模型数据从内存中拿出来，再经过CPU把这些数据传递给GPU，然后GPU做的一系列工作后，最后展示到屏幕上的过程。</p><p>对于在GPU中的工作流在不同的书里或者教材里都会有一些不同的描述，但是大致流程都是一样的。下面分别列举出了几个总结：</p><h2 id="unity-shader入门精要" tabindex="-1"><a class="header-anchor" href="#unity-shader入门精要"><span>Unity Shader入门精要</span></a></h2><figure><img src="https://edrawcloudpubliccn.oss-cn-shenzhen.aliyuncs.com/viewer/self/16747446/share/2020-4-14/1586819691/main.svg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>我们主要会介绍：</p>',7),G=i('<h2 id="fundamentals-of-computer-graphics" tabindex="-1"><a class="header-anchor" href="#fundamentals-of-computer-graphics"><span>Fundamentals of Computer Graphics</span></a></h2><p>。</p><img src="'+p+'" width="70%"><h2 id="games-101" tabindex="-1"><a class="header-anchor" href="#games-101"><span>Games 101</span></a></h2><p>总体流程： <img src="'+h+'" alt="" loading="lazy"></p><p>接下来就分开说一下每个步骤：</p>',6),y=e("img",{src:d,alt:"",loading:"lazy"},null,-1),v=e("img",{src:m,alt:"",loading:"lazy"},null,-1),x=e("img",{src:u,alt:"",loading:"lazy"},null,-1),U=e("img",{src:g,alt:"",loading:"lazy"},null,-1),w=e("img",{src:_,alt:"",loading:"lazy"},null,-1);function z(E,P){const t=r("RouteLink");return o(),c("div",null,[b,e("ul",null,[e("li",null,[a("几何阶段：对应是在顶点着色器中做"),s(t,{to:"/Graphic/basic/raster/viewing.html"},{default:n(()=>[a("转换")]),_:1}),a("，裁剪，屏幕映射")]),e("li",null,[a("光栅阶段："),s(t,{to:"/Graphic/basic/raster/base.html"},{default:n(()=>[a("三角形设置")]),_:1}),a("，"),s(t,{to:"/Graphic/basic/raster/shading.html"},{default:n(()=>[a("着色")]),_:1})])]),G,e("p",null,[s(t,{to:"/Graphic/basic/raster/viewing.html"},{default:n(()=>[a("转换")]),_:1}),a("： "),y]),e("p",null,[s(t,{to:"/Graphic/basic/raster/base.html"},{default:n(()=>[a("三角形设置")]),_:1}),a("： "),v]),e("p",null,[s(t,{to:"/Graphic/basic/raster/base.html#%E7%94%BB%E5%AE%B6%E7%AE%97%E6%B3%95"},{default:n(()=>[a("深度测试")]),_:1}),a("： "),x]),e("p",null,[s(t,{to:"/Graphic/basic/raster/shading.html"},{default:n(()=>[a("着色")]),_:1}),a("： "),U]),e("p",null,[s(t,{to:"/Graphic/basic/raster/texture.html"},{default:n(()=>[a("贴图")]),_:1}),a("： "),w])])}const S=l(f,[["render",z],["__file","index.html.vue"]]),T=JSON.parse('{"path":"/Graphic/basic/raster/","title":"渲染管线","lang":"en-US","frontmatter":{"date":"2020-10-08T14:12:22.000Z","tag":["Graphic"]},"headers":[{"level":2,"title":"Unity Shader入门精要","slug":"unity-shader入门精要","link":"#unity-shader入门精要","children":[]},{"level":2,"title":"Fundamentals of Computer Graphics","slug":"fundamentals-of-computer-graphics","link":"#fundamentals-of-computer-graphics","children":[]},{"level":2,"title":"Games 101","slug":"games-101","link":"#games-101","children":[]}],"git":{"createdTime":1602137542000,"updatedTime":1707214279000,"contributors":[{"name":"BanMing","email":"ban-ming@foxmail.com","commits":2},{"name":"wupeng","email":"wupeng_a2484@virtuos.com.cn","commits":2}]},"readingTime":{"minutes":1.07,"words":322},"filePathRelative":"Graphic/basic/raster/README.md","localizedDate":"October 8, 2020","excerpt":"\\n<p>开始我们先了解一下，以后我们需要学习那些东西，这样我们会对整个流程有一个大致的了解。让我们到每一个步骤都会明白我们是在处理什么，是在什么阶段，什么前提？</p>\\n<p>渲染管线就是渲染流程，就是我们需要把需要展示到屏幕中的模型数据从内存中拿出来，再经过CPU把这些数据传递给GPU，然后GPU做的一系列工作后，最后展示到屏幕上的过程。</p>\\n<p>对于在GPU中的工作流在不同的书里或者教材里都会有一些不同的描述，但是大致流程都是一样的。下面分别列举出了几个总结：</p>\\n<h2>Unity Shader入门精要</h2>\\n<figure><img src=\\"https://edrawcloudpubliccn.oss-cn-shenzhen.aliyuncs.com/viewer/self/16747446/share/2020-4-14/1586819691/main.svg\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure>"}');export{S as comp,T as data};
