import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{e as a,f as e,o as p}from"./app-CbMdtCfv.js";const l={};function t(i,s){return p(),a("div",null,s[0]||(s[0]=[e(`<h1 id="emscripten" tabindex="-1"><a class="header-anchor" href="#emscripten"><span>Emscripten</span></a></h1><p>把c++打包为WebAssembly....</p><h2 id="install" tabindex="-1"><a class="header-anchor" href="#install"><span>Install</span></a></h2><h3 id="windows" tabindex="-1"><a class="header-anchor" href="#windows"><span>Windows</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 下载工具</span></span>
<span class="line"><span class="token function">git</span> clone https://github.com/emscripten-core/emsdk.git</span>
<span class="line"></span>
<span class="line"><span class="token builtin class-name">cd</span> emsdk</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 安装 需要科学上网</span></span>
<span class="line">./emsdk <span class="token function">install</span> latest</span>
<span class="line">./emsdk activate latest</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 更新环境变量</span></span>
<span class="line">./emsdk_env.bat</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行后所有需要的文件都在<code>emsdk/upstream/</code>文件夹中，需要把<code>emsdk/upstream/bin</code>设置到环境变量。</p><p><strong>值得注意的是：</strong><code>upstream\\emscripten\\.emscripten</code>文件记录的是需要使用到的其他模块的执行文件位置。需要手动设置以下两个地方：</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token comment"># 如果安装了LLVM会自动检测到安装的版本</span></span>
<span class="line"><span class="token comment"># 但是推荐这样配置，在upstream中也有llvm的执行文件</span></span>
<span class="line"><span class="token comment"># 同时版本也是smsdk匹配的，减少编译警告</span></span>
<span class="line">LLVM_ROOT <span class="token operator">=</span> <span class="token string">&#39;D:\\\\Code\\emsdk\\\\upstream\\\\bin&#39;</span> </span>
<span class="line"><span class="token comment"># 在使用该变量时，后面会自动补齐bin\\。使用wsam等执行文件</span></span>
<span class="line">BINARYEN_ROOT <span class="token operator">=</span> <span class="token string">&#39;D:\\\\Code\\\\emsdk\\\\upstream\\\\&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最后需要安装<code>MinGW</code>。</p><h3 id="mac" tabindex="-1"><a class="header-anchor" href="#mac"><span>Mac</span></a></h3><p>命令安装：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">brew <span class="token function">install</span> emscripten</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="command" tabindex="-1"><a class="header-anchor" href="#command"><span>Command</span></a></h2><p>指定编译文件：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 一种</span></span>
<span class="line">em++ bgfx.cpp <span class="token parameter variable">-std</span><span class="token operator">=</span>c++11 <span class="token parameter variable">-O2</span> <span class="token parameter variable">-s</span> <span class="token assign-left variable">ALLOW_MEMORY_GROWTH</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-s</span> <span class="token assign-left variable">MAX_WEBGL_VERSION</span><span class="token operator">=</span><span class="token number">2</span> <span class="token parameter variable">-s</span> <span class="token assign-left variable">MIN_WEBGL_VERSION</span><span class="token operator">=</span><span class="token number">2</span> <span class="token parameter variable">-s</span> <span class="token assign-left variable">USE_LIBPING</span><span class="token operator">=</span><span class="token number">1</span> test.cpp <span class="token parameter variable">-o</span> page.html --preload-file .<span class="token punctuation">\\</span>assets</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 两种</span></span>
<span class="line">em++ main.cpp <span class="token parameter variable">-std</span><span class="token operator">=</span>c++11 <span class="token parameter variable">-s</span> <span class="token assign-left variable">WASM</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-s</span> <span class="token assign-left variable">MAX_WEBGL_VERSION</span><span class="token operator">=</span><span class="token number">2</span> <span class="token parameter variable">-s</span> <span class="token assign-left variable">MIN_WEBGL_VERSION</span><span class="token operator">=</span><span class="token number">2</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-o</span> main.html</span>
<span class="line">em++ WindowsProject1.cpp <span class="token parameter variable">-std</span><span class="token operator">=</span>c++11 <span class="token parameter variable">-s</span> <span class="token assign-left variable">WASM</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-s</span> <span class="token assign-left variable">MAX_WEBGL_VERSION</span><span class="token operator">=</span><span class="token number">2</span> <span class="token parameter variable">-s</span> <span class="token assign-left variable">MIN_WEBGL_VERSION</span><span class="token operator">=</span><span class="token number">2</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-o</span> main.html</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="cmake" tabindex="-1"><a class="header-anchor" href="#cmake"><span>Cmake</span></a></h2><p>在使用<code>cmake</code>命令前加上<code>emcmake</code>字段，该字段会自动设置编译工具等。如执行以下命令：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">emcmake cmake <span class="token punctuation">..</span> </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>转义后的命令为：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"> cmake <span class="token punctuation">..</span> <span class="token parameter variable">-DCMAKE_TOOLCHAIN_FILE</span><span class="token operator">=</span>D:<span class="token punctuation">\\</span>Code<span class="token punctuation">\\</span>emsdk<span class="token punctuation">\\</span>upstream<span class="token punctuation">\\</span>emscripten<span class="token punctuation">\\</span>cmake<span class="token punctuation">\\</span>Modules<span class="token punctuation">\\</span>Platform<span class="token punctuation">\\</span>Emscripten.cmake <span class="token string">&quot;-DCMAKE_CROSSCOMPILING_EMULATOR=C:\\Program Files<span class="token entity" title="\\n">\\n</span>odejs<span class="token entity" title="\\n">\\n</span>ode.exe&quot;</span> <span class="token parameter variable">-G</span> <span class="token string">&quot;MinGW Makefiles&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>在<code>CMakeLists.txt</code>文件中可以设置：</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line">add_executable<span class="token punctuation">(</span>$<span class="token punctuation">{</span>OutputExecutable<span class="token punctuation">}</span> $<span class="token punctuation">{</span>SOURCE_CXX_FILES<span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">######################################################################</span></span>
<span class="line"><span class="token comment"># Emscripten</span></span>
<span class="line"><span class="token comment">######################################################################</span></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">(</span>EMSCRIPTEN<span class="token punctuation">)</span></span>
<span class="line">    <span class="token comment"># Generate an HTML file</span></span>
<span class="line">    <span class="token builtin">set</span><span class="token punctuation">(</span>CMAKE_EXECUTABLE_SUFFIX <span class="token punctuation">.</span>html<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment"># Build Cache: SDL2_mixer, libpng, zlib</span></span>
<span class="line">    execute_process<span class="token punctuation">(</span>COMMAND <span class="token string">&quot;\${EMSCRIPTEN_ROOT_PATH}/embuilder\${EMCC_SUFFIX}&quot;</span> build sdl2_mixer libpng zlib<span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">if</span><span class="token punctuation">(</span>EXISTS <span class="token string">&quot;\${SOURCE_DATA_DIR}&quot;</span> AND IS_DIRECTORY <span class="token string">&quot;\${SOURCE_DATA_DIR}&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        target_link_options<span class="token punctuation">(</span></span>
<span class="line">            $<span class="token punctuation">{</span>OutputExecutable<span class="token punctuation">}</span></span>
<span class="line">            PRIVATE</span>
<span class="line">            <span class="token operator">-</span>sALLOW_MEMORY_GROWTH<span class="token operator">=</span><span class="token number">1</span></span>
<span class="line">            <span class="token operator">-</span>sMAX_WEBGL_VERSION<span class="token operator">=</span><span class="token number">2</span></span>
<span class="line">            <span class="token operator">-</span>sMIN_WEBGL_VERSION<span class="token operator">=</span><span class="token number">2</span></span>
<span class="line">            <span class="token operator">-</span>sUSE_LIBPNG<span class="token operator">=</span><span class="token number">1</span></span>
<span class="line">            <span class="token operator">-</span>sUSE_SDL_MIXER<span class="token operator">=</span><span class="token number">2</span>          <span class="token comment"># thanks for the s, cstd</span></span>
<span class="line">            <span class="token operator">-</span>sLLD_REPORT_UNDEFINED</span>
<span class="line">            <span class="token operator">-</span><span class="token operator">-</span>preload<span class="token operator">-</span><span class="token builtin">file</span> $<span class="token punctuation">{</span>SOURCE_DATA_DIR<span class="token punctuation">}</span>@assets<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">else</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        target_link_options<span class="token punctuation">(</span></span>
<span class="line">            $<span class="token punctuation">{</span>OutputExecutable<span class="token punctuation">}</span></span>
<span class="line">            PRIVATE</span>
<span class="line">            <span class="token operator">-</span>sALLOW_MEMORY_GROWTH<span class="token operator">=</span><span class="token number">1</span></span>
<span class="line">            <span class="token operator">-</span>sMAX_WEBGL_VERSION<span class="token operator">=</span><span class="token number">2</span></span>
<span class="line">            <span class="token operator">-</span>sMIN_WEBGL_VERSION<span class="token operator">=</span><span class="token number">2</span></span>
<span class="line">            <span class="token operator">-</span>sUSE_LIBPNG<span class="token operator">=</span><span class="token number">1</span></span>
<span class="line">            <span class="token operator">-</span>sUSE_SDL_MIXER<span class="token operator">=</span><span class="token number">2</span>          <span class="token comment"># thanks for the s, cstd</span></span>
<span class="line">            <span class="token operator">-</span>sLLD_REPORT_UNDEFINED<span class="token punctuation">)</span></span>
<span class="line">    endif<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">endif<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># Emscripten</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中<code>EMSCRIPTEN</code>字段在Emscripten.cmake文件中定义的。</p><p>在vscode中配置</p><p><a href="https://blog.evernightfireworks.com/emscripten_config/" target="_blank" rel="noopener noreferrer">https://blog.evernightfireworks.com/emscripten_config/</a></p><h2 id="example-project" tabindex="-1"><a class="header-anchor" href="#example-project"><span>Example Project</span></a></h2><p>Project Respiratory： <a href="https://github.com/Moros1138/pge-template-project" target="_blank" rel="noopener noreferrer">https://github.com/Moros1138/pge-template-project</a></p><h2 id="refence" tabindex="-1"><a class="header-anchor" href="#refence"><span>Refence</span></a></h2><p><a href="https://emscripten.org/index.html" target="_blank" rel="noopener noreferrer">https://emscripten.org/index.html</a></p><p><a href="https://www.youtube.com/watch?v=1xFny-BkkR4" target="_blank" rel="noopener noreferrer">https://www.youtube.com/watch?v=1xFny-BkkR4</a></p><p><a href="https://github.com/emscripten-core/emscripten/issues/10412" target="_blank" rel="noopener noreferrer">https://github.com/emscripten-core/emscripten/issues/10412</a></p>`,31)]))}const o=n(l,[["render",t],["__file","Emstripten.html.vue"]]),m=JSON.parse('{"path":"/Basic/language/Cplusplus/Emstripten.html","title":"Emscripten","lang":"en-US","frontmatter":{"date":"2023-04-27T15:24:16.000Z","tag":["C++","Web"]},"git":{"createdTime":1682580256000,"updatedTime":1707212881000,"contributors":[{"name":"wupeng","username":"wupeng","email":"wupeng_a2484@virtuos.com.cn","commits":3,"url":"https://github.com/wupeng"},{"name":"wupeng","username":"wupeng","email":"ban-ming@foxmail.com","commits":1,"url":"https://github.com/wupeng"},{"name":"BanMing","username":"BanMing","email":"ban-ming@foxmail.com","commits":2,"url":"https://github.com/BanMing"}]},"readingTime":{"minutes":1.64,"words":492},"filePathRelative":"Basic/language/Cplusplus/Emstripten.md","localizedDate":"April 27, 2023","excerpt":"\\n<p>把c++打包为WebAssembly....</p>\\n<h2>Install</h2>\\n<h3>Windows</h3>\\n<div class=\\"language-bash line-numbers-mode\\" data-highlighter=\\"prismjs\\" data-ext=\\"sh\\"><pre><code><span class=\\"line\\"><span class=\\"token comment\\"># 下载工具</span></span>\\n<span class=\\"line\\"><span class=\\"token function\\">git</span> clone https://github.com/emscripten-core/emsdk.git</span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span class=\\"token builtin class-name\\">cd</span> emsdk</span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span class=\\"token comment\\"># 安装 需要科学上网</span></span>\\n<span class=\\"line\\">./emsdk <span class=\\"token function\\">install</span> latest</span>\\n<span class=\\"line\\">./emsdk activate latest</span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span class=\\"token comment\\"># 更新环境变量</span></span>\\n<span class=\\"line\\">./emsdk_env.bat</span>\\n<span class=\\"line\\"></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{o as comp,m as data};
