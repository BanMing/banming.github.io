import{_ as t}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as e,c as i,b as a}from"./app-EpDlH_S7.js";const n="/assets/2023-12-29-12-43-13-VaZnMXiJ.png",o="/assets/2023-12-29-14-08-08-CvS_1FD3.png",c="/assets/2023-12-29-14-13-12-tlVOypPP.png",d="/assets/2023-12-29-13-26-19-JC7jwVvh.png",r="/assets/2023-12-29-13-19-58-REhbkNVh.png",s="/assets/2023-12-29-13-23-11-av0DMBQQ.png",l="/assets/2023-12-29-13-35-59-p9ZtWEGP.png",p="/assets/2023-12-29-12-54-08-UmWt5H9g.png",g="/assets/2023-12-29-13-02-27-OZw5zTNX.png",h="/assets/2023-12-29-13-16-20-dlqmOG2d.png",u="/assets/2023-12-29-13-39-29-EJEaqowG.png",f="/assets/2023-12-29-13-43-25-dLRokmw4.png",x="/assets/2023-12-29-14-05-20-0OOJ0oP4.png",m={},_=a('<h1 id="enhanced-input" tabindex="-1"><a class="header-anchor" href="#enhanced-input" aria-hidden="true">#</a> Enhanced Input</h1><h2 id="enable" tabindex="-1"><a class="header-anchor" href="#enable" aria-hidden="true">#</a> Enable</h2><p>在<code>Build.cs</code>中的<code>PublicDependencyModuleNames</code>添加<code>EnhancedInput</code>。 且需要在<code>Project Setting</code>中确认默认的输入类型是Enhanced Input:</p><figure><img src="'+n+'" alt="Alt text" tabindex="0" loading="lazy"><figcaption>Alt text</figcaption></figure><h2 id="core" tabindex="-1"><a class="header-anchor" href="#core" aria-hidden="true">#</a> Core</h2><p>主要有6大模块组成：</p><ul><li>UInputAction，输入动作，按键转换为游戏内的数值。 <code>IA</code></li><li>UInputModifier，输入修改器，对输入动作中的数值做出特定修改。<code>IM</code></li><li>UInputTrigger，输入触发器，什么时候触发按键后的函数。<code>IT</code></li><li>UInputMappingContext，输入映射上下文环境，绑定输入动作到按键和执行的函数。<code>IMC</code></li><li>UEnhancedPlayerInput，输入处理，把按键关联上输入动作。</li><li>UEnhancedInputComponent，输入组件，把输入动作关联上执行函数。</li></ul><h2 id="how-to-use" tabindex="-1"><a class="header-anchor" href="#how-to-use" aria-hidden="true">#</a> How To Use</h2><figure><img src="'+o+'" alt="Alt text" tabindex="0" loading="lazy"><figcaption>Alt text</figcaption></figure><figure><img src="'+c+'" alt="Alt text" tabindex="0" loading="lazy"><figcaption>Alt text</figcaption></figure><h2 id="input-action" tabindex="-1"><a class="header-anchor" href="#input-action" aria-hidden="true">#</a> Input Action</h2><figure><img src="'+d+'" alt="Alt text" tabindex="0" loading="lazy"><figcaption>Alt text</figcaption></figure><h2 id="input-modifier" tabindex="-1"><a class="header-anchor" href="#input-modifier" aria-hidden="true">#</a> Input Modifier</h2><figure><img src="'+r+'" alt="Alt text" tabindex="0" loading="lazy"><figcaption>Alt text</figcaption></figure><p>在<code>UInputAction</code>和<code>UInputMappingContext</code>中都可以对一个输入动作设置修改器，在<code>IMC</code>中是全局配置。如果两个同时都配置了，两个都会生效，先执行<code>IMC</code>，在执行<code>IA</code>。</p><h2 id="input-trigger" tabindex="-1"><a class="header-anchor" href="#input-trigger" aria-hidden="true">#</a> Input Trigger</h2><figure><img src="'+s+'" alt="Alt text" tabindex="0" loading="lazy"><figcaption>Alt text</figcaption></figure><h2 id="input-mapping-context" tabindex="-1"><a class="header-anchor" href="#input-mapping-context" aria-hidden="true">#</a> Input Mapping Context</h2><figure><img src="'+l+'" alt="Alt text" tabindex="0" loading="lazy"><figcaption>Alt text</figcaption></figure><h2 id="framework" tabindex="-1"><a class="header-anchor" href="#framework" aria-hidden="true">#</a> Framework</h2><p>在UE中的收到按键指令后执行流程如下：先压入Pawn，再压入关卡蓝图，接着PlayerController最后EnableInput的Actors。</p><figure><img src="'+p+'" alt="框架" tabindex="0" loading="lazy"><figcaption>框架</figcaption></figure><p>在<code>UEnhancedPlayerInput</code>中通过<code>UInputMappingContext</code>来触发按键和输入动作。</p><figure><img src="'+g+'" alt="Alt text" tabindex="0" loading="lazy"><figcaption>Alt text</figcaption></figure><p>在<code>EnhancedInputComponent</code>中存储<code>InputAction</code>和回调的映射，使用<code>BindAction</code>来实现绑定。</p><figure><img src="'+h+'" alt="Alt text" tabindex="0" loading="lazy"><figcaption>Alt text</figcaption></figure><p>总体流程如下：</p><figure><img src="'+u+'" alt="Alt text" tabindex="0" loading="lazy"><figcaption>Alt text</figcaption></figure><figure><img src="'+f+'" alt="Alt text" tabindex="0" loading="lazy"><figcaption>Alt text</figcaption></figure><p>AddMappingContext流程：</p><figure><img src="'+x+`" alt="Alt text" tabindex="0" loading="lazy"><figcaption>Alt text</figcaption></figure><h2 id="debug" tabindex="-1"><a class="header-anchor" href="#debug" aria-hidden="true">#</a> Debug</h2><p>调试命令：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>showdebug enhancedinput
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="notes" tabindex="-1"><a class="header-anchor" href="#notes" aria-hidden="true">#</a> Notes</h2><ul><li>https://docs.unrealengine.com/5.0/zh-CN/enhanced-input-in-unreal-engine/</li><li>https://zhuanlan.zhihu.com/p/470949422</li><li>https://zhuanlan.zhihu.com/p/668048398</li><li>https://zhuanlan.zhihu.com/p/640271313</li><li>https://www.bilibili.com/video/BV14r4y1r7nz/</li></ul>`,36),b=[_];function A(I,z){return e(),i("div",null,b)}const w=t(m,[["render",A],["__file","EnhancedInput.html.vue"]]);export{w as default};
