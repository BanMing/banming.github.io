import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as a,c as s,b as t}from"./app-tOoxT-3I.js";const e={},o=t(`<h1 id="mono" tabindex="-1"><a class="header-anchor" href="#mono" aria-hidden="true">#</a> Mono</h1><p>Github:https://github.com/BanMing/mono</p><h2 id="编译" tabindex="-1"><a class="header-anchor" href="#编译" aria-hidden="true">#</a> 编译</h2><p>不使用cygwin，直接使用vs2017以上的版本</p><p>https://www.mono-project.com/docs/compiling-mono/windows/no-cygwin/</p><p>注意：需要使用vs打开一下，并且更新一下Build target。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>msbuild msvc\\mono.sln /p:Platform=x64 /p:Configuration=Release /p:MONO_TARGET_GC=sgen
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>编译32位-bdwgc</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>msbuild msvc\\mono.sln /p:Platform=Win32 /p:Configuration=Release /p:MONO_TARGET_GC=bdwgc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>编译64位-bdwgc</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>msbuild msvc\\mono.sln /p:Platform=x64 /p:Configuration=Release /p:MONO_TARGET_GC=bdwgc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="修改读取dll" tabindex="-1"><a class="header-anchor" href="#修改读取dll" aria-hidden="true">#</a> 修改读取dll</h2><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token comment">/**
 * mono_image_open_from_data_with_name:
 */</span>
MonoImage <span class="token operator">*</span>
<span class="token function">mono_image_open_from_data_with_name</span> <span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span>data<span class="token punctuation">,</span> guint32 data_len<span class="token punctuation">,</span> gboolean need_copy<span class="token punctuation">,</span> MonoImageOpenStatus <span class="token operator">*</span>status<span class="token punctuation">,</span> gboolean refonly<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>name<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">strstr</span> <span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token string">&quot;Sample.dll&quot;</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		guint32 offset <span class="token operator">=</span> <span class="token punctuation">(</span>guint32<span class="token punctuation">)</span><span class="token function">strlen</span> <span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token function">memcpy</span> <span class="token punctuation">(</span>data<span class="token punctuation">,</span> data <span class="token operator">+</span> offset<span class="token punctuation">,</span> data_len <span class="token operator">-</span> offset<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">return</span> <span class="token function">mono_image_open_from_data_internal</span> <span class="token punctuation">(</span>data<span class="token punctuation">,</span> data_len<span class="token punctuation">,</span> need_copy<span class="token punctuation">,</span> status<span class="token punctuation">,</span> refonly<span class="token punctuation">,</span> FALSE<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13),p=[o];function c(i,l){return a(),s("div",null,p)}const r=n(e,[["render",c],["__file","mono.html.vue"]]);export{r as default};
