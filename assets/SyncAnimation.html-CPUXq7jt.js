import{_ as s}from"./2025-05-09-13-05-37-URaaW8uN.js";import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{e as t,f as p,o as e}from"./app-NeI3TDSD.js";const o="/assets/2025-07-09-23-54-46-BXdB1HKH.gif",i="/assets/2025-07-09-23-58-21-DP4AC4KH.gif",c="/assets/2025-07-15-18-56-55-Bzv935rD.png",l="/assets/2025-07-15-18-58-38-8_oLRHTr.png",u="/assets/2025-07-15-19-05-00-ChlHYR10.png",r="/assets/2025-07-15-19-39-41-BIdCgbEv.png",k="/assets/2025-07-15-19-41-49-BnwGhie1.png",d="/assets/2025-07-15-19-43-26-DWftxeNT.png",m="/assets/2025-07-15-19-55-55-CIREYpge.png",g="/assets/2025-07-15-20-00-42-rv8INwT6.png",v="/assets/2025-07-15-20-06-04-B2779KRN.png",b="/assets/2025-07-15-20-09-34-BQP40fdR.png",f="/assets/2025-07-15-20-23-05-Dzr4brvX.png",h="/assets/2025-07-15-20-50-58-BmVRja8C.png",S="/assets/2025-07-15-20-13-55-cw7k0-Mp.png",A="/assets/2025-07-15-20-15-12-BcC16q5y.png",x="/assets/2025-07-15-20-17-36-w_AK0nDZ.png",y={};function _(C,n){return e(),t("div",null,n[0]||(n[0]=[p('<h1 id="多角色动画同步" tabindex="-1"><a class="header-anchor" href="#多角色动画同步"><span>多角色动画同步</span></a></h1><p>在制作玩法时，常常会有两个角色之间有互动，同时播放动画表演的需求。比如处决，角色交互等。这其中关键点事需要预先设置好两个角色的相对位置，同时播放两个角色动画。</p><p>一般来说有两种做法：</p><ul><li>参考骨骼，也就是在做主角色动画时，使用一根空骨骼作为副角色的位置。</li><li>插件：Contextual Animation</li></ul><p>值得注意的是这两种方式最终都会使用<a href="https://banming.github.io/GameEngine/Unreal/animation/MotionWarping.html" target="_blank" rel="noopener noreferrer">Motion Warping</a>来讲角色拉去到目标的位置和方向。</p><p>下面有两个演示：</p><figure><img src="'+o+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+i+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="参考骨骼" tabindex="-1"><a class="header-anchor" href="#参考骨骼"><span>参考骨骼</span></a></h2><p>对齐两个或者多个角色，一起播放动画，处决交互等</p><figure><img src="'+s+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>使用一个<code>Reference Joint</code>位置对准两个角色</li><li>动画长度一般需要一样长</li><li>需要处理Blending问题</li><li>需要处理如何Align主从</li><li>需要动画师约束好规则，动画师在制作时更加的直观</li></ul><h2 id="contextual-animation" tabindex="-1"><a class="header-anchor" href="#contextual-animation"><span>Contextual Animation</span></a></h2><h3 id="使用" tabindex="-1"><a class="header-anchor" href="#使用"><span>使用</span></a></h3><ol><li>创建角色数据表<br><img src="'+c+'" alt="" loading="lazy"></li><li>选择<code>Contextual Anim Roles Asset</code>，该资源用于区别播放动画的代称<img src="'+l+'" alt="" loading="lazy"></li><li>配置如下，这里设置为角色，可以在动画编辑器下查看到胶囊体的大小。<strong>值得注意的是<code>Mesh to Component</code>中的位置的Z轴是默认添加了90。</strong> 该地方的数值直接从角色的蓝图中蒙皮组件中获取。<img src="'+u+'" alt="" loading="lazy"></li><li>创建同步动画蒙太奇，<strong>值得注意动画切片都需要打开Root Motion。</strong><ol><li>Paired_ForceChoke_Att_Montage</li><li>Paired_ForceChoke_Vic_Montage</li></ol></li><li>创建<code>Contextual Animation</code>动画配置<br><img src="'+r+'" alt="" loading="lazy"></li><li>设置角色数据表和基础角色，基础角色可以理解为发起者。<br><img src="'+k+'" alt="" loading="lazy"></li><li>创建动画序列，设置蒙太奇，这里可以设置运动方式，如果动画中有Z轴的位移（root位移），可以设置为Flying。<br><img src="'+d+'" alt="" loading="lazy"></li><li>设置副动画角色的相对位置，选择时间轴中的副动画，设置<code>Mesh to Scene</code>中的数值。设置完后需要点击一下<code>Reset Scene</code>按钮，重置场景。这里可以不需要设置Z轴的偏移，如果两个动画是在同一平面上播放的。<br><img src="'+m+'" alt="" loading="lazy"></li><li>设置吸附点，这里配置的<code>Warp Target Name</code>是需要和在蒙太奇中的MotionWarping中的Target Name相对应。这里使用的自定义模式，其中<code>Origin</code>点是设置为吸附到哪个角色点上。这里吸附上的点是包含了上一步设置的相对位置。<br><img src="'+g+'" alt="" loading="lazy"></li><li>设置蒙太奇中的Motion Warping，这里需要设置Target Name和上一步的Warp Target Name相对应。其他的设置可以查看<a href="https://banming.github.io/GameEngine/Unreal/animation/MotionWarping.html" target="_blank" rel="noopener noreferrer">Motion Warping的说明</a><br><img src="'+v+'" alt="" loading="lazy"></li><li>在角色蓝图中添加<code>ContextualAnimSceneActor</code>和<code>Motion Warping</code>组件<br><img src="'+b+'" alt="" loading="lazy"></li><li>设置播放条件，选择需要设置的动画时间轴，也就是说可以配置两种，发起者和配合者都可以配置。这里也可以实时的预览配置的效果。如果需要自定义条件，实现<code>UContextualAnimSelectionCriterion</code>类即可。<br><img src="'+f+'" alt="" loading="lazy"></li><li>设置角色的碰撞<br><img src="'+h+'" alt="" loading="lazy"></li><li>播放同步动画 <ol><li>创建绑定信息，设置发起者和副角色以及需要播放的CAS动画<br><img src="'+S+'" alt="" loading="lazy"></li><li>播放动画<br><img src="'+A+'" alt="" loading="lazy"></li><li>绑定回调函数：<br><img src="'+x+`" alt="" loading="lazy"><ul><li>OnJointedScene</li><li>OnLeftScene</li></ul></li></ol></li></ol><h3 id="原理" tabindex="-1"><a class="header-anchor" href="#原理"><span>原理</span></a></h3><p>该插件代码分为两部分：</p><ul><li>ContextualAnimation：运行时逻辑</li><li>ContextualAnimationEditor：编辑器</li></ul><p>这里主要介绍运行时逻辑，也就是调用了<code>FContextualAnimSceneBindings::TryCreateBindings</code>和<code>UContextualAnimSceneActorComponent::StartContextualAnimScene</code>函数后的逻辑。</p><h4 id="trycreatebindings" tabindex="-1"><a class="header-anchor" href="#trycreatebindings"><span>TryCreateBindings</span></a></h4><p>在创建绑定信息时，会调用<code>FContextualAnimSceneBindings::TryCreateBindings</code>函数，该函数尝试在给定场景中为一组角色创建绑定关系，使他们能够参与上下文动画互动。如果绑定成功，返回一个有效的<code>FContextualAnimSceneBindings</code>对象。</p><p>在<code>Contextual Animation Asset</code>中可以配置多个动画序列，通过配置的<code>UContextualAnimSelectionCriterion</code>来筛选对应的动画序列。实现函数为<code> FContextualAnimSceneBindings::FindAnimSet(const UContextualAnimSceneAsset&amp; SceneAsset, int32 SectionIdx, const TMap&lt;FName, FContextualAnimSceneBindingContext&gt;&amp; Params)</code>如果配置多个实现如下：</p><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp"><pre><code><span class="line">	<span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>NumSets <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token punctuation">{</span></span>
<span class="line">		<span class="token keyword">const</span> FContextualAnimSceneSection<span class="token operator">*</span> Section <span class="token operator">=</span> SceneAsset<span class="token punctuation">.</span><span class="token function">GetSection</span><span class="token punctuation">(</span>SectionIdx<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		TArray<span class="token operator">&lt;</span>TTuple<span class="token operator">&lt;</span>int32<span class="token punctuation">,</span> <span class="token keyword">float</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> TInlineAllocator<span class="token operator">&lt;</span><span class="token number">5</span><span class="token operator">&gt;&gt;</span> ValidSets<span class="token punctuation">;</span> <span class="token comment">// 0: AnimSetIdx, 1: AnimSetRandomWeight</span></span>
<span class="line"></span>
<span class="line">		<span class="token keyword">float</span> TotalWeight <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token keyword">for</span> <span class="token punctuation">(</span>int32 AnimSetIdx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> AnimSetIdx <span class="token operator">&lt;</span> NumSets<span class="token punctuation">;</span> AnimSetIdx<span class="token operator">++</span><span class="token punctuation">)</span></span>
<span class="line">		<span class="token punctuation">{</span></span>
<span class="line">			<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">CheckConditions</span><span class="token punctuation">(</span>SceneAsset<span class="token punctuation">,</span> SectionIdx<span class="token punctuation">,</span> AnimSetIdx<span class="token punctuation">,</span> Params<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">			<span class="token punctuation">{</span></span>
<span class="line">				<span class="token keyword">const</span> <span class="token keyword">float</span> AnimSetRandomWeight <span class="token operator">=</span> <span class="token class-name">FMath</span><span class="token double-colon punctuation">::</span><span class="token function">Max</span><span class="token punctuation">(</span>Section<span class="token operator">-&gt;</span><span class="token function">GetAnimSet</span><span class="token punctuation">(</span>AnimSetIdx<span class="token punctuation">)</span><span class="token operator">-&gt;</span>RandomWeight<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">				ValidSets<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token function">MakeTuple</span><span class="token punctuation">(</span>AnimSetIdx<span class="token punctuation">,</span> AnimSetRandomWeight<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">				TotalWeight <span class="token operator">+=</span> AnimSetRandomWeight<span class="token punctuation">;</span></span>
<span class="line">			<span class="token punctuation">}</span></span>
<span class="line">		<span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">		<span class="token comment">// Shuffle the list of valid sets to add an extra layer of randomness. </span></span>
<span class="line">		<span class="token class-name">Algo</span><span class="token double-colon punctuation">::</span><span class="token function">RandomShuffle</span><span class="token punctuation">(</span>ValidSets<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">		<span class="token keyword">float</span> RandomValue <span class="token operator">=</span> <span class="token class-name">FMath</span><span class="token double-colon punctuation">::</span><span class="token function">RandRange</span><span class="token punctuation">(</span><span class="token number">0.f</span><span class="token punctuation">,</span> TotalWeight<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token keyword">for</span> <span class="token punctuation">(</span>int32 Idx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> Idx <span class="token operator">&lt;</span> ValidSets<span class="token punctuation">.</span><span class="token function">Num</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> Idx<span class="token operator">++</span><span class="token punctuation">)</span></span>
<span class="line">		<span class="token punctuation">{</span></span>
<span class="line">			RandomValue <span class="token operator">-=</span> <span class="token class-name">FMath</span><span class="token double-colon punctuation">::</span><span class="token function">Max</span><span class="token punctuation">(</span>ValidSets<span class="token punctuation">[</span>Idx<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token generic-function"><span class="token function">Get</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token number">1</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">			<span class="token keyword">if</span> <span class="token punctuation">(</span>RandomValue <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line">			<span class="token punctuation">{</span></span>
<span class="line">				AnimSetIdxSelected <span class="token operator">=</span> ValidSets<span class="token punctuation">[</span>Idx<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token generic-function"><span class="token function">Get</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">				<span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">			<span class="token punctuation">}</span></span>
<span class="line">		<span class="token punctuation">}</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最后找到合适的动画序列后，返回绑定信息。</p><h4 id="startcontextualanimscene" tabindex="-1"><a class="header-anchor" href="#startcontextualanimscene"><span>StartContextualAnimScene</span></a></h4><p>主要步骤：</p><ol><li>计算吸附点：CalculateWarpPointsForBindings，其中核心逻辑在<code>FContextualAnimSceneBindings::CalculateWarpPoint</code>函数中，核心逻辑：</li></ol><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp"><pre><code><span class="line"><span class="token keyword">if</span> <span class="token punctuation">(</span>WarpPointDef<span class="token punctuation">.</span>Mode <span class="token operator">==</span> EContextualAnimWarpPointDefinitionMode<span class="token double-colon punctuation">::</span>Custom<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">	<span class="token keyword">const</span> FContextualAnimWarpPointCustomParams<span class="token operator">&amp;</span> Params <span class="token operator">=</span> WarpPointDef<span class="token punctuation">.</span>Params<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">const</span> FContextualAnimSceneBinding<span class="token operator">*</span> Binding <span class="token operator">=</span> <span class="token function">FindBindingByRole</span><span class="token punctuation">(</span>Params<span class="token punctuation">.</span>Origin<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token punctuation">{</span></span>
<span class="line">		OutWarpPoint<span class="token punctuation">.</span>Name <span class="token operator">=</span> WarpPointDef<span class="token punctuation">.</span>WarpTargetName<span class="token punctuation">;</span></span>
<span class="line">		<span class="token keyword">if</span> <span class="token punctuation">(</span>Params<span class="token punctuation">.</span>bAlongClosestDistance<span class="token punctuation">)</span></span>
<span class="line">		<span class="token punctuation">{</span></span>
<span class="line">			<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">const</span> FContextualAnimSceneBinding<span class="token operator">*</span> OtherBinding <span class="token operator">=</span> <span class="token function">FindBindingByRole</span><span class="token punctuation">(</span>Params<span class="token punctuation">.</span>OtherRole<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">			<span class="token punctuation">{</span></span>
<span class="line">				<span class="token keyword">const</span> FTransform T1 <span class="token operator">=</span> Binding<span class="token operator">-&gt;</span><span class="token function">GetTransform</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">				<span class="token keyword">const</span> FTransform T2 <span class="token operator">=</span> OtherBinding<span class="token operator">-&gt;</span><span class="token function">GetTransform</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">				OutWarpPoint<span class="token punctuation">.</span>Transform<span class="token punctuation">.</span><span class="token function">SetLocation</span><span class="token punctuation">(</span>FMath<span class="token double-colon punctuation">::</span><span class="token generic-function"><span class="token function">Lerp</span><span class="token generic class-name"><span class="token operator">&lt;</span>FVector<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>T1<span class="token punctuation">.</span><span class="token function">GetLocation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> T2<span class="token punctuation">.</span><span class="token function">GetLocation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Params<span class="token punctuation">.</span>Weight<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">				OutWarpPoint<span class="token punctuation">.</span>Transform<span class="token punctuation">.</span><span class="token function">SetRotation</span><span class="token punctuation">(</span><span class="token punctuation">(</span>T2<span class="token punctuation">.</span><span class="token function">GetLocation</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> T1<span class="token punctuation">.</span><span class="token function">GetLocation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetSafeNormal2D</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToOrientationQuat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">				<span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line">			<span class="token punctuation">}</span></span>
<span class="line">		<span class="token punctuation">}</span></span>
<span class="line">		<span class="token keyword">else</span></span>
<span class="line">		<span class="token punctuation">{</span></span>
<span class="line">			OutWarpPoint<span class="token punctuation">.</span>Transform <span class="token operator">=</span> Binding<span class="token operator">-&gt;</span><span class="token function">GetTransform</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">			<span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token punctuation">}</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>发起者,配合者加入场景：JoinScene,<code>UContextualAnimSceneActorComponent::JoinScene</code>，主要实现</li></ol><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp"><pre><code><span class="line">	<span class="token keyword">if</span> <span class="token punctuation">(</span>Bindings<span class="token punctuation">.</span><span class="token function">IsValid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token punctuation">{</span></span>
<span class="line">		<span class="token function">LeaveScene</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">const</span> FContextualAnimSceneBinding<span class="token operator">*</span> Binding <span class="token operator">=</span> InBindings<span class="token punctuation">.</span><span class="token function">FindBindingByActor</span><span class="token punctuation">(</span><span class="token function">GetOwner</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token punctuation">{</span></span>
<span class="line">		<span class="token function">UE_LOG</span><span class="token punctuation">(</span>LogContextualAnim<span class="token punctuation">,</span> Verbose<span class="token punctuation">,</span> <span class="token function">TEXT</span><span class="token punctuation">(</span><span class="token string">&quot;%-21s UContextualAnimSceneActorComponent::JoinScene Actor: %s Role: %s InBindings Id: %d Section: %d Asset: %s&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token operator">*</span><span class="token class-name">UEnum</span><span class="token double-colon punctuation">::</span><span class="token function">GetValueAsString</span><span class="token punctuation">(</span><span class="token function">TEXT</span><span class="token punctuation">(</span><span class="token string">&quot;Engine.ENetRole&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">GetOwner</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">GetLocalRole</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">*</span><span class="token function">GetNameSafe</span><span class="token punctuation">(</span><span class="token function">GetOwner</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">*</span>InBindings<span class="token punctuation">.</span><span class="token function">GetRoleFromBinding</span><span class="token punctuation">(</span><span class="token operator">*</span>Binding<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> InBindings<span class="token punctuation">.</span><span class="token function">GetID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> InBindings<span class="token punctuation">.</span><span class="token function">GetSectionIdx</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">*</span><span class="token function">GetNameSafe</span><span class="token punctuation">(</span>InBindings<span class="token punctuation">.</span><span class="token function">GetSceneAsset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">		AnimsPlayed<span class="token punctuation">.</span><span class="token function">Reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">		Bindings <span class="token operator">=</span> InBindings<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">		<span class="token keyword">const</span> FContextualAnimTrack<span class="token operator">&amp;</span> AnimTrack <span class="token operator">=</span> Bindings<span class="token punctuation">.</span><span class="token function">GetAnimTrackFromBinding</span><span class="token punctuation">(</span><span class="token operator">*</span>Binding<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token function">PlayAnimation_Internal</span><span class="token punctuation">(</span>AnimTrack<span class="token punctuation">.</span>Animation<span class="token punctuation">,</span> <span class="token number">0.f</span><span class="token punctuation">,</span> Bindings<span class="token punctuation">.</span><span class="token function">ShouldSyncAnimation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">		<span class="token function">AddOrUpdateWarpTargets</span><span class="token punctuation">(</span>AnimTrack<span class="token punctuation">.</span>SectionIdx<span class="token punctuation">,</span> AnimTrack<span class="token punctuation">.</span>AnimSetIdx<span class="token punctuation">,</span> WarpPoints<span class="token punctuation">,</span> ExternalWarpTargets<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">		<span class="token function">SetCollisionState</span><span class="token punctuation">(</span><span class="token operator">*</span>Binding<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">		<span class="token function">SetMovementState</span><span class="token punctuation">(</span><span class="token operator">*</span>Binding<span class="token punctuation">,</span> AnimTrack<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">		<span class="token function">OnJoinScene</span><span class="token punctuation">(</span><span class="token operator">*</span>Binding<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">		OnJoinedSceneDelegate<span class="token punctuation">.</span><span class="token function">Broadcast</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="reference" tabindex="-1"><a class="header-anchor" href="#reference"><span>Reference</span></a></h2><ul><li><a href="https://vorixo.github.io/devtricks/contextual-anim/" target="_blank" rel="noopener noreferrer">How to use the Contextual Animation Plugin in your Multiplayer Games</a></li><li><a href="https://www.youtube.com/watch?v=A3y4YT9YQI8" target="_blank" rel="noopener noreferrer">Tutorial - Pairing finisher / takedown animations in Unreal Engine 5</a></li><li><a href="https://www.youtube.com/watch?v=wGhL1PvRGJ0&amp;t=222s" target="_blank" rel="noopener noreferrer">Contextual Animations</a></li><li><a href="https://tech.ninjabear.studio/p01g08-create-finisher.html" target="_blank" rel="noopener noreferrer">Create Finisher</a></li><li><a href="https://github.com/BanMing/SyncAnimation" target="_blank" rel="noopener noreferrer">示例工程</a></li></ul>`,32)]))}const W=a(y,[["render",_],["__file","SyncAnimation.html.vue"]]),I=JSON.parse('{"path":"/GameEngine/Unreal/animation/SyncAnimation.html","title":"多角色动画同步","lang":"en-US","frontmatter":{},"git":{"createdTime":1752145738000,"updatedTime":1752744251000,"contributors":[{"name":"ban-ming@foxmail.com","username":"ban-ming@foxmail.com","email":"ban-ming@foxmail.com","commits":1,"url":"https://github.com/ban-ming@foxmail.com"},{"name":"BanMing","username":"BanMing","email":"ban-ming@foxmail.com","commits":2,"url":"https://github.com/BanMing"}]},"readingTime":{"minutes":4.82,"words":1447},"filePathRelative":"GameEngine/Unreal/animation/SyncAnimation.md","localizedDate":"July 10, 2025","excerpt":"\\n<p>在制作玩法时，常常会有两个角色之间有互动，同时播放动画表演的需求。比如处决，角色交互等。这其中关键点事需要预先设置好两个角色的相对位置，同时播放两个角色动画。</p>\\n<p>一般来说有两种做法：</p>\\n<ul>\\n<li>参考骨骼，也就是在做主角色动画时，使用一根空骨骼作为副角色的位置。</li>\\n<li>插件：Contextual Animation</li>\\n</ul>\\n<p>值得注意的是这两种方式最终都会使用<a href=\\"https://banming.github.io/GameEngine/Unreal/animation/MotionWarping.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Motion Warping</a>来讲角色拉去到目标的位置和方向。</p>"}');export{W as comp,I as data};
