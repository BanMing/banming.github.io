import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,o as a,a as e}from"./app-StKyN5iB.js";const t={},p=e(`<h1 id="emscripten" tabindex="-1"><a class="header-anchor" href="#emscripten"><span>Emscripten</span></a></h1><p>把c++打包为WebAssembly....</p><h2 id="install" tabindex="-1"><a class="header-anchor" href="#install"><span>Install</span></a></h2><h3 id="windows" tabindex="-1"><a class="header-anchor" href="#windows"><span>Windows</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 下载工具</span>
<span class="token function">git</span> clone https://github.com/emscripten-core/emsdk.git

<span class="token builtin class-name">cd</span> emsdk

<span class="token comment"># 安装 需要科学上网</span>
./emsdk <span class="token function">install</span> latest
./emsdk activate latest

<span class="token comment"># 更新环境变量</span>
./emsdk_env.bat
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行后所有需要的文件都在<code>emsdk/upstream/</code>文件夹中，需要把<code>emsdk/upstream/bin</code>设置到环境变量。</p><p><strong>值得注意的是：</strong><code>upstream\\emscripten\\.emscripten</code>文件记录的是需要使用到的其他模块的执行文件位置。需要手动设置以下两个地方：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token comment"># 如果安装了LLVM会自动检测到安装的版本</span>
<span class="token comment"># 但是推荐这样配置，在upstream中也有llvm的执行文件</span>
<span class="token comment"># 同时版本也是smsdk匹配的，减少编译警告</span>
LLVM_ROOT <span class="token operator">=</span> <span class="token string">&#39;D:\\\\Code\\emsdk\\\\upstream\\\\bin&#39;</span> 
<span class="token comment"># 在使用该变量时，后面会自动补齐bin\\。使用wsam等执行文件</span>
BINARYEN_ROOT <span class="token operator">=</span> <span class="token string">&#39;D:\\\\Code\\\\emsdk\\\\upstream\\\\&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最后需要安装<code>MinGW</code>。</p><h3 id="mac" tabindex="-1"><a class="header-anchor" href="#mac"><span>Mac</span></a></h3><p>命令安装：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>brew <span class="token function">install</span> emscripten
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="command" tabindex="-1"><a class="header-anchor" href="#command"><span>Command</span></a></h2><p>指定编译文件：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 一种</span>
em++ bgfx.cpp <span class="token parameter variable">-std</span><span class="token operator">=</span>c++11 <span class="token parameter variable">-O2</span> <span class="token parameter variable">-s</span> <span class="token assign-left variable">ALLOW_MEMORY_GROWTH</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-s</span> <span class="token assign-left variable">MAX_WEBGL_VERSION</span><span class="token operator">=</span><span class="token number">2</span> <span class="token parameter variable">-s</span> <span class="token assign-left variable">MIN_WEBGL_VERSION</span><span class="token operator">=</span><span class="token number">2</span> <span class="token parameter variable">-s</span> <span class="token assign-left variable">USE_LIBPING</span><span class="token operator">=</span><span class="token number">1</span> test.cpp <span class="token parameter variable">-o</span> page.html --preload-file .<span class="token punctuation">\\</span>assets

<span class="token comment"># 两种</span>
em++ main.cpp <span class="token parameter variable">-std</span><span class="token operator">=</span>c++11 <span class="token parameter variable">-s</span> <span class="token assign-left variable">WASM</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-s</span> <span class="token assign-left variable">MAX_WEBGL_VERSION</span><span class="token operator">=</span><span class="token number">2</span> <span class="token parameter variable">-s</span> <span class="token assign-left variable">MIN_WEBGL_VERSION</span><span class="token operator">=</span><span class="token number">2</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-o</span> main.html
em++ WindowsProject1.cpp <span class="token parameter variable">-std</span><span class="token operator">=</span>c++11 <span class="token parameter variable">-s</span> <span class="token assign-left variable">WASM</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-s</span> <span class="token assign-left variable">MAX_WEBGL_VERSION</span><span class="token operator">=</span><span class="token number">2</span> <span class="token parameter variable">-s</span> <span class="token assign-left variable">MIN_WEBGL_VERSION</span><span class="token operator">=</span><span class="token number">2</span> <span class="token parameter variable">-O2</span> <span class="token parameter variable">-o</span> main.html

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="cmake" tabindex="-1"><a class="header-anchor" href="#cmake"><span>Cmake</span></a></h2><p>在使用<code>cmake</code>命令前加上<code>emcmake</code>字段，该字段会自动设置编译工具等。如执行以下命令：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>emcmake cmake <span class="token punctuation">..</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>转义后的命令为：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code> cmake <span class="token punctuation">..</span> <span class="token parameter variable">-DCMAKE_TOOLCHAIN_FILE</span><span class="token operator">=</span>D:<span class="token punctuation">\\</span>Code<span class="token punctuation">\\</span>emsdk<span class="token punctuation">\\</span>upstream<span class="token punctuation">\\</span>emscripten<span class="token punctuation">\\</span>cmake<span class="token punctuation">\\</span>Modules<span class="token punctuation">\\</span>Platform<span class="token punctuation">\\</span>Emscripten.cmake <span class="token string">&quot;-DCMAKE_CROSSCOMPILING_EMULATOR=C:\\Program Files<span class="token entity" title="\\n">\\n</span>odejs<span class="token entity" title="\\n">\\n</span>ode.exe&quot;</span> <span class="token parameter variable">-G</span> <span class="token string">&quot;MinGW Makefiles&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在<code>CMakeLists.txt</code>文件中可以设置：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>add_executable<span class="token punctuation">(</span>$<span class="token punctuation">{</span>OutputExecutable<span class="token punctuation">}</span> $<span class="token punctuation">{</span>SOURCE_CXX_FILES<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">######################################################################</span>
<span class="token comment"># Emscripten</span>
<span class="token comment">######################################################################</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>EMSCRIPTEN<span class="token punctuation">)</span>
    <span class="token comment"># Generate an HTML file</span>
    <span class="token builtin">set</span><span class="token punctuation">(</span>CMAKE_EXECUTABLE_SUFFIX <span class="token punctuation">.</span>html<span class="token punctuation">)</span>

    <span class="token comment"># Build Cache: SDL2_mixer, libpng, zlib</span>
    execute_process<span class="token punctuation">(</span>COMMAND <span class="token string">&quot;\${EMSCRIPTEN_ROOT_PATH}/embuilder\${EMCC_SUFFIX}&quot;</span> build sdl2_mixer libpng zlib<span class="token punctuation">)</span>
    
    <span class="token keyword">if</span><span class="token punctuation">(</span>EXISTS <span class="token string">&quot;\${SOURCE_DATA_DIR}&quot;</span> AND IS_DIRECTORY <span class="token string">&quot;\${SOURCE_DATA_DIR}&quot;</span><span class="token punctuation">)</span>
        target_link_options<span class="token punctuation">(</span>
            $<span class="token punctuation">{</span>OutputExecutable<span class="token punctuation">}</span>
            PRIVATE
            <span class="token operator">-</span>sALLOW_MEMORY_GROWTH<span class="token operator">=</span><span class="token number">1</span>
            <span class="token operator">-</span>sMAX_WEBGL_VERSION<span class="token operator">=</span><span class="token number">2</span>
            <span class="token operator">-</span>sMIN_WEBGL_VERSION<span class="token operator">=</span><span class="token number">2</span>
            <span class="token operator">-</span>sUSE_LIBPNG<span class="token operator">=</span><span class="token number">1</span>
            <span class="token operator">-</span>sUSE_SDL_MIXER<span class="token operator">=</span><span class="token number">2</span>          <span class="token comment"># thanks for the s, cstd</span>
            <span class="token operator">-</span>sLLD_REPORT_UNDEFINED
            <span class="token operator">-</span><span class="token operator">-</span>preload<span class="token operator">-</span><span class="token builtin">file</span> $<span class="token punctuation">{</span>SOURCE_DATA_DIR<span class="token punctuation">}</span>@assets<span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        target_link_options<span class="token punctuation">(</span>
            $<span class="token punctuation">{</span>OutputExecutable<span class="token punctuation">}</span>
            PRIVATE
            <span class="token operator">-</span>sALLOW_MEMORY_GROWTH<span class="token operator">=</span><span class="token number">1</span>
            <span class="token operator">-</span>sMAX_WEBGL_VERSION<span class="token operator">=</span><span class="token number">2</span>
            <span class="token operator">-</span>sMIN_WEBGL_VERSION<span class="token operator">=</span><span class="token number">2</span>
            <span class="token operator">-</span>sUSE_LIBPNG<span class="token operator">=</span><span class="token number">1</span>
            <span class="token operator">-</span>sUSE_SDL_MIXER<span class="token operator">=</span><span class="token number">2</span>          <span class="token comment"># thanks for the s, cstd</span>
            <span class="token operator">-</span>sLLD_REPORT_UNDEFINED<span class="token punctuation">)</span>
    endif<span class="token punctuation">(</span><span class="token punctuation">)</span>

endif<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># Emscripten</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中<code>EMSCRIPTEN</code>字段在Emscripten.cmake文件中定义的。</p><p>在vscode中配置</p><p>https://blog.evernightfireworks.com/emscripten_config/</p><h2 id="example-project" tabindex="-1"><a class="header-anchor" href="#example-project"><span>Example Project</span></a></h2><p>Project Respiratory： https://github.com/Moros1138/pge-template-project</p><h2 id="refence" tabindex="-1"><a class="header-anchor" href="#refence"><span>Refence</span></a></h2><p>https://emscripten.org/index.html</p><p>https://www.youtube.com/watch?v=1xFny-BkkR4</p><p>https://github.com/emscripten-core/emscripten/issues/10412</p>`,31),l=[p];function i(c,o){return a(),n("div",null,l)}const m=s(t,[["render",i],["__file","Emstripten.html.vue"]]),u=JSON.parse('{"path":"/Basic/language/Cplusplus/Emstripten.html","title":"Emscripten","lang":"en-US","frontmatter":{"date":"2023-04-27T15:24:16.000Z","tag":["C++","Web"]},"headers":[{"level":2,"title":"Install","slug":"install","link":"#install","children":[{"level":3,"title":"Windows","slug":"windows","link":"#windows","children":[]},{"level":3,"title":"Mac","slug":"mac","link":"#mac","children":[]}]},{"level":2,"title":"Command","slug":"command","link":"#command","children":[]},{"level":2,"title":"Cmake","slug":"cmake","link":"#cmake","children":[]},{"level":2,"title":"Example Project","slug":"example-project","link":"#example-project","children":[]},{"level":2,"title":"Refence","slug":"refence","link":"#refence","children":[]}],"git":{"createdTime":1682580256000,"updatedTime":1707212881000,"contributors":[{"name":"BanMing","email":"ban-ming@foxmail.com","commits":2},{"name":"wupeng","email":"wupeng_a2484@virtuos.com.cn","commits":2}]},"readingTime":{"minutes":1.64,"words":492},"filePathRelative":"Basic/language/Cplusplus/Emstripten.md","localizedDate":"April 27, 2023","excerpt":"\\n<p>把c++打包为WebAssembly....</p>\\n<h2>Install</h2>\\n<h3>Windows</h3>\\n<div class=\\"language-bash\\" data-ext=\\"sh\\" data-title=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"token comment\\"># 下载工具</span>\\n<span class=\\"token function\\">git</span> clone https://github.com/emscripten-core/emsdk.git\\n\\n<span class=\\"token builtin class-name\\">cd</span> emsdk\\n\\n<span class=\\"token comment\\"># 安装 需要科学上网</span>\\n./emsdk <span class=\\"token function\\">install</span> latest\\n./emsdk activate latest\\n\\n<span class=\\"token comment\\"># 更新环境变量</span>\\n./emsdk_env.bat\\n</code></pre></div>"}');export{m as comp,u as data};
