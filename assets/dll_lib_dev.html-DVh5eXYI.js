import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{e as p,f as l,g as s,h as a,j as o,k as c,r as i,o as u}from"./app-NW-ua5u5.js";const r={};function d(k,n){const t=i("RouteLink");return u(),p("div",null,[n[2]||(n[2]=l(`<h1 id="使用c-动态库开发unity游戏" tabindex="-1"><a class="header-anchor" href="#使用c-动态库开发unity游戏"><span>使用C#动态库开发unity游戏</span></a></h1><p>我们不把C#放在unity工程中，单独建立一个c#的解决方案，在这其中分别实现多个项目，每个项目导出一个动态库，也就是dll。<br> 实现：</p><ul><li>设置unity官方库引用</li><li>调试，自动生成mdb</li><li>自动复制dll到unity工程中</li><li>加密mono</li></ul><p>TODO:</p><ul><li>编译IL2CPP</li><li>加密IL2CPP</li></ul><h2 id="c-项目props与targets文件" tabindex="-1"><a class="header-anchor" href="#c-项目props与targets文件"><span>C#项目<code>props</code>与<code>targets</code>文件</span></a></h2><h3 id="props文件" tabindex="-1"><a class="header-anchor" href="#props文件"><span>props文件</span></a></h3><p>需要使用到<code>.props</code>文件，我们有找到这个的UI编辑器，官方<a href="https://docs.microsoft.com/en-us/visualstudio/msbuild/customize-your-build?view=vs-2022" target="_blank" rel="noopener noreferrer">文档1</a>,<a href="https://docs.microsoft.com/en-us/cpp/build/reference/vcxproj-file-structure?view=msvc-170" target="_blank" rel="noopener noreferrer">文档2</a></p><p>这个文件就像是全局变量设置，也可以对每个项目单独设置。</p><h3 id="targets文件" tabindex="-1"><a class="header-anchor" href="#targets文件"><span>targets文件</span></a></h3><p><a href="https://docs.microsoft.com/en-us/visualstudio/msbuild/msbuild-concepts?view=vs-2022" target="_blank" rel="noopener noreferrer">文档</a>，这是一个<code>XML</code>格式的文件让你控制怎么去构建特殊平台的软件，是由<code>MSBuild</code>提供的。这个文件包含了4个部分：</p><ul><li>properties:一个<code>key/value</code>类型配置项，跟<code>.props</code>文件一样</li><li>items:构建系统的输入，通常是文件</li><li>tasks:如何创建可由<code>MSBuild</code>用于执行原子构建操作的可执行代码单元</li><li>targets:解释如何按特定顺序将任务组合在一起，并使构建过程的各个部分能够在命令行上调用</li></ul><p><a href="https://learn.microsoft.com/en-us/visualstudio/msbuild/msbuild-targets?view=vs-2022" target="_blank" rel="noopener noreferrer">https://learn.microsoft.com/en-us/visualstudio/msbuild/msbuild-targets?view=vs-2022</a></p><p>我们需要把写好的<code>targets</code>文件，在<code>csproj</code>中导入，这样同样会导入<code>props</code>文件。</p><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml"><pre><code><span class="line"><span class="token comment">&lt;!-- If solution has custom targets file then include it. Used for deployment, defines, etc. --&gt;</span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Import</span> <span class="token attr-name">Condition</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Exists(&#39;$(SolutionDir)$(SolutionName).targets&#39;)<span class="token punctuation">&quot;</span></span> <span class="token attr-name">Project</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>$(SolutionDir)$(SolutionName).targets<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>同样也需要在<code>csproj</code>中加入我们自定的<code>Target</code>行为：</p><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Target</span> <span class="token attr-name">Name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>BeforeBuild<span class="token punctuation">&quot;</span></span> <span class="token attr-name">DependsOnTargets</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ProjectValidation<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span></span>
<span class="line"><span class="token comment">&lt;!-- Deploy all required DLL&#39;s to Unity Assets folder after build.--&gt;</span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Target</span> <span class="token attr-name">Name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>AfterBuild<span class="token punctuation">&quot;</span></span> <span class="token attr-name">DependsOnTargets</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UnityDeploy<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="添加相对路径unity官方库" tabindex="-1"><a class="header-anchor" href="#添加相对路径unity官方库"><span>添加相对路径unity官方库</span></a></h2><p>我们可以先在<code>.props</code>中设置我们当前使用的unity版本：</p><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>UnityVersion</span> <span class="token attr-name">Condition</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span> <span class="token punctuation">&#39;</span>$(UnityVersion)&#39; == &#39;&#39; <span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>2020.3.7f1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>UnityVersion</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>然后找到Unity的安装路径，设置为<code>UnityInstallPath</code>，我们可以从这几个位置去查询Unity程序的位置：</p><ul><li>判断<code>UnityInstallPath</code>这个值是否已经被设置，如使用<code>userprops</code>文件</li><li>特定版本的安装位置的注册表<div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>UnityInstallPath</span> <span class="token attr-name">Condition</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span> <span class="token punctuation">&#39;</span>$(UnityInstallPath)&#39; == &#39;&#39; <span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>$([MSBuild] ::GetRegistryValueFromView(&#39;HKEY_CURRENT_USER\\Software\\Unity     Technologies\\Installer\\Unity $(UnityVersion)&#39;, &#39;Location x64&#39;, &#39;&#39;, RegistryView.    Registry64))<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>UnityInstallPath</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li>默认<code>Unity Hub</code>的安装路径(<code>C:\\Program Files\\Unity\\Hub\\Editor\\{version}</code>)</li><li>默认<code>Unity</code>的安装路径(<code>C:\\Program Files\\Unity\\{version}</code>)</li><li>默认<code>Unity</code>安装的注册表<div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>UnityInstallPath</span> <span class="token attr-name">Condition</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span> <span class="token punctuation">&#39;</span>$(UnityInstallPath)&#39; == &#39;&#39; <span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>$([MSBuild] ::GetRegistryValueFromView(&#39;HKEY_CURRENT_USER\\Software\\Unity     Technologies\\Installer\\Unity&#39;, &#39;Location x64&#39;, &#39;&#39;, RegistryView.Registry64))&lt;/  UnityInstallPath&gt;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul><p>然后就可以设置<code>unity</code>官方库的路径：</p><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml"><pre><code><span class="line"><span class="token comment">&lt;!-- Path to Unity&#39;s managed assemblies. --&gt;</span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>UnityReferencePath</span><span class="token punctuation">&gt;</span></span>$(UnityInstallPath)\\Editor\\Data\\Managed\\UnityEngine<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>UnityReferencePath</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>UnityEditorReferencePath</span><span class="token punctuation">&gt;</span></span>$(UnityInstallPath)\\Editor\\Data\\Managed<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>UnityEditorReferencePath</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>UnityExtensionsReferencePath</span><span class="token punctuation">&gt;</span></span>$(UnityInstallPath)\\Editor\\Data\\UnityExtensions<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>UnityExtensionsReferencePath</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="生成mdb" tabindex="-1"><a class="header-anchor" href="#生成mdb"><span>生成mdb</span></a></h2><p>因为unity识别mdb文件来调试，所以我们可以直接使用pdb2mdb工具转换pdb到mdb文件,可以在mono的GitHub找到<a href="https://github.com/Unity-Technologies/mono/tree/unity-main/mcs/tools/pdb2mdb" target="_blank" rel="noopener noreferrer">源代码</a>，在编译即可得到。当然也可以直接在unity的安装目录找到<code>pdb2mdb.exe</code>：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">C:\\Program Files\\Unity\\2020.3.7f1\\Editor\\Data\\MonoBleedingEdge\\lib\\mono\\4.5\\pdb2mdb.exe</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>我们可以直接使用<code>pdb2mdb</code>命令生成mdb：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">pdb2mdb.exe unity_dll_lib.dll</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>不过mono4.5版本的<code>pdb2mdb.exe</code>移动出来单独执行会报错：</p><div class="language-error line-numbers-mode" data-highlighter="prismjs" data-ext="error"><pre><code><span class="line">Mono pdb to mdb debug symbol store converter</span>
<span class="line">Usage: pdb2mdb assembly</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>我们可以根据<a href="https://github.com/Unity-Technologies/mono/blob/2020.3.7f1/mcs/tools/pdb2mdb/pdb2mdb-net_4_x.csproj" target="_blank" rel="noopener noreferrer">源码的csproj工程文件</a>看到：</p><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ItemGroup</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ProjectReference</span> <span class="token attr-name">Include</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../../class/corlib/corlib-net_4_x.csproj<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Project</span><span class="token punctuation">&gt;</span></span>{2CA6026B-2DC8-4C4C-A12C-1E8234049DB7}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Project</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Name</span><span class="token punctuation">&gt;</span></span>corlib-net_4_x<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Name</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ProjectReference</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ProjectReference</span> <span class="token attr-name">Include</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../../class/Mono.Cecil/Mono.Cecil-net_4_x.csproj<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Project</span><span class="token punctuation">&gt;</span></span>{2C0D558F-0B38-4691-967E-A910A1B995C1}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Project</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Name</span><span class="token punctuation">&gt;</span></span>Mono.Cecil-net_4_x<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Name</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ProjectReference</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ProjectReference</span> <span class="token attr-name">Include</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../../class/Mono.CompilerServices.SymbolWriter/Mono.CompilerServices.SymbolWriter-net_4_x.csproj<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Project</span><span class="token punctuation">&gt;</span></span>{88177C4B-894F-485D-B95A-44199C06BE9F}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Project</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Name</span><span class="token punctuation">&gt;</span></span>Mono.CompilerServices.SymbolWriter-net_4_x<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Name</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ProjectReference</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ProjectReference</span> <span class="token attr-name">Include</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../../class/System.Core/System.Core-net_4_x.csproj<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Project</span><span class="token punctuation">&gt;</span></span>{359142A1-D80F-401E-AA64-7167C9317649}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Project</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Name</span><span class="token punctuation">&gt;</span></span>System.Core-net_4_x<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Name</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ProjectReference</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ItemGroup</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>他是有几个引用项的，最后验证只需要依赖一下这两个dll：</p><ul><li>Mono.Cecil.dll（<code>C:\\Program Files\\Unity\\2020.3.7f1\\Editor\\Data\\MonoBleedingEdge\\lib\\mono\\gac\\Mono.Cecil\\0.10.0.0__0738eb9f132ed756\\Mono.Cecil.dll</code>）</li><li>Mono.CompilerServices.SymbolWriter.dll(<code>C:\\Program Files\\Unity\\2020.3.7f1\\Editor\\Data\\MonoBleedingEdge\\lib\\mono\\4.5\\Mono.CompilerServices.SymbolWriter.dll</code>)</li></ul><p>所以把这三个文件放到同一个目录下就可以了。不过我们发现最新的提交已经把<code>csproj</code>文件删除了:( 。</p><p>自动生成mdb文件，只需要在<code>targets</code>文件中加入一个<code>Target</code>的执行命令即可：</p><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Target</span> <span class="token attr-name">Name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>DeployBuildMdbs<span class="token punctuation">&quot;</span></span> <span class="token attr-name">DependsOnTargets</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ProjectValidation<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token comment">&lt;!-- Build the .mdb files from the .dll and .pdbs. This is broken out into</span>
<span class="line">     a separate target because msbuild will actually check the Inputs and</span>
<span class="line">     Outputs timestamps and skip the step if everything is up-to-date.</span>
<span class="line">     </span>
<span class="line">     Using a single &lt;Exec&gt; call so it will run a little faster. --&gt;</span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PropertyGroup</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ProjectDll</span><span class="token punctuation">&gt;</span></span>$(ProjectDir)$(OutputPath)$(ProjectName).dll<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ProjectDll</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ProjectMdb</span><span class="token punctuation">&gt;</span></span>$(ProjectDll).mdb<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ProjectMdb</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>PropertyGroup</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Exec</span> <span class="token attr-name">Command</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>$(MonoMdbGenerator) $(ProjectDll) <span class="token entity named-entity" title="&amp;">&amp;amp;</span> echo Generating $(ProjectMdb)<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Target</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="export-dll" tabindex="-1"><a class="header-anchor" href="#export-dll"><span>export dll</span></a></h2><ul><li>使用vs到处<br><a href="https://blog.csdn.net/qq_15267341/article/details/51747000?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-5.control&amp;dist_request_id=&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-5.control" target="_blank" rel="noopener noreferrer">https://blog.csdn.net/qq_15267341/article/details/51747000?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-5.control&amp;dist_request_id=&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-5.control</a></li></ul><h2 id="dnspy" tabindex="-1"><a class="header-anchor" href="#dnspy"><span>dnspy</span></a></h2><p><a href="https://github.com/dnSpy/dnSpy" target="_blank" rel="noopener noreferrer">https://github.com/dnSpy/dnSpy</a><br> 使用dnspy修改了源码，先编译了，需要再保存一下</p><h2 id="调试dll" tabindex="-1"><a class="header-anchor" href="#调试dll"><span>调试dll</span></a></h2><p>使用vs调试需要安装vs 插件。这里值得注意的是需要设置unity调式的话需要把dll的<code>Target framework</code>设置成unity版本的，或者<code>4.6</code>也可以<br> 文档：<br><a href="https://docs.microsoft.com/zh-cn/previous-versions/visualstudio/visual-studio-2015/cross-platform/using-visual-studio-tools-for-unity?view=vs-2015&amp;viewFallbackFrom=vs-2019" target="_blank" rel="noopener noreferrer">https://docs.microsoft.com/zh-cn/previous-versions/visualstudio/visual-studio-2015/cross-platform/using-visual-studio-tools-for-unity?view=vs-2015&amp;viewFallbackFrom=vs-2019</a></p><h2 id="加密" tabindex="-1"><a class="header-anchor" href="#加密"><span>加密</span></a></h2><p>我们可以在打包后，对dll做加密：</p><div class="language-csharp line-numbers-mode" data-highlighter="prismjs" data-ext="cs"><pre><code><span class="line"><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">EncryptAssemblyCSharp</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name"><span class="token keyword">string</span></span> acsPath <span class="token operator">=</span> Application<span class="token punctuation">.</span>dataPath <span class="token operator">+</span> <span class="token string">&quot;/../Build/unity_dll_Data/Managed/Sample.dll&quot;</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name"><span class="token keyword">int</span></span> offset <span class="token operator">=</span> Path<span class="token punctuation">.</span><span class="token function">GetFileName</span><span class="token punctuation">(</span>acsPath<span class="token punctuation">)</span><span class="token punctuation">.</span>Length<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token class-name"><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> dllBytes <span class="token operator">=</span> File<span class="token punctuation">.</span><span class="token function">ReadAllBytes</span><span class="token punctuation">(</span>acsPath<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name"><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> newBytes <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name"><span class="token keyword">byte</span></span><span class="token punctuation">[</span>dllBytes<span class="token punctuation">.</span>Length <span class="token operator">+</span> offset<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> offset<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">{</span></span>
<span class="line">            Buffer<span class="token punctuation">.</span><span class="token function">SetByte</span><span class="token punctuation">(</span>newBytes<span class="token punctuation">,</span> i<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span>UnityEngine<span class="token punctuation">.</span>Random<span class="token punctuation">.</span><span class="token function">Range</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">.</span>MinValue<span class="token punctuation">,</span> <span class="token keyword">byte</span><span class="token punctuation">.</span>MaxValue<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">        Buffer<span class="token punctuation">.</span><span class="token function">BlockCopy</span><span class="token punctuation">(</span>dllBytes<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> newBytes<span class="token punctuation">,</span> offset<span class="token punctuation">,</span> dllBytes<span class="token punctuation">.</span>Length<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        File<span class="token punctuation">.</span><span class="token function">WriteAllBytes</span><span class="token punctuation">(</span>acsPath<span class="token punctuation">,</span> newBytes<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        Debug<span class="token punctuation">.</span><span class="token function">Log</span><span class="token punctuation">(</span><span class="token string">&quot;Encrypt Assembly CSharp Completed!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,47)),s("p",null,[n[1]||(n[1]=a("再对mono加载时做一定的修改")),o(t,{to:"/GameEngine/Unity/manual/normal/mono.html#%E4%BF%AE%E6%94%B9%E8%AF%BB%E5%8F%96dll"},{default:c(()=>n[0]||(n[0]=[a("可以看这里")])),_:1})]),n[3]||(n[3]=s("h2",{id:"tips",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#tips"},[s("span",null,"tips")])],-1)),n[4]||(n[4]=s("p",null,"在 vs中查看Modules中对应的dll文件的Syboml是否加载进来，就可以看到是否可以调式",-1))])}const v=e(r,[["render",d],["__file","dll_lib_dev.html.vue"]]),b=JSON.parse('{"path":"/GameEngine/Unity/manual/normal/dll_lib_dev.html","title":"使用C#动态库开发unity游戏","lang":"en-US","frontmatter":{"date":"2022-06-10T19:27:24.000Z","tag":["Unity","C#"]},"git":{"createdTime":1654860444000,"updatedTime":1707213711000,"contributors":[{"name":"BanMing","username":"BanMing","email":"ban-ming@foxmail.com","commits":5,"url":"https://github.com/BanMing"},{"name":"wupeng","username":"wupeng","email":"wupeng_a2484@virtuos.com.cn","commits":2,"url":"https://github.com/wupeng"}]},"readingTime":{"minutes":4.35,"words":1304},"filePathRelative":"GameEngine/Unity/manual/normal/dll_lib_dev.md","localizedDate":"June 10, 2022","excerpt":"\\n<p>我们不把C#放在unity工程中，单独建立一个c#的解决方案，在这其中分别实现多个项目，每个项目导出一个动态库，也就是dll。<br>\\n实现：</p>\\n<ul>\\n<li>设置unity官方库引用</li>\\n<li>调试，自动生成mdb</li>\\n<li>自动复制dll到unity工程中</li>\\n<li>加密mono</li>\\n</ul>\\n<p>TODO:</p>\\n<ul>\\n<li>编译IL2CPP</li>\\n<li>加密IL2CPP</li>\\n</ul>\\n<h2>C#项目<code>props</code>与<code>targets</code>文件</h2>\\n<h3>props文件</h3>"}');export{v as comp,b as data};
