import{_ as r}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as l,o,c,a as t,b as a,d as e,w as i,e as n}from"./app-Kx2h4JBD.js";const d="/assets/20201229233249-CVL2LzgB.png",h="/assets/20210303152830-lhngD2Uk.png",p="/assets/20210303152957-fBKp5cps.png",_="/assets/20210303153105-nhUFb04Y.png",u="/assets/20210303153157-oEmsjk7j.png",m="/assets/20210303153512--vNYpboE.png",g="/assets/20210303153629-FSdadr0z.png",f={},b=n('<h1 id="渲染管线" tabindex="-1"><a class="header-anchor" href="#渲染管线" aria-hidden="true">#</a> 渲染管线</h1><p>开始我们先了解一下，以后我们需要学习那些东西，这样我们会对整个流程有一个大致的了解。让我们到每一个步骤都会明白我们是在处理什么，是在什么阶段，什么前提？</p><p>渲染管线就是渲染流程，就是我们需要把需要展示到屏幕中的模型数据从内存中拿出来，再经过CPU把这些数据传递给GPU，然后GPU做的一系列工作后，最后展示到屏幕上的过程。</p><p>对于在GPU中的工作流在不同的书里或者教材里都会有一些不同的描述，但是大致流程都是一样的。下面分别列举出了几个总结：</p><h2 id="unity-shader入门精要" tabindex="-1"><a class="header-anchor" href="#unity-shader入门精要" aria-hidden="true">#</a> Unity Shader入门精要</h2><figure><img src="https://edrawcloudpubliccn.oss-cn-shenzhen.aliyuncs.com/viewer/self/16747446/share/2020-4-14/1586819691/main.svg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>我们主要会介绍：</p>',7),x=n('<h2 id="fundamentals-of-computer-graphics" tabindex="-1"><a class="header-anchor" href="#fundamentals-of-computer-graphics" aria-hidden="true">#</a> Fundamentals of Computer Graphics</h2><p>。</p><img src="'+d+'" width="70%"><h2 id="games-101" tabindex="-1"><a class="header-anchor" href="#games-101" aria-hidden="true">#</a> Games 101</h2><p>总体流程： <img src="'+h+'" alt="" loading="lazy"></p><p>接下来就分开说一下每个步骤：</p>',6),G=t("img",{src:p,alt:"",loading:"lazy"},null,-1),y=t("img",{src:_,alt:"",loading:"lazy"},null,-1),z=t("img",{src:u,alt:"",loading:"lazy"},null,-1),B=t("img",{src:m,alt:"",loading:"lazy"},null,-1),E=t("img",{src:g,alt:"",loading:"lazy"},null,-1);function v(w,U){const s=l("RouterLink");return o(),c("div",null,[b,t("ul",null,[t("li",null,[a("几何阶段：对应是在顶点着色器中做"),e(s,{to:"/Graphic/basic/raster/viewing.html"},{default:i(()=>[a("转换")]),_:1}),a("，裁剪，屏幕映射")]),t("li",null,[a("光栅阶段："),e(s,{to:"/Graphic/basic/raster/base.html"},{default:i(()=>[a("三角形设置")]),_:1}),a("，"),e(s,{to:"/Graphic/basic/raster/shading.html"},{default:i(()=>[a("着色")]),_:1})])]),x,t("p",null,[e(s,{to:"/Graphic/basic/raster/viewing.html"},{default:i(()=>[a("转换")]),_:1}),a("： "),G]),t("p",null,[e(s,{to:"/Graphic/basic/raster/base.html"},{default:i(()=>[a("三角形设置")]),_:1}),a("： "),y]),t("p",null,[e(s,{to:"/Graphic/basic/raster/base.html#%E7%94%BB%E5%AE%B6%E7%AE%97%E6%B3%95"},{default:i(()=>[a("深度测试")]),_:1}),a("： "),z]),t("p",null,[e(s,{to:"/Graphic/basic/raster/shading.html"},{default:i(()=>[a("着色")]),_:1}),a("： "),B]),t("p",null,[e(s,{to:"/Graphic/basic/raster/texture.html"},{default:i(()=>[a("贴图")]),_:1}),a("： "),E])])}const N=r(f,[["render",v],["__file","index.html.vue"]]);export{N as default};
