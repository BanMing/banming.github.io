import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{e as Q,f as n,g as a,h as T,o as e}from"./app-DxuBeWW2.js";const l="/assets/36698085_112-COzDFzrX.jpg",r={},s={class:"MathJax",jax:"SVG",style:{position:"relative"}},o={style:{"vertical-align":"-0.186ex"},xmlns:"http://www.w3.org/2000/svg",width:"16.419ex",height:"1.756ex",role:"img",focusable:"false",viewBox:"0 -694 7257 776","aria-hidden":"true"},m={class:"MathJax",jax:"SVG",style:{position:"relative"}},d={style:{"vertical-align":"-0.186ex"},xmlns:"http://www.w3.org/2000/svg",width:"6.19ex",height:"2.072ex",role:"img",focusable:"false",viewBox:"0 -833.9 2736.1 915.9","aria-hidden":"true"},u={class:"MathJax",jax:"SVG",style:{position:"relative"}},g={style:{"vertical-align":"-0.486ex"},xmlns:"http://www.w3.org/2000/svg",width:"5.203ex",height:"2.106ex",role:"img",focusable:"false",viewBox:"0 -716 2299.6 931","aria-hidden":"true"};function p(h,t){return e(),Q("div",null,[t[9]||(t[9]=n('<h1 id="using-dual-quaternions-for-skinning" tabindex="-1"><a class="header-anchor" href="#using-dual-quaternions-for-skinning"><span>Using Dual Quaternions for Skinning</span></a></h1><p>之前实现的蒙皮混合插值叫作线性插值，这种线性插值在有体积旋转是会出现一定的问题。如下图 ：</p><figure><img src="'+l+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>为了解决这个问题，我们可以使用对偶四元数来做混合。</p><h2 id="introducing-dual-quaternions" tabindex="-1"><a class="header-anchor" href="#introducing-dual-quaternions"><span>Introducing dual quaternions</span></a></h2>',5)),a("p",null,[t[6]||(t[6]=T("对偶数跟虚数很像，对偶数由一个实数部分和对偶部分组成。假设ε是对偶操作符，一个对偶数可以表示为：")),a("mjx-container",s,[(e(),Q("svg",o,t[0]||(t[0]=[n('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(849.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(1905.6,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(2356.6,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(2822.6,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(3351.6,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mo" transform="translate(3871.8,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mi" transform="translate(4872,0)"><path data-c="1D700" d="M190 -22Q124 -22 76 11T27 107Q27 174 97 232L107 239L99 248Q76 273 76 304Q76 364 144 408T290 452H302Q360 452 405 421Q428 405 428 392Q428 381 417 369T391 356Q382 356 371 365T338 383T283 392Q217 392 167 368T116 308Q116 289 133 272Q142 263 145 262T157 264Q188 278 238 278H243Q308 278 308 247Q308 206 223 206Q177 206 142 219L132 212Q68 169 68 112Q68 39 201 39Q253 39 286 49T328 72T345 94T362 105Q376 103 376 88Q376 79 365 62T334 26T275 -8T190 -22Z"></path></g><g data-mml-node="mi" transform="translate(5338,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(5858,0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(6430,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(6959,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g></g></g>',1)]))),t[1]||(t[1]=a("mjx-assistive-mml",{unselectable:"on",display:"inline"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("mi",null,"x"),a("mo",null,"="),a("mi",null,"r"),a("mi",null,"e"),a("mi",null,"a"),a("mi",null,"l"),a("mo",null,"+"),a("mi",null,"ε"),a("mi",null,"d"),a("mi",null,"u"),a("mi",null,"a"),a("mi",null,"l")])],-1))]),t[7]||(t[7]=T("，其中 ")),a("mjx-container",m,[(e(),Q("svg",d,t[2]||(t[2]=[n('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D700" d="M190 -22Q124 -22 76 11T27 107Q27 174 97 232L107 239L99 248Q76 273 76 304Q76 364 144 408T290 452H302Q360 452 405 421Q428 405 428 392Q428 381 417 369T391 356Q382 356 371 365T338 383T283 392Q217 392 167 368T116 308Q116 289 133 272Q142 263 145 262T157 264Q188 278 238 278H243Q308 278 308 247Q308 206 223 206Q177 206 142 219L132 212Q68 169 68 112Q68 39 201 39Q253 39 286 49T328 72T345 94T362 105Q376 103 376 88Q376 79 365 62T334 26T275 -8T190 -22Z"></path></g><g data-mml-node="mn" transform="translate(499,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(1180.3,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(2236.1,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g>',1)]))),t[3]||(t[3]=a("mjx-assistive-mml",{unselectable:"on",display:"inline"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("msup",null,[a("mi",null,"ε"),a("mn",null,"2")]),a("mo",null,"="),a("mn",null,"0")])],-1))]),t[8]||(t[8]=T(" 并且 ")),a("mjx-container",u,[(e(),Q("svg",g,t[4]||(t[4]=[n('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D700" d="M190 -22Q124 -22 76 11T27 107Q27 174 97 232L107 239L99 248Q76 273 76 304Q76 364 144 408T290 452H302Q360 452 405 421Q428 405 428 392Q428 381 417 369T391 356Q382 356 371 365T338 383T283 392Q217 392 167 368T116 308Q116 289 133 272Q142 263 145 262T157 264Q188 278 238 278H243Q308 278 308 247Q308 206 223 206Q177 206 142 219L132 212Q68 169 68 112Q68 39 201 39Q253 39 286 49T328 72T345 94T362 105Q376 103 376 88Q376 79 365 62T334 26T275 -8T190 -22Z"></path></g><g data-mml-node="mo" transform="translate(743.8,0)"><path data-c="2260" d="M166 -215T159 -215T147 -212T141 -204T139 -197Q139 -190 144 -183L306 133H70Q56 140 56 153Q56 168 72 173H327L406 327H72Q56 332 56 347Q56 360 70 367H426Q597 702 602 707Q605 716 618 716Q625 716 630 712T636 703T638 696Q638 692 471 367H707Q722 359 722 347Q722 336 708 328L451 327L371 173H708Q722 163 722 153Q722 140 707 133H351Q175 -210 170 -212Q166 -215 159 -215Z"></path></g><g data-mml-node="mn" transform="translate(1799.6,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g>',1)]))),t[5]||(t[5]=a("mjx-assistive-mml",{unselectable:"on",display:"inline"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("mi",null,"ε"),a("mo",null,"≠"),a("mn",null,"0")])],-1))])]),t[10]||(t[10]=n('<p>它可以代表这两个四元数或者8方位的浮点数</p><p>具体的可以参看资料：<a href="https://cs.gmu.edu/~jmlien/teaching/cs451/uploads/Main/dual-quaternion.pdf" target="_blank" rel="noopener noreferrer">https://cs.gmu.edu/~jmlien/teaching/cs451/uploads/Main/dual-quaternion.pdf</a></p><h2 id="implementing-dual-quaternions" tabindex="-1"><a class="header-anchor" href="#implementing-dual-quaternions"><span>Implementing dual quaternions</span></a></h2><p>点乘结果属性：</p><ul><li>如果为正数，对偶四元数点在相同方向</li><li>如果为负数 ，对偶四元数点在反方向</li><li>如果 为0，对偶四元数垂直</li></ul><h2 id="skinning-with-dual-quaternions" tabindex="-1"><a class="header-anchor" href="#skinning-with-dual-quaternions"><span>Skinning with dual quaternions</span></a></h2><p>我们需要使用对偶四元数替换蒙皮中的矩阵。</p><p>三个步骤需要使用对偶四元数替换矩阵：</p><ul><li>Convert the matrices to dual quaternions in the vertex shader</li><li>Convert the matrices of the current pose to dual quaternions, then pass dual quaternions to the vertex shader</li><li>Convert each transform of the current pose to a dual quaternion, then accumulate the world transform as a dual quaternion</li></ul><h2 id="understand-how-to-use-dual-quaternions-skinning" tabindex="-1"><a class="header-anchor" href="#understand-how-to-use-dual-quaternions-skinning"><span>Understand how to use dual quaternions skinning</span></a></h2><h2 id="refence" tabindex="-1"><a class="header-anchor" href="#refence"><span>Refence</span></a></h2>',11))])}const w=i(r,[["render",p],["__file","DualQuaternions.html.vue"]]),x=JSON.parse('{"path":"/Animation/gameOpenGL/DualQuaternions.html","title":"Using Dual Quaternions for Skinning","lang":"en-US","frontmatter":{"date":"2022-07-11T23:36:35.000Z","tag":["Math"],"order":13},"git":{"createdTime":1657553795000,"updatedTime":1707215246000,"contributors":[{"name":"wupeng","username":"wupeng","email":"ban-ming@foxmail.com","commits":3,"url":"https://github.com/wupeng"},{"name":"BanMing","username":"BanMing","email":"ban-ming@foxmail.com","commits":2,"url":"https://github.com/BanMing"},{"name":"wupeng","username":"wupeng","email":"wupeng_a2484@virtuos.com.cn","commits":3,"url":"https://github.com/wupeng"}]},"readingTime":{"minutes":1.06,"words":317},"filePathRelative":"Animation/gameOpenGL/DualQuaternions.md","localizedDate":"July 11, 2022","excerpt":"\\n<p>之前实现的蒙皮混合插值叫作线性插值，这种线性插值在有体积旋转是会出现一定的问题。如下图 ：</p>\\n<figure><figcaption></figcaption></figure>\\n<p>为了解决这个问题，我们可以使用对偶四元数来做混合。</p>\\n<h2>Introducing dual quaternions</h2>\\n<p>对偶数跟虚数很像，对偶数由一个实数部分和对偶部分组成。假设ε是对偶操作符，一个对偶数可以表示为：，其中  并且 </p>\\n<p>它可以代表这两个四元数或者8方位的浮点数</p>\\n<p>具体的可以参看资料：<a href=\\"https://cs.gmu.edu/~jmlien/teaching/cs451/uploads/Main/dual-quaternion.pdf\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://cs.gmu.edu/~jmlien/teaching/cs451/uploads/Main/dual-quaternion.pdf</a></p>"}');export{w as comp,x as data};
