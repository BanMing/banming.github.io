import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{e as a,f as e,o as i}from"./app-zFXOOxQA.js";const p="/assets/2023-10-12_10-30-D9oXZQTp.png",t="/assets/2023-11-04_16-24-B7FwDsZs.png",l={};function c(o,n){return i(),a("div",null,n[0]||(n[0]=[e(`<h1 id="skinned-meshes" tabindex="-1"><a class="header-anchor" href="#skinned-meshes"><span>Skinned Meshes</span></a></h1><h2 id="basics-of-bone-hierarchies" tabindex="-1"><a class="header-anchor" href="#basics-of-bone-hierarchies"><span>Basics of bone hierarchies</span></a></h2><p>在DX9中使用<strong>LPD3DXFRAME</strong>作为基础的节点数据结构，内容有：</p><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">D3DXFRAME</span> <span class="token punctuation">{</span></span>
<span class="line">LPSTR Name<span class="token punctuation">;</span> <span class="token comment">//Name of bone</span></span>
<span class="line">D3DXMATRIX TransformationMatrix<span class="token punctuation">;</span> <span class="token comment">//Local bone pos, rot &amp; sca</span></span>
<span class="line">LPD3DXMESHCONTAINER pMeshContainer<span class="token punctuation">;</span> <span class="token comment">//Mesh connected to bone</span></span>
<span class="line">D3DXFRAME<span class="token operator">*</span> pFrameSibling<span class="token punctuation">;</span> <span class="token comment">//Sibling bone pointer</span></span>
<span class="line">D3DXFRAME<span class="token operator">*</span> pFrameFirstChild<span class="token punctuation">;</span> <span class="token comment">//First child bone</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+p+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>值得注意的是这里节点是有同层级的，以下是输出节点的测试代码：</p><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp"><pre><code><span class="line"><span class="token keyword">void</span> <span class="token function">PrintHierarchy</span><span class="token punctuation">(</span>D3DXFRAME <span class="token operator">*</span>bone<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">//Print Bone Name</span></span>
<span class="line">    cout <span class="token operator">&lt;&lt;</span> bone<span class="token operator">-&gt;</span>Name<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">//Traverse Siblings</span></span>
<span class="line">    <span class="token keyword">if</span><span class="token punctuation">(</span>bone<span class="token operator">-&gt;</span>pFrameSibling <span class="token operator">!=</span> <span class="token constant">NULL</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token function">PrintHierarchy</span><span class="token punctuation">(</span>bone<span class="token operator">-&gt;</span>pFrameSibling<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">    <span class="token comment">//Traverse Children</span></span>
<span class="line">    <span class="token keyword">if</span><span class="token punctuation">(</span>bone<span class="token operator">-&gt;</span>pFrameFirstChild <span class="token operator">!=</span> <span class="token constant">NULL</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token function">PrintHierarchy</span><span class="token punctuation">(</span>bone<span class="token operator">-&gt;</span>pFrameSibling<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="loading-bone-hierarchies-from-an-x-file" tabindex="-1"><a class="header-anchor" href="#loading-bone-hierarchies-from-an-x-file"><span>Loading bone hierarchies from an .x file</span></a></h2><p>使用 <strong>D3DXLoadMeshHierarchyFromX</strong> 方法加载骨骼数据，方法如下：</p><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp"><pre><code><span class="line">HRESULT <span class="token function">D3DXLoadMeshHierarchyFromX</span><span class="token punctuation">(</span></span>
<span class="line">LPCSTR Filename<span class="token punctuation">,</span></span>
<span class="line">DWORD MeshOptions<span class="token punctuation">,</span></span>
<span class="line">LPDIRECT3DDEVICE9 pDevice<span class="token punctuation">,</span></span>
<span class="line">LPD3DXALLOCATEHIERARCHY pAlloc<span class="token punctuation">,</span></span>
<span class="line">LPD3DXLOADUSERDATA pUserDataLoader<span class="token punctuation">,</span></span>
<span class="line">LPD3DXFRAME<span class="token operator">*</span> ppFrameHierarchy<span class="token punctuation">,</span></span>
<span class="line">LPD3DXANIMATIONCONTROLLER<span class="token operator">*</span> ppAnimController</span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中需要自定义实现以下<strong>ID3DXAllocateHierarchy</strong>接口，其中有四个方法需要实现：</p><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp"><pre><code><span class="line">HRESULT <span class="token function">CreateFrame</span><span class="token punctuation">(</span>LPCSTR Name<span class="token punctuation">,</span> LPD3DXFRAME<span class="token operator">*</span> ppNewFrame<span class="token punctuation">)</span> <span class="token keyword">override</span><span class="token punctuation">;</span></span>
<span class="line">HRESULT <span class="token function">CreateMeshContainer</span><span class="token punctuation">(</span>THIS_</span>
<span class="line">	LPCSTR Name<span class="token punctuation">,</span></span>
<span class="line">	CONST D3DXMESHDATA<span class="token operator">*</span> pMeshData<span class="token punctuation">,</span></span>
<span class="line">	CONST D3DXMATERIAL<span class="token operator">*</span> pMaterials<span class="token punctuation">,</span></span>
<span class="line">	CONST D3DXEFFECTINSTANCE<span class="token operator">*</span> pEffectInstances<span class="token punctuation">,</span></span>
<span class="line">	DWORD NumMaterials<span class="token punctuation">,</span></span>
<span class="line">	CONST DWORD<span class="token operator">*</span> pAdjacency<span class="token punctuation">,</span></span>
<span class="line">	LPD3DXSKININFO pSkinInfo<span class="token punctuation">,</span></span>
<span class="line">	LPD3DXMESHCONTAINER<span class="token operator">*</span> ppNewMeshContainer<span class="token punctuation">)</span> <span class="token keyword">override</span><span class="token punctuation">;</span></span>
<span class="line">HRESULT <span class="token function">DestroyFrame</span><span class="token punctuation">(</span>LPD3DXFRAME pFrameToFree<span class="token punctuation">)</span><span class="token keyword">override</span><span class="token punctuation">;</span></span>
<span class="line">HRESULT <span class="token function">DestroyMeshContainer</span><span class="token punctuation">(</span>LPD3DXMESHCONTAINER pMeshContainerBase<span class="token punctuation">)</span><span class="token keyword">override</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个功能主要让我们自定义初始化骨骼节点数据，具体的结构功能如下：</p><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp"><pre><code><span class="line">HRESULT <span class="token class-name">BoneHierarchyLoader</span><span class="token double-colon punctuation">::</span><span class="token function">CreateMeshContainer</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">//Create new Bone Mesh</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">//Get mesh data here</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">//Copy materials and load textures (like with a static mesh)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></span>
<span class="line">    <span class="token keyword">if</span><span class="token punctuation">(</span>pSkinInfo <span class="token operator">!=</span> <span class="token constant">NULL</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">//Store Skin Info and convert mesh to Index Blended Mesh</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">//Set ppNewMeshContainer to newly created boneMesh container</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="software-skinning" tabindex="-1"><a class="header-anchor" href="#software-skinning"><span>Software skinning</span></a></h2><p>主要的步骤：</p><ul><li>Overload <code>D3DXFRAM</code></li><li>Overload <code>D3DXMESHCONTAINER</code></li><li>Implement the <code>ID3DXAllocateHierarchy</code> interface</li><li>Load a bone hierarhy and associated meshes, skinning information, erc, with the <code>D3DXLoadMeshHierachyFromX()</code> function</li><li>For each frame, update the skeleton pose (i.e. the SkinnedMesh::UpdateMatrices() function)</li><li>Update the target mesh using ID3DXSkinInfo::UpdateSkinnedMesh()</li><li>Render the target mesh as a common static mesh</li></ul><p>CPU蒙皮不需要我们自己处理权重计算，应该是<code>boneMesh-&gt;pSkinInfo-&gt;UpdateSkinnedMesh(boneMesh-&gt;currentBoneMatrices, NULL, src, dest);</code>这个方法里面计算。</p><h2 id="hardware-skinning" tabindex="-1"><a class="header-anchor" href="#hardware-skinning"><span>Hardware skinning</span></a></h2><p>主要的步骤：</p><ul><li>Overload <code>D3DXFRAM</code></li><li>Overload <code>D3DXMESHCONTAINER</code></li><li>Implement the <code>ID3DXAllocateHierarchy</code> interface</li><li>Load a bone hierarhy and associated meshes, skinning information, erc, with the <code>D3DXLoadMeshHierachyFromX()</code> function</li><li>For each frame, update the skeleton pose (i.e. the SkinnedMesh::UpdateMatrices() function)</li><li>Upload the Matrix Palette (bone matrices) to the vertex shader</li><li>Render the Index Blended Mesh using the vertex shader</li></ul><p>GPU蒙皮需要自己在shader中处理权重混合，一个顶点受四根骨骼影响，如下图：</p><figure><img src="`+t+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="rendering-static-meshes-in-a-bone-hierarchy" tabindex="-1"><a class="header-anchor" href="#rendering-static-meshes-in-a-bone-hierarchy"><span>Rendering static meshes in a bone hierarchy</span></a></h2><p>静态mesh还是有骨骼，所以前几个步骤是一样：</p><ul><li>Overload <code>D3DXFRAM</code></li><li>Overload <code>D3DXMESHCONTAINER</code></li><li>Implement the <code>ID3DXAllocateHierarchy</code> interface</li><li>Load a bone hierarhy and associated meshes, skinning information, erc, with the <code>D3DXLoadMeshHierachyFromX()</code> function</li><li>Set bone world transform to the static mesh, in order to animate static with bone</li><li>Render static mesh with <code>boneMesh-&gt;OriginalMesh-&gt;DrawSubset(i);</code></li></ul>',26)]))}const u=s(l,[["render",c],["__file","SkinnedMeshes.html.vue"]]),m=JSON.parse('{"path":"/Animation/CharacterAnimation/SkinnedMeshes.html","title":"Skinned Meshes","lang":"en-US","frontmatter":{"date":"2022-04-10T22:59:14.000Z","tag":["Animation","D3D"]},"git":{"createdTime":1649602754000,"updatedTime":1707212040000,"contributors":[{"name":"wupeng","username":"wupeng","email":"ban-ming@foxmail.com","commits":1,"url":"https://github.com/wupeng"},{"name":"wupeng","username":"wupeng","email":"wupeng_a2484@virtuos.com.cn","commits":3,"url":"https://github.com/wupeng"},{"name":"BanMing","username":"BanMing","email":"ban-ming@foxmail.com","commits":5,"url":"https://github.com/BanMing"}]},"readingTime":{"minutes":1.89,"words":568},"filePathRelative":"Animation/CharacterAnimation/SkinnedMeshes.md","localizedDate":"April 10, 2022","excerpt":"\\n<h2>Basics of bone hierarchies</h2>\\n<p>在DX9中使用<strong>LPD3DXFRAME</strong>作为基础的节点数据结构，内容有：</p>\\n<div class=\\"language-cpp line-numbers-mode\\" data-highlighter=\\"prismjs\\" data-ext=\\"cpp\\"><pre><code><span class=\\"line\\"><span class=\\"token keyword\\">struct</span> <span class=\\"token class-name\\">D3DXFRAME</span> <span class=\\"token punctuation\\">{</span></span>\\n<span class=\\"line\\">LPSTR Name<span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">//Name of bone</span></span>\\n<span class=\\"line\\">D3DXMATRIX TransformationMatrix<span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">//Local bone pos, rot &amp; sca</span></span>\\n<span class=\\"line\\">LPD3DXMESHCONTAINER pMeshContainer<span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">//Mesh connected to bone</span></span>\\n<span class=\\"line\\">D3DXFRAME<span class=\\"token operator\\">*</span> pFrameSibling<span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">//Sibling bone pointer</span></span>\\n<span class=\\"line\\">D3DXFRAME<span class=\\"token operator\\">*</span> pFrameFirstChild<span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">//First child bone</span></span>\\n<span class=\\"line\\"><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span></span>\\n<span class=\\"line\\"></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{u as comp,m as data};
