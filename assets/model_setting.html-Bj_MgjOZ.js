import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,o as t,a as l}from"./app-DlGZ34jr.js";const a={},n=l('<h1 id="模型设置" tabindex="-1"><a class="header-anchor" href="#模型设置"><span>模型设置</span></a></h1><p>模型导入Model设置：Read/Write Enabled - 关闭</p><p>这个开关是控制我们在运行游戏是去改变模型的mesh数据同步到GPU内存中，并是否保存在GUP内存中，或者去读取mesh中的数据。在大多数情况下设置为false，除了以下情况设置为true：</p><ul><li>使用了StaticBatchingUtility.Combine() 合并mesh的时候</li><li>使用Mesh去烘焙成NavMesh</li><li>使用了Mesh Collider并且transform拥有负数的大小（如：scale（-1,1,1））</li><li>使用了Mesh Collider并且对transform做了裁剪和扭曲</li><li>使用了Mesh Collider并且 Mesh Collider 的 Cooking 设置不是默认值</li></ul><p>原理：</p><p>如果勾选了这个选项，那么这个FBX是会在内存中存在一个拷贝，硬盘上存在一个么。要是不勾选的话，是不是只有硬盘中有一份，内存中没有了。这个解释有待考证</p><p>需要打开：Optimize Game Object</p><p>少一些节点，会在加载速度有所提升。在动画机update上也会有所减少消耗</p><p>参考： <a href="https://zhuanlan.zhihu.com/p/27378492" target="_blank" rel="noopener noreferrer">https://zhuanlan.zhihu.com/p/27378492</a></p>',9),o=[n];function s(r,m){return t(),i("div",null,o)}const p=e(a,[["render",s],["__file","model_setting.html.vue"]]),d=JSON.parse('{"path":"/GameEngine/Unity/manual/normal/model_setting.html","title":"模型设置","lang":"en-US","frontmatter":{"date":"2021-03-23T08:46:10.000Z","tag":["Unity","Asset File"]},"headers":[],"git":{"createdTime":1616460370000,"updatedTime":1707213711000,"contributors":[{"name":"BanMing","email":"ban-ming@foxmail.com","commits":2},{"name":"wupeng","email":"wupeng_a2484@virtuos.com.cn","commits":2}]},"readingTime":{"minutes":0.93,"words":280},"filePathRelative":"GameEngine/Unity/manual/normal/model_setting.md","localizedDate":"March 23, 2021","excerpt":"\\n<p>模型导入Model设置：Read/Write Enabled - 关闭</p>\\n<p>这个开关是控制我们在运行游戏是去改变模型的mesh数据同步到GPU内存中，并是否保存在GUP内存中，或者去读取mesh中的数据。在大多数情况下设置为false，除了以下情况设置为true：</p>\\n<ul>\\n<li>使用了StaticBatchingUtility.Combine() 合并mesh的时候</li>\\n<li>使用Mesh去烘焙成NavMesh</li>\\n<li>使用了Mesh Collider并且transform拥有负数的大小（如：scale（-1,1,1））</li>\\n<li>使用了Mesh Collider并且对transform做了裁剪和扭曲</li>\\n<li>使用了Mesh Collider并且 Mesh Collider 的 Cooking  设置不是默认值</li>\\n</ul>"}');export{p as comp,d as data};
