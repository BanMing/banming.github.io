import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,o as e,a as s}from"./app-BbzRORmU.js";const t={},o=s(`<h1 id="automated-testing-framework" tabindex="-1"><a class="header-anchor" href="#automated-testing-framework"><span>Automated Testing Framework</span></a></h1><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token function">IMPLEMENT_SIMPLE_AUTOMATION_TEST</span><span class="token punctuation">(</span>FPlaceholderTest<span class="token punctuation">,</span> <span class="token string">&quot;TestGroup.TestSubgroupPlaceholder Test&quot;</span><span class="token punctuation">,</span> EAutomationTestFlags<span class="token double-colon punctuation">::</span>EditorContext <span class="token operator">|</span> EAutomationTestFlags<span class="token double-colon punctuation">::</span>EngineFilter<span class="token punctuation">)</span>

<span class="token keyword">bool</span> <span class="token class-name">FPlaceholderTest</span><span class="token double-colon punctuation">::</span><span class="token function">RunTest</span><span class="token punctuation">(</span><span class="token keyword">const</span> FString<span class="token operator">&amp;</span> Parameters<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token comment">// 通过返回&quot;真（true）&quot;使测试通过，或者返回&quot;假（false）&quot;使测试失败。</span>
	<span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>控制面板在<code>Tools-&gt;Session Frontend-&gt;Automation</code></p><h2 id="reference" tabindex="-1"><a class="header-anchor" href="#reference"><span>Reference</span></a></h2><ul><li>https://dev.epicgames.com/documentation/en-us/unreal-engine/automation-test-framework-in-unreal-engine</li><li>https://dev.epicgames.com/documentation/en-us/unreal-engine/automation-spec-in-unreal-engine</li><li>https://dev.epicgames.com/documentation/zh-cn/unreal-engine/write-cplusplus-tests-in-unreal-engine?application_version=5.4</li></ul>`,5),p=[o];function c(l,i){return e(),a("div",null,p)}const d=n(t,[["render",c],["__file","AutomatedTestingFramework.html.vue"]]),m=JSON.parse('{"path":"/GameEngine/Unreal/manual/AutomatedTestingFramework.html","title":"Automated Testing Framework","lang":"en-US","frontmatter":{"date":"2024-08-07T13:28:35.000Z","tag":["Unreal Engine"]},"headers":[{"level":2,"title":"Reference","slug":"reference","link":"#reference","children":[]}],"git":{"createdTime":1723023156000,"updatedTime":1723023156000,"contributors":[{"name":"wupeng","email":"wupeng_a2484@virtuos.com.cn","commits":1}]},"readingTime":{"minutes":0.3,"words":91},"filePathRelative":"GameEngine/Unreal/manual/AutomatedTestingFramework.md","localizedDate":"August 7, 2024","excerpt":"\\n<div class=\\"language-cpp\\" data-ext=\\"cpp\\" data-title=\\"cpp\\"><pre class=\\"language-cpp\\"><code><span class=\\"token function\\">IMPLEMENT_SIMPLE_AUTOMATION_TEST</span><span class=\\"token punctuation\\">(</span>FPlaceholderTest<span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"TestGroup.TestSubgroupPlaceholder Test\\"</span><span class=\\"token punctuation\\">,</span> EAutomationTestFlags<span class=\\"token double-colon punctuation\\">::</span>EditorContext <span class=\\"token operator\\">|</span> EAutomationTestFlags<span class=\\"token double-colon punctuation\\">::</span>EngineFilter<span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token keyword\\">bool</span> <span class=\\"token class-name\\">FPlaceholderTest</span><span class=\\"token double-colon punctuation\\">::</span><span class=\\"token function\\">RunTest</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">const</span> FString<span class=\\"token operator\\">&amp;</span> Parameters<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">{</span>\\n\\t<span class=\\"token comment\\">// 通过返回\\"真（true）\\"使测试通过，或者返回\\"假（false）\\"使测试失败。</span>\\n\\t<span class=\\"token keyword\\">return</span> <span class=\\"token boolean\\">true</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span> \\n</code></pre></div>"}');export{d as comp,m as data};
