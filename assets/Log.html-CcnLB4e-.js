import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as p,o as t}from"./app-BmzmI2du.js";const o={};function c(e,n){return t(),a("div",null,n[0]||(n[0]=[p(`<h1 id="log" tabindex="-1"><a class="header-anchor" href="#log"><span>Log</span></a></h1><p>使用<code>UE_LOG</code>时，前面的频道可以使用</p><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp" data-title="cpp"><pre><code><span class="line">CORE_API <span class="token function">DECLARE_LOG_CATEGORY_EXTERN</span><span class="token punctuation">(</span>YourChannel<span class="token punctuation">,</span> Log<span class="token punctuation">,</span> All<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>声明自定义频道与类型</p><p>官方自带的声明，可以在<code>\\Engine\\Source\\Runtime\\Core\\Public\\CoreGlobals.h</code>中查看</p><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp" data-title="cpp"><pre><code><span class="line">CORE_API <span class="token function">DECLARE_LOG_CATEGORY_EXTERN</span><span class="token punctuation">(</span>LogHAL<span class="token punctuation">,</span> Log<span class="token punctuation">,</span> All<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">CORE_API <span class="token function">DECLARE_LOG_CATEGORY_EXTERN</span><span class="token punctuation">(</span>LogSerialization<span class="token punctuation">,</span> Log<span class="token punctuation">,</span> All<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">CORE_API <span class="token function">DECLARE_LOG_CATEGORY_EXTERN</span><span class="token punctuation">(</span>LogUnrealMath<span class="token punctuation">,</span> Log<span class="token punctuation">,</span> All<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">CORE_API <span class="token function">DECLARE_LOG_CATEGORY_EXTERN</span><span class="token punctuation">(</span>LogUnrealMatrix<span class="token punctuation">,</span> Log<span class="token punctuation">,</span> All<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">CORE_API <span class="token function">DECLARE_LOG_CATEGORY_EXTERN</span><span class="token punctuation">(</span>LogContentComparisonCommandlet<span class="token punctuation">,</span> Log<span class="token punctuation">,</span> All<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">CORE_API <span class="token function">DECLARE_LOG_CATEGORY_EXTERN</span><span class="token punctuation">(</span>LogNetPackageMap<span class="token punctuation">,</span> Warning<span class="token punctuation">,</span> All<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">CORE_API <span class="token function">DECLARE_LOG_CATEGORY_EXTERN</span><span class="token punctuation">(</span>LogNetSerialization<span class="token punctuation">,</span> Warning<span class="token punctuation">,</span> All<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">CORE_API <span class="token function">DECLARE_LOG_CATEGORY_EXTERN</span><span class="token punctuation">(</span>LogMemory<span class="token punctuation">,</span> Log<span class="token punctuation">,</span> All<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">CORE_API <span class="token function">DECLARE_LOG_CATEGORY_EXTERN</span><span class="token punctuation">(</span>LogProfilingDebugging<span class="token punctuation">,</span> Log<span class="token punctuation">,</span> All<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">CORE_API <span class="token function">DECLARE_LOG_CATEGORY_EXTERN</span><span class="token punctuation">(</span>LogCore<span class="token punctuation">,</span> Log<span class="token punctuation">,</span> All<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">CORE_API <span class="token function">DECLARE_LOG_CATEGORY_EXTERN</span><span class="token punctuation">(</span>LogOutputDevice<span class="token punctuation">,</span> Log<span class="token punctuation">,</span> All<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">CORE_API <span class="token function">DECLARE_LOG_CATEGORY_EXTERN</span><span class="token punctuation">(</span>LogSHA<span class="token punctuation">,</span> Warning<span class="token punctuation">,</span> All<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">CORE_API <span class="token function">DECLARE_LOG_CATEGORY_EXTERN</span><span class="token punctuation">(</span>LogStats<span class="token punctuation">,</span> Log<span class="token punctuation">,</span> All<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">CORE_API <span class="token function">DECLARE_LOG_CATEGORY_EXTERN</span><span class="token punctuation">(</span>LogStreaming<span class="token punctuation">,</span> Display<span class="token punctuation">,</span> All<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">CORE_API <span class="token function">DECLARE_LOG_CATEGORY_EXTERN</span><span class="token punctuation">(</span>LogInit<span class="token punctuation">,</span> Log<span class="token punctuation">,</span> All<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">CORE_API <span class="token function">DECLARE_LOG_CATEGORY_EXTERN</span><span class="token punctuation">(</span>LogExit<span class="token punctuation">,</span> Log<span class="token punctuation">,</span> All<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">CORE_API <span class="token function">DECLARE_LOG_CATEGORY_EXTERN</span><span class="token punctuation">(</span>LogExec<span class="token punctuation">,</span> Warning<span class="token punctuation">,</span> All<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">CORE_API <span class="token function">DECLARE_LOG_CATEGORY_EXTERN</span><span class="token punctuation">(</span>LogScript<span class="token punctuation">,</span> Warning<span class="token punctuation">,</span> All<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">CORE_API <span class="token function">DECLARE_LOG_CATEGORY_EXTERN</span><span class="token punctuation">(</span>LogLocalization<span class="token punctuation">,</span> Error<span class="token punctuation">,</span> All<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">CORE_API <span class="token function">DECLARE_LOG_CATEGORY_EXTERN</span><span class="token punctuation">(</span>LogLongPackageNames<span class="token punctuation">,</span> Log<span class="token punctuation">,</span> All<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">CORE_API <span class="token function">DECLARE_LOG_CATEGORY_EXTERN</span><span class="token punctuation">(</span>LogProcess<span class="token punctuation">,</span> Log<span class="token punctuation">,</span> All<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">CORE_API <span class="token function">DECLARE_LOG_CATEGORY_EXTERN</span><span class="token punctuation">(</span>LogLoad<span class="token punctuation">,</span> Log<span class="token punctuation">,</span> All<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用:</p><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp" data-title="cpp"><pre><code><span class="line"><span class="token keyword">int</span> intVar <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">float</span> floatVar <span class="token operator">=</span> <span class="token number">3.7f</span><span class="token punctuation">;</span></span>
<span class="line">FString fstringVar <span class="token operator">=</span> <span class="token string">&quot;an fstring variable&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">UE_LOG</span><span class="token punctuation">(</span>LogTemp<span class="token punctuation">,</span> Warning<span class="token punctuation">,</span> <span class="token function">TEXT</span><span class="token punctuation">(</span><span class="token string">&quot;Text, %d %f %s&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> intVar<span class="token punctuation">,</span> floatVar<span class="token punctuation">,</span> <span class="token operator">*</span>fstringVar <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8)]))}const u=s(o,[["render",c],["__file","Log.html.vue"]]),k=JSON.parse('{"path":"/GameEngine/Unreal/manual/Log.html","title":"Log","lang":"en-US","frontmatter":{"date":"2022-01-13T11:40:21.000Z","tag":["Unreal Engine"]},"headers":[],"git":{"createdTime":1642045221000,"updatedTime":1707213711000,"contributors":[{"name":"BanMing","email":"ban-ming@foxmail.com","commits":3},{"name":"wupeng","email":"wupeng_a2484@virtuos.com.cn","commits":2}]},"readingTime":{"minutes":0.65,"words":195},"filePathRelative":"GameEngine/Unreal/manual/Log.md","localizedDate":"January 13, 2022","excerpt":"\\n<p>使用<code>UE_LOG</code>时，前面的频道可以使用</p>\\n<div class=\\"language-cpp line-numbers-mode\\" data-highlighter=\\"prismjs\\" data-ext=\\"cpp\\" data-title=\\"cpp\\"><pre><code><span class=\\"line\\">CORE_API <span class=\\"token function\\">DECLARE_LOG_CATEGORY_EXTERN</span><span class=\\"token punctuation\\">(</span>YourChannel<span class=\\"token punctuation\\">,</span> Log<span class=\\"token punctuation\\">,</span> All<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span></span>\\n<span class=\\"line\\"></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div></div></div>"}');export{u as comp,k as data};
