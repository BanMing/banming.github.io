import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{e as n,f as e,o as r}from"./app-Ccr1Gj2O.js";const i={};function l(a,t){return r(),n("div",null,t[0]||(t[0]=[e(`<h1 id="pose-warping" tabindex="-1"><a class="header-anchor" href="#pose-warping"><span>Pose Warping</span></a></h1><p>这篇文章写<code>Orientation Warping</code>、<code>Slope Warping</code>、<code>Stride Warping</code>的很清晰：<a href="https://zhuanlan.zhihu.com/p/555984712" target="_blank" rel="noopener noreferrer">上万字详解UE5动画新特性Pose Warping原理与应用</a></p><h2 id="orientation-warping" tabindex="-1"><a class="header-anchor" href="#orientation-warping"><span>Orientation Warping</span></a></h2><p>Orientation Warping 是 UE5 Animation Warping 插件的核心动画节点之一，主要用于分离角色上下半身的旋转动作，解决传统动画混合导致的滑步、躯干扭曲等问题。</p><hr><h3 id="核心功能与实现原理" tabindex="-1"><a class="header-anchor" href="#核心功能与实现原理"><span><strong>核心功能与实现原理</strong></span></a></h3><ol><li><p><strong>旋转分离机制</strong></p><ul><li><strong>上半身固定</strong>：通过旋转脊柱骨骼（Spine Bones）抵消下半身旋转，保持角色头部和躯干朝向固定方向（如摄像机视角）。</li><li><strong>下半身动态转向</strong>：调整腿部 IK 骨骼旋转，使脚步朝向实际移动方向，实现自然转向效果。</li></ul></li><li><p><strong>骨骼层级联动</strong></p><ul><li><strong>根骨骼（Root Bone）</strong>：承担主要旋转偏移量，通过参数 <code>Distributed Bone Orientation Alpha</code> 控制旋转权重分配。</li><li><strong>骨盆（Pelvis）</strong>：作为上下半身旋转的过渡节点，动态调整倾斜角度以避免重心失衡。</li></ul></li><li><p><strong>角度解算逻辑</strong></p><ul><li>输入 <code>Locomotion Angle</code>（移动方向与角色面朝方向的夹角），自动分解为： <ul><li><strong>Root 旋转量</strong>：<code>ActualOrientationAngle * DistributedBoneOrientationAlpha</code></li><li><strong>脊柱补偿量</strong>：剩余角度由脊柱骨骼链逐级抵消</li></ul></li></ul></li></ol><hr><h3 id="关键参数与配置" tabindex="-1"><a class="header-anchor" href="#关键参数与配置"><span><strong>关键参数与配置</strong></span></a></h3><table><thead><tr><th>参数组</th><th>核心参数</th><th>作用说明</th></tr></thead><tbody><tr><td><strong>基础设置</strong></td><td><code>Spline Bones</code></td><td>指定脊柱骨骼链（如 <code>spine_01</code>→<code>spine_02</code>→<code>spine_03</code>）</td></tr><tr><td><strong>旋转分配</strong></td><td><code>Distributed Bone Orientation Alpha</code></td><td>控制根骨骼承担的旋转比例（0.3-0.7为常用值）</td></tr><tr><td><strong>动态响应</strong></td><td><code>Interp Speed</code></td><td>旋转过渡速度（默认 8.0），值过高可能导致动作僵硬</td></tr><tr><td><strong>调试模式</strong></td><td><code>Draw Debug Arrows</code></td><td>可视化移动方向箭头（蓝色为实际移动方向，黄色为躯干朝向）</td></tr></tbody></table><hr><h3 id="典型应用场景" tabindex="-1"><a class="header-anchor" href="#典型应用场景"><span><strong>典型应用场景</strong></span></a></h3><ol><li><p><strong>侧向移动（Strafing）</strong></p><ul><li>传统方案需单独制作侧移动画，而 Orientation Warping 通过程序化旋转调整，使同一动画适配不同移动方向。</li><li><strong>实现流程</strong>： <ol><li>计算移动方向与面朝方向的夹角（如 45°）</li><li>Root 骨骼旋转 45° * 0.5 = 22.5°</li><li>脊柱骨骼链抵消剩余 22.5°，保持上半身朝向不变</li></ol></li></ul></li><li><p><strong>战斗中的快速转身</strong></p><ul><li>在近战攻击或闪避时，通过提高 <code>Interp Speed</code> 实现躯干快速转向，同时腿部通过 IK 调整保持移动连贯性。</li></ul></li><li><p><strong>与 Stride Warping 协同</strong></p><ul><li>组合使用两种节点可实现： <ul><li><strong>速度自适应</strong>：Stride Warping 调整步幅</li><li><strong>方向自适应</strong>：Orientation Warping 分离旋转</li></ul></li><li>典型参数搭配：<div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c"><pre><code><span class="line">Stride Scale <span class="token operator">=</span> <span class="token operator">|</span>Velocity<span class="token operator">|</span> <span class="token operator">/</span> <span class="token number">450.0</span>  <span class="token comment">// 基准速度为450cm/s</span></span>
<span class="line">Locomotion Angle <span class="token operator">=</span> <span class="token function">arctan2</span><span class="token punctuation">(</span>Velocity<span class="token punctuation">.</span>Y<span class="token punctuation">,</span> Velocity<span class="token punctuation">.</span>X<span class="token punctuation">)</span> <span class="token operator">-</span> ControlRotation<span class="token punctuation">.</span>Yaw</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li></ol><hr><h3 id="与传统方案对比" tabindex="-1"><a class="header-anchor" href="#与传统方案对比"><span><strong>与传统方案对比</strong></span></a></h3><table><thead><tr><th>维度</th><th>传统动画混合方案</th><th>Orientation Warping 方案</th></tr></thead><tbody><tr><td><strong>资源开销</strong></td><td>需多套方向动画 + Blend Space</td><td>单动画 + 程序化修正</td></tr><tr><td><strong>动作连贯性</strong></td><td>转向角度突变时易滑步</td><td>通过骨骼层级补偿实现平滑过渡</td></tr><tr><td><strong>开发效率</strong></td><td>美术需逐帧调整多个动画</td><td>参数驱动，快速适配新角色</td></tr></tbody></table><hr><h3 id="实践建议" tabindex="-1"><a class="header-anchor" href="#实践建议"><span><strong>实践建议</strong></span></a></h3><ol><li><p><strong>参数调优策略</strong></p><ul><li><strong>写实角色</strong>：<code>Distributed Bone Orientation Alpha</code> 设为 0.4-0.6，模拟人体自然旋转分配</li><li><strong>卡通角色</strong>：增大至 0.7-0.8，增强下半身动态表现力</li></ul></li><li><p><strong>性能优化</strong></p><ul><li>对 NPC 角色可降低 <code>Interp Speed</code> 至 4.0-5.0，减少每帧计算量</li><li>合并 Orientation Warping 与 Leg IK 节点的骨骼变换矩阵计算</li></ul></li><li><p><strong>常见问题排查</strong></p><ul><li><strong>上半身抖动</strong>：检查脊柱骨骼链是否完整绑定（至少包含3节脊椎）</li><li><strong>脚部偏移</strong>：确认腿部 IK 骨骼权重未被其他节点覆盖</li></ul></li></ol><p>原理示意图如下：</p><h2 id="slope-warping" tabindex="-1"><a class="header-anchor" href="#slope-warping"><span>Slope Warping</span></a></h2><p>Slope Warping 是 UE5 Animation Warping 插件中的核心动画节点，专门用于解决角色在斜坡地形移动时的动画适配问题。其核心机制和应用场景如下：</p><hr><h3 id="核心功能解析" tabindex="-1"><a class="header-anchor" href="#核心功能解析"><span><strong>核心功能解析</strong></span></a></h3><ol><li><p><strong>地形坡度适配</strong></p><ul><li>通过射线检测（Raycast）实时获取角色脚部接触点的地面法线方向（Surface Normal），动态调整腿部骨骼位置和旋转角度，使脚掌始终贴合斜坡表面。</li><li><strong>关键修正维度</strong>： <ul><li><strong>垂直高度</strong>：修正脚部骨骼的 Z 轴位置，消除悬空或穿模</li><li><strong>脚掌旋转</strong>：根据地面法线调整脚踝旋转，模拟自然贴合效果</li></ul></li></ul></li><li><p><strong>骨盆稳定性控制</strong></p><ul><li>基于斜坡角度动态调整骨盆（Pelvis）高度和倾斜度，防止角色重心偏移导致的动画失真。</li><li><strong>参数联动</strong>： <ul><li><code>Pelvis Offset Limit</code>：限制骨盆垂直偏移范围（通常设为 ±15cm）</li><li><code>Slope Compensation</code>：坡度补偿系数（0-1），控制骨盆倾斜幅度</li></ul></li></ul></li><li><p><strong>多骨骼协同调整</strong></p><ul><li>同时修正大腿（Thigh）、小腿（Calf）、脚踝（Ankle）的骨骼位置，避免单一骨骼调整导致的肢体扭曲。</li><li>通过 <code>Leg IK Chain</code> 参数绑定腿部骨骼链，支持自定义解算优先级（如优先修正脚踝，其次小腿）。</li></ul></li></ol><hr><h3 id="参数配置与优化" tabindex="-1"><a class="header-anchor" href="#参数配置与优化"><span><strong>参数配置与优化</strong></span></a></h3><table><thead><tr><th>参数组</th><th>核心参数</th><th>作用说明</th></tr></thead><tbody><tr><td><strong>地形检测</strong></td><td><code>Ray Length</code></td><td>射线检测范围（建议设为角色身高 1.2 倍）</td></tr><tr><td><strong>骨骼修正</strong></td><td><code>Foot Rotation Speed</code></td><td>脚部旋转插值速度（默认 8.0，过高可能导致抖动）</td></tr><tr><td><strong>物理模拟</strong></td><td><code>Gravity Compensation</code></td><td>重力补偿系数（0.5-1.5），用于调整斜坡移动时的重心偏移</td></tr><tr><td><strong>调试模式</strong></td><td><code>Draw Debug Lines</code></td><td>可视化射线检测路径和脚部接触点（红：未贴合，绿：已贴合）</td></tr></tbody></table><hr><h3 id="典型应用场景-1" tabindex="-1"><a class="header-anchor" href="#典型应用场景-1"><span><strong>典型应用场景</strong></span></a></h3><ol><li><p><strong>斜坡行走优化</strong></p><ul><li>传统动画在坡度 &gt;15° 时易出现脚部悬空或滑步，Slope Warping 通过实时骨骼修正实现自然过渡。</li><li><strong>示例流程</strong>： <ol><li>射线检测获取地面法线方向</li><li>计算目标脚部位置 = 原始位置 + 法线方向投影补偿</li><li>通过 Spring Interpolation 平滑过渡到目标位置</li><li>同步调整骨盆高度和旋转角度</li></ol></li></ul></li><li><p><strong>与 Stride Warping 协同</strong></p><ul><li>组合使用 Slope Warping（地形适配）和 Stride Warping（步幅缩放），实现复杂地形下的多速域移动： <ul><li>上坡时缩小步幅（Stride Scale 0.8-0.9）</li><li>下坡时扩大步幅（Stride Scale 1.1-1.2）</li></ul></li></ul></li><li><p><strong>动态障碍物跨越</strong></p><ul><li>通过扩展 <code>Trace Settings</code> 检测前方障碍物高度，动态调整膝盖弯曲角度，实现自动抬腿动作。</li></ul></li></ol><hr><h3 id="与传统方案对比-1" tabindex="-1"><a class="header-anchor" href="#与传统方案对比-1"><span><strong>与传统方案对比</strong></span></a></h3><table><thead><tr><th>维度</th><th>传统骨骼重定向方案</th><th>Slope Warping 方案</th></tr></thead><tbody><tr><td><strong>地形响应速度</strong></td><td>延迟明显（需逐帧计算）</td><td>实时响应（预计算 + 插值）</td></tr><tr><td><strong>资源消耗</strong></td><td>高（需多套动画混合）</td><td>低（单动画 + 程序化修正）</td></tr><tr><td><strong>跨角色适配</strong></td><td>需重新绑定骨骼权重</td><td>参数化配置，一键迁移</td></tr></tbody></table><hr><h3 id="实践建议-1" tabindex="-1"><a class="header-anchor" href="#实践建议-1"><span><strong>实践建议</strong></span></a></h3><ol><li><p><strong>参数调优优先级</strong></p><ul><li><strong>基础场景</strong>：先调整 <code>Ray Length</code> 和 <code>Foot Rotation Speed</code>，确保基础贴合</li><li><strong>复杂地形</strong>：再优化 <code>Pelvis Offset Limit</code> 和 <code>Slope Compensation</code></li></ul></li><li><p><strong>性能优化策略</strong></p><ul><li>对 NPC 角色启用 <code>LOD 优化</code>，根据摄像机距离降低射线检测频率</li><li>合并 Slope Warping 与 Leg IK 节点的更新逻辑，减少计算冗余</li></ul></li><li><p><strong>异常问题排查</strong></p><ul><li><strong>脚部抖动</strong>：降低 <code>Foot Rotation Speed</code> 或增加 <code>Damping Factor</code></li><li><strong>骨盆错位</strong>：检查 <code>Pelvis Bone</code> 绑定是否正确，避免与其他节点冲突</li></ul></li></ol><h2 id="stride-warping" tabindex="-1"><a class="header-anchor" href="#stride-warping"><span>Stride Warping</span></a></h2><p>Stride Warping 是 UE5 Animation Warping 插件的核心动画节点之一，主要用于动态调整角色步幅以适配移动速度，解决传统动画播放速率（Playrate）调整导致的滑步或动作失真问题。以下是基于全网技术文档和实际开发案例的解析：</p><hr><h3 id="核心功能与原理" tabindex="-1"><a class="header-anchor" href="#核心功能与原理"><span><strong>核心功能与原理</strong></span></a></h3><ol><li><p><strong>动态步幅调整</strong></p><ul><li><strong>速度适配</strong>：根据角色实际移动速度缩放腿部动画步幅（Stride Length），无需修改动画播放速率即可匹配不同速度区间（如从步行到奔跑的平滑过渡）。</li><li><strong>轴向控制</strong>：默认沿角色移动方向（Stride Direction）缩放步幅，避免腿部骨骼在 X/Z 轴产生非预期形变。</li></ul></li><li><p><strong>骨盆稳定性补偿</strong></p><ul><li>通过迭代计算骨盆（Pelvis）位置偏移，修正因步幅缩放导致的躯干高度变化，防止角色重心失衡。</li></ul></li><li><p><strong>双模式支持</strong></p><ul><li><strong>Manual 模式</strong>：手动输入步幅缩放比例（Stride Scale）和方向，适合调试或固定速度场景。</li><li><strong>Graph 模式</strong>：自动关联移动速度参数（如角色 Velocity 的模长），动态计算缩放比例，适合复杂移动逻辑。</li></ul></li></ol><hr><h3 id="关键参数配置" tabindex="-1"><a class="header-anchor" href="#关键参数配置"><span><strong>关键参数配置</strong></span></a></h3><table><thead><tr><th>参数组</th><th>核心参数</th><th>作用说明</th></tr></thead><tbody><tr><td><strong>基础设置</strong></td><td><code>Pelvis Bone</code></td><td>指定骨盆骨骼，用于计算躯干补偿（如 <code>pelvis</code> 或 <code>Hips</code>）</td></tr><tr><td><strong>步幅定义</strong></td><td><code>Foot Definitions</code></td><td>绑定腿部骨骼链（需包含大腿、膝盖、脚踝骨骼，如 <code>thigh_l</code>→<code>calf_l</code>→<code>foot_l</code>）</td></tr><tr><td><strong>迭代控制</strong></td><td><code>MaxIter</code> / <code>ErrorTolerance</code></td><td>骨盆位置解算迭代次数（默认 5 次）及误差容差（默认 0.1cm）</td></tr><tr><td><strong>动态响应</strong></td><td><code>Spring Stiffness</code></td><td>控制步幅缩放的响应速度，值越高调整越及时（过高可能导致抖动）</td></tr></tbody></table><hr><h3 id="典型应用场景-2" tabindex="-1"><a class="header-anchor" href="#典型应用场景-2"><span><strong>典型应用场景</strong></span></a></h3><ol><li><p><strong>多速域移动适配</strong></p><ul><li>传统方案需制作多个速度动画（Walk/Jog/Sprint）并通过 Blend Space 混合，而 Stride Warping 仅需一个基准动画（如 Jog）即可覆盖宽速域表现。</li><li><strong>示例流程</strong>： <ol><li>获取角色当前速度 |Velocity|，输入至 Graph 模式的 Speed 参数</li><li>基准动画速度设为 450cm/s（如 Jog 动画原生速度）</li><li>实际速度 900cm/s时，Stride Scale 自动计算为 2.0，步幅放大一倍</li></ol></li></ul></li><li><p><strong>滑步消除</strong></p><ul><li>在斜坡或崎岖地形中，通过 <code>Pelvis Adjustment</code> 参数动态修正骨盆高度，避免因步幅缩放导致的脚部悬空或穿模。</li></ul></li><li><p><strong>与 Orientation Warping 协同</strong></p><ul><li>组合使用 Stride Warping（步幅控制）和 Orientation Warping（躯干旋转分离），实现复杂移动中的自然转向（如边跑边转身）。</li></ul></li></ol><hr><h3 id="与传统方案对比-2" tabindex="-1"><a class="header-anchor" href="#与传统方案对比-2"><span><strong>与传统方案对比</strong></span></a></h3><table><thead><tr><th>维度</th><th>传统 Playrate 调整</th><th>Stride Warping 方案</th></tr></thead><tbody><tr><td><strong>动画保真度</strong></td><td>速度偏差 &gt;10% 时动作明显失真</td><td>保持动画原生节奏，仅缩放步幅</td></tr><tr><td><strong>资源开销</strong></td><td>需多套动画 + Blend Space</td><td>单动画 + 程序化修正</td></tr><tr><td><strong>开发效率</strong></td><td>美术需逐帧调整多个动画</td><td>参数驱动，快速适配新角色</td></tr></tbody></table><hr><h3 id="实践建议-2" tabindex="-1"><a class="header-anchor" href="#实践建议-2"><span><strong>实践建议</strong></span></a></h3><ol><li><p><strong>模式选择</strong></p><ul><li><strong>原型阶段</strong>：优先使用 Graph 模式，直接绑定角色速度变量。</li><li><strong>精细调试</strong>：切换 Manual 模式，手动调整 <code>Stride Scale</code> 观察步幅变化（需开启 <code>Show Debug Visualization</code>）。</li></ul></li><li><p><strong>性能优化</strong></p><ul><li>对 NPC 或群组角色，降低骨盆迭代次数至 3 次以内，并增大 <code>ErrorTolerance</code> 至 0.5cm。</li><li>在动画蓝图中合并 Stride Warping 与 Leg IK 节点的更新逻辑，减少计算冗余。</li></ul></li><li><p><strong>常见问题排查</strong></p><ul><li><strong>步幅方向错乱</strong>：检查 <code>Stride Direction</code> 是否与角色前进轴向一致（通常为角色面朝方向）。</li><li><strong>骨盆抖动</strong>：降低 <code>Spring Stiffness</code> 或增加 <code>Damping Constant</code> 以平滑插值。</li></ul></li></ol><h2 id="foot-placement" tabindex="-1"><a class="header-anchor" href="#foot-placement"><span>Foot Placement</span></a></h2><p><a href="https://www.zhihu.com/column/c_1354205128203993089" target="_blank" rel="noopener noreferrer">UE5动画技术详解-FootPlacement</a></p><p>Foot Placement 是 UE5.1 及后续版本中引入的动画控制节点，主要用于优化角色腿部动画与地形的交互表现。，其核心机制和应用如下：</p><hr><h3 id="核心功能" tabindex="-1"><a class="header-anchor" href="#核心功能"><span><strong>核心功能</strong></span></a></h3><ol><li><p><strong>自动脚步锁定（Foot Lock）</strong></p><ul><li>通过射线检测实时计算脚部与地面的接触点，修正骨骼位置避免悬空或穿模。</li><li>支持三种锁定模式： <ul><li><strong>Manual</strong>：依赖动画曲线手动控制锁定时机（需配合 <code>MotionExtractorModifier</code> 生成曲线）。</li><li><strong>Graph</strong>：基于 Root Motion 自动计算脚部移动速度，动态触发锁定。</li><li><strong>Hybrid</strong>：混合前两种模式，适应复杂移动场景。</li></ul></li></ul></li><li><p><strong>盆骨稳定性控制</strong></p><ul><li>动态调整盆骨（Pelvis）高度和旋转，防止因地形起伏导致的角色重心失衡。</li><li>参数设置： <ul><li><strong>MaxOffset</strong>：限制盆骨垂直位移范围（通常设为 ±10cm）。</li><li><strong>Height Mode</strong>：提供 <code>Fixed</code>（固定高度）和 <code>Adaptive</code>（自适应地形）两种模式。</li></ul></li></ul></li><li><p><strong>预计算 IK 解算</strong></p><ul><li>在动画播放前预生成脚部位置数据，减少实时计算开销。</li><li>结合 <code>Leg IK</code> 节点实现多骨骼联动，支持楼梯、斜坡等复杂地形的自然过渡。</li></ul></li><li><p><strong>地形适配增强</strong></p><ul><li>通过 <code>Trace Settings</code> 自定义射线检测参数（如检测距离、角度容差），适配不同地表材质。</li><li>支持动态调整脚部旋转角度，使脚掌贴合斜坡或台阶边缘。</li></ul></li></ol><hr><h3 id="关键参数与配置-1" tabindex="-1"><a class="header-anchor" href="#关键参数与配置-1"><span><strong>关键参数与配置</strong></span></a></h3><table><thead><tr><th>参数组</th><th>核心参数</th><th>作用说明</th></tr></thead><tbody><tr><td><strong>Plant Settings</strong></td><td><code>Lock Type</code></td><td>选择锁定触发条件（速度阈值、加速度变化等）</td></tr><tr><td><strong>Leg Definitions</strong></td><td><code>IK Bones</code> / <code>FK Bones</code></td><td>绑定腿部骨骼链（需包含髋关节、膝盖、脚踝）</td></tr><tr><td><strong>Interpolation</strong></td><td><code>Spring Stiffness</code></td><td>控制脚部位置插值的响应速度，值越高锁定越及时但可能抖动</td></tr><tr><td><strong>Trace Settings</strong></td><td><code>Ray Length</code></td><td>设置射线检测范围，影响地形检测精度（过长可能导致性能下降）</td></tr></tbody></table><hr><h3 id="典型应用场景-3" tabindex="-1"><a class="header-anchor" href="#典型应用场景-3"><span><strong>典型应用场景</strong></span></a></h3><ol><li><p><strong>上下楼梯优化</strong></p><ul><li>传统 IK 方案在楼梯场景易出现脚部位置突变，Foot Placement 通过预测性调整（结合 <code>Pelvis</code> 高度插值）实现平滑过渡。</li><li>动态弹簧系数（根据移动速度调整 <code>Spring Stiffness</code>）可避免下楼梯时脚部“踩空”现象。</li></ul></li><li><p><strong>移动速度适配</strong></p><ul><li>在 <code>Speed Warping</code> 技术中，Foot Placement 可同步缩放步长与脚部锁定位置，消除因速度变化导致的滑步问题。</li><li>示例流程： <ol><li>通过 ControlRig 获取移动方向（Direction）和缩放比例（Scale）</li><li>沿移动轴旋转脚部骨骼坐标，缩放步长后再逆向旋转回原方向</li><li>输出修正后的骨骼位置给 Foot Placement 节点</li></ol></li></ul></li><li><p><strong>网络同步优化</strong></p><ul><li>在多人游戏中，通过 Foot Placement 的预计算数据同步脚部状态，减少客户端与服务器端的模型朝向分歧。</li></ul></li></ol><hr><h3 id="与传统方案的对比" tabindex="-1"><a class="header-anchor" href="#与传统方案的对比"><span><strong>与传统方案的对比</strong></span></a></h3><table><thead><tr><th>维度</th><th>传统被动式 IK</th><th>Foot Placement 方案</th></tr></thead><tbody><tr><td><strong>响应机制</strong></td><td>滞后修复（脚部触地后调整）</td><td>预测性调整（基于移动方向和速度预判）</td></tr><tr><td><strong>地形突变处理</strong></td><td>易出现位置跳变</td><td>通过插值和射线检测平滑过渡</td></tr><tr><td><strong>性能开销</strong></td><td>高（需实时解算）</td><td>低（依赖预计算和缓存）</td></tr><tr><td><strong>开发效率</strong></td><td>需手动编写复杂逻辑</td><td>节点化配置，参数驱动</td></tr></tbody></table><hr><h3 id="实践建议-3" tabindex="-1"><a class="header-anchor" href="#实践建议-3"><span><strong>实践建议</strong></span></a></h3><ol><li><p><strong>模式选择</strong></p><ul><li>简单地形：使用 <code>Graph</code> 模式 + 默认 <code>Spring Stiffness</code></li><li>复杂地形（如楼梯）：切换为 <code>Hybrid</code> 模式，并启用动态弹簧系数</li><li>高速移动角色：增大 <code>Lock Threshold</code> 避免频繁锁定</li></ul></li><li><p><strong>性能调优</strong></p><ul><li>对 NPC 角色可降低射线检测频率（如每 3 帧检测一次）</li><li>在动画蓝图中合并 <code>Foot Placement</code> 和 <code>Leg IK</code> 节点的更新逻辑</li></ul></li><li><p><strong>调试技巧</strong></p><ul><li>开启调试视图（<code>Show Debug Visualization</code>）观察射线检测路径和锁定点</li><li>通过 <code>Pelvis Offset</code> 曲线监控盆骨位置变化，调整 <code>MaxOffset</code> 防止过度下压</li></ul></li></ol><h2 id="turn-in-plcae" tabindex="-1"><a class="header-anchor" href="#turn-in-plcae"><span>Turn In Plcae</span></a></h2><p>这篇文章<a href="https://zhuanlan.zhihu.com/p/720421876" target="_blank" rel="noopener noreferrer">UE5.4新动画节点 - RootMotion控制节点</a>讲解<code>Offset Boot Bone</code>和<code>Steering</code>节点很详细，主要实现原地转身功能。</p><h3 id="offset-boot-bone" tabindex="-1"><a class="header-anchor" href="#offset-boot-bone"><span>Offset Boot Bone</span></a></h3><ol><li><p><strong>根骨骼旋转控制</strong></p><ul><li>取代传统通过蓝图手动计算RootYawOffset的方式，直接通过动画蓝图节点实现对根骨骼的旋转偏移控制</li><li>支持四种控制模式： <ul><li><strong>Accumulate</strong>（累积模式）：持续叠加旋转偏移量</li><li><strong>Interpolate</strong>（插值模式）：平滑过渡到目标旋转角度</li><li><strong>Release</strong>（释放模式）：逐步衰减偏移量</li><li><strong>Hold</strong>（保持模式）：冻结当前偏移状态</li></ul></li></ul></li><li><p><strong>旋转轴锁定</strong></p><ul><li>默认仅控制Yaw轴（水平旋转），避免角色模型在X/Z轴产生不自然的扭曲</li><li>通过参数设置可扩展为多轴控制（需配合动画曲线）</li></ul></li><li><p><strong>与动画曲线联动</strong></p><ul><li>支持读取动画曲线数据（如RemainingTurnYaw），自动计算每帧的旋转差值</li><li>实时更新RootYawOffset变量，替代传统每帧手动记录Delta Rotation Yaw的方式</li></ul></li></ol><h3 id="典型应用场景-4" tabindex="-1"><a class="header-anchor" href="#典型应用场景-4"><span>典型应用场景</span></a></h3><ol><li><p><strong>原地转身（Turn In Place）</strong></p><ul><li>当角色控制器旋转角度（ControlRotation）与模型朝向偏差超过阈值（如±45°）时触发</li><li>通过播放预制的转身动画，配合OffsetRootBone的旋转偏移补偿，消除滑步现象</li><li>示例流程： <ol><li>检测ControlRotation与RootBone的Yaw偏差</li><li>偏差超过阈值时播放转身动画</li><li>OffsetRootBone根据动画曲线自动计算旋转补偿量</li><li>通过AimOffset同步上半身瞄准方向</li></ol></li></ul></li><li><p><strong>移动方向修正</strong></p><ul><li>在角色移动过程中动态修正根骨骼朝向，解决以下问题： <ul><li>动画RootMotion与移动组件朝向不一致导致的模型扭曲</li><li>网络同步中胶囊体与模型朝向的分歧</li></ul></li><li>搭配Steering节点使用时，可实现： <ul><li>移动中转向时的骨骼插值过渡</li><li>急停/变向时的物理惯性模拟</li></ul></li></ul></li></ol><h4 id="与传统实现的对比" tabindex="-1"><a class="header-anchor" href="#与传统实现的对比"><span>与传统实现的对比</span></a></h4><table><thead><tr><th>对比维度</th><th>UE5.4之前方案</th><th>OffsetRootBone方案</th></tr></thead><tbody><tr><td><strong>实现复杂度</strong></td><td>需手动维护RootYawOffset变量</td><td>内置旋转计算逻辑</td></tr><tr><td><strong>维护成本</strong></td><td>蓝图节点多达20+个</td><td>单个节点完成核心功能</td></tr><tr><td><strong>精度控制</strong></td><td>依赖逐帧Delta计算，误差累积</td><td>基于动画曲线数据驱动</td></tr><tr><td><strong>扩展性</strong></td><td>修改需重构整套逻辑</td><td>通过模式切换快速适配新需求</td></tr></tbody></table><h3 id="实际开发建议" tabindex="-1"><a class="header-anchor" href="#实际开发建议"><span>实际开发建议</span></a></h3><ol><li><p><strong>模式选择策略</strong></p><ul><li>快速转身：Accumulate模式 + 短混合时间（0.1-0.3s）</li><li>平滑转向：Interpolate模式 + 长混合时间（0.5-1s）</li><li>战斗受击：Release模式实现物理惯性效果</li></ul></li><li><p><strong>性能优化</strong></p><ul><li>避免每帧更新模式参数，优先在状态机过渡时设置</li><li>对NPC角色可降低插值频率（如每3帧更新一次）</li></ul></li></ol><h3 id="steering" tabindex="-1"><a class="header-anchor" href="#steering"><span>Steering</span></a></h3><p>Steering 动画节点是指UE GASP项目中新增的一个动画控制节点，用于在特定时间内将角色的Root节点转向目标方向。具体来说，Steering节点可以帮助角色在移动或原地转身时，通过动画混合实现平滑的转向效果。它允许动画师或开发者指定一个目标朝向（TargetOrientation），并在指定的时间内（TargetTime）调整角色的Root节点以匹配这个目标方向。如果提供了动画，Steering节点还可以根据动画的播放时间和目标时间调整动画的旋转角度，使角色的转向更加自然。</p><h4 id="基本功能" tabindex="-1"><a class="header-anchor" href="#基本功能"><span>基本功能</span></a></h4><ul><li><strong>目标朝向设定</strong>：Steering节点需要一个目标朝向（TargetOrientation），这个朝向可以是世界空间中的任意方向。</li><li><strong>转向时间控制</strong>：通过设置转向时间（TargetTime），可以控制角色转向目标方向的速度和流畅度。</li></ul><h4 id="应用场景" tabindex="-1"><a class="header-anchor" href="#应用场景"><span>应用场景</span></a></h4><ul><li><strong>原地转身</strong>：在角色需要原地转向时，Steering节点可以用来提前预测并调整角色的Root节点，使其朝向未来的位置，避免转向节点滞后的问题。</li><li><strong>移动时朝向修正</strong>：在角色移动过程中，如果需要调整朝向，Steering节点可以用来将角色Root节点修正到原始朝向，避免因OffsetRootBone的累积模式导致的朝向偏移。</li></ul><h4 id="问题解决" tabindex="-1"><a class="header-anchor" href="#问题解决"><span>问题解决</span></a></h4><ul><li><strong>滑步问题</strong>：通过Steering节点的使用，可以在原地转身时减少滑步，因为Steering节点可以提前预测并调整角色的Root节点，使得转向动作更加平滑。</li><li><strong>朝向错乱问题</strong>：在角色移动时，通过将OffsetRootBone的旋转模式改为Interpolate或使用Steering节点，可以避免角色朝向完全错乱。</li></ul><h4 id="与offsetrootbone的配合" tabindex="-1"><a class="header-anchor" href="#与offsetrootbone的配合"><span>与OffsetRootBone的配合</span></a></h4><ul><li><strong>控制模式</strong>：Steering节点可以与OffsetRootBone节点结合使用，通过设置OffsetRootBone的控制模式（如Accumulate、Interpolate、Release、Hold），以及Steering节点的转向时间，实现更精细的角色控制。</li><li><strong>动画混合</strong>：在使用Steering节点时，动画混合时间的调整也会影响转向的流畅度，减少混合时间可以优化转向效果。</li></ul><h4 id="实际应用" tabindex="-1"><a class="header-anchor" href="#实际应用"><span>实际应用</span></a></h4><ul><li><strong>游戏开发</strong>：在第一人称射击游戏或第三人称视角游戏中，Steering节点和OffsetRootBone节点的结合使用，可以提高角色转向和移动的流畅性和自然度，提升玩家体验。</li><li><strong>网络环境适配</strong>：在网络游戏环境中，通过调整Root节点而非胶囊体的旋转，可以减少因网络延迟导致的朝向偏移问题，提高游戏的稳定性和流畅性。</li></ul><p>通过Steering动画节点的使用，UE GASP项目在角色控制方面提供了更灵活和精确的解决方案，特别是在原地转身和移动转向场景中，显著提升了动画表现和游戏体验。</p><h2 id="reference" tabindex="-1"><a class="header-anchor" href="#reference"><span>Reference</span></a></h2><ul><li><a href="https://zhuanlan.zhihu.com/p/619267200" target="_blank" rel="noopener noreferrer">Pose Warping in UE5</a></li><li><a href="https://dev.epicgames.com/documentation/en-us/unreal-engine/pose-warping-in-unreal-engine" target="_blank" rel="noopener noreferrer">Pose Warping</a></li><li><a href="https://zhuanlan.zhihu.com/p/24293449450" target="_blank" rel="noopener noreferrer">UE GASP TurnInPlace</a></li><li><a href="https://zhuanlan.zhihu.com/p/720421876" target="_blank" rel="noopener noreferrer">UE5.4新动画节点 - RootMotion控制节点</a></li></ul>`,97)]))}const g=o(i,[["render",l],["__file","Pose Warping.html.vue"]]),p=JSON.parse('{"path":"/GameEngine/Unreal/animation/Pose%20Warping.html","title":"Pose Warping","lang":"en-US","frontmatter":{"date":"2025-03-26T18:57:03.000Z","tag":["Unreal Engine","Animation"]},"git":{"createdTime":1742967856000,"updatedTime":1744257310000,"contributors":[{"name":"BanMing","username":"BanMing","email":"ban-ming@foxmail.com","commits":4,"url":"https://github.com/BanMing"}]},"readingTime":{"minutes":17.34,"words":5201},"filePathRelative":"GameEngine/Unreal/animation/Pose Warping.md","localizedDate":"March 26, 2025","excerpt":"\\n<p>这篇文章写<code>Orientation Warping</code>、<code>Slope Warping</code>、<code>Stride Warping</code>的很清晰：<a href=\\"https://zhuanlan.zhihu.com/p/555984712\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">上万字详解UE5动画新特性Pose Warping原理与应用</a></p>\\n<h2>Orientation Warping</h2>\\n<p>Orientation Warping 是 UE5 Animation Warping 插件的核心动画节点之一，主要用于分离角色上下半身的旋转动作，解决传统动画混合导致的滑步、躯干扭曲等问题。</p>"}');export{g as comp,p as data};
