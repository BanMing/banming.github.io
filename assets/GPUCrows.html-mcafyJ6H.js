import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,a as i,o as r}from"./app-BpAZDfdM.js";const n="/assets/2024-11-12-14-32-24-prdIVE1D.png",s={};function o(d,a){return r(),t("div",null,a[0]||(a[0]=[i('<h1 id="rendering-instanced-crowds" tabindex="-1"><a class="header-anchor" href="#rendering-instanced-crowds"><span>Rendering Instanced Crowds</span></a></h1><p>简单来说把动画数据存储到贴图上，在shader的顶点函数中计算动画蒙皮。</p><h2 id="storing-arbitrary-data-in-textures" tabindex="-1"><a class="header-anchor" href="#storing-arbitrary-data-in-textures"><span>Storing arbitrary data in textures</span></a></h2><p>可以使用一个<code>GL_RGBA32F</code>格式的贴图来存储动画信息，每个像素有4个32位浮点数来存。</p><h2 id="retrieving-arbitrary-data-from-textures" tabindex="-1"><a class="header-anchor" href="#retrieving-arbitrary-data-from-textures"><span>Retrieving arbitrary data from textures</span></a></h2><p>在shader中可以对其采样读取</p><h2 id="baking-animations-into-a-texture" tabindex="-1"><a class="header-anchor" href="#baking-animations-into-a-texture"><span>Baking animations into a texture</span></a></h2><p>贴图的横坐标为帧数，纵坐标为骨骼信息，骨骼信息有三个：位置、旋转、缩放。一个信息放一个像素。简单的示意图：</p><figure><img src="'+n+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>每一格就是一个像素。</p><h2 id="sampling-animation-textures-in-a-vertex-shader" tabindex="-1"><a class="header-anchor" href="#sampling-animation-textures-in-a-vertex-shader"><span>Sampling animation textures in a vertex shader</span></a></h2><h2 id="optimizing-the-crowd-system" tabindex="-1"><a class="header-anchor" href="#optimizing-the-crowd-system"><span>Optimizing the crowd system</span></a></h2>',12)]))}const c=e(s,[["render",o],["__file","GPUCrows.html.vue"]]),h=JSON.parse('{"path":"/Animation/gameOpenGL/GPUCrows.html","title":"Rendering Instanced Crowds","lang":"en-US","frontmatter":{"date":"2022-07-14T00:36:48.000Z","tag":["Animation"],"order":14},"headers":[{"level":2,"title":"Storing arbitrary data in textures","slug":"storing-arbitrary-data-in-textures","link":"#storing-arbitrary-data-in-textures","children":[]},{"level":2,"title":"Retrieving arbitrary data from textures","slug":"retrieving-arbitrary-data-from-textures","link":"#retrieving-arbitrary-data-from-textures","children":[]},{"level":2,"title":"Baking animations into a texture","slug":"baking-animations-into-a-texture","link":"#baking-animations-into-a-texture","children":[]},{"level":2,"title":"Sampling animation textures in a vertex shader","slug":"sampling-animation-textures-in-a-vertex-shader","link":"#sampling-animation-textures-in-a-vertex-shader","children":[]},{"level":2,"title":"Optimizing the crowd system","slug":"optimizing-the-crowd-system","link":"#optimizing-the-crowd-system","children":[]}],"git":{"createdTime":1657730208000,"updatedTime":1731424694000,"contributors":[{"name":"BanMing","email":"ban-ming@foxmail.com","commits":3},{"name":"wupeng","email":"wupeng_a2484@virtuos.com.cn","commits":3},{"name":"ban-ming@foxmail.com","email":"ban-ming@foxmail.com","commits":1}]},"readingTime":{"minutes":0.58,"words":173},"filePathRelative":"Animation/gameOpenGL/GPUCrows.md","localizedDate":"July 14, 2022","excerpt":"\\n<p>简单来说把动画数据存储到贴图上，在shader的顶点函数中计算动画蒙皮。</p>\\n<h2>Storing arbitrary data in textures</h2>\\n<p>可以使用一个<code>GL_RGBA32F</code>格式的贴图来存储动画信息，每个像素有4个32位浮点数来存。</p>\\n<h2>Retrieving arbitrary data from textures</h2>\\n<p>在shader中可以对其采样读取</p>\\n<h2>Baking animations into a texture</h2>\\n<p>贴图的横坐标为帧数，纵坐标为骨骼信息，骨骼信息有三个：位置、旋转、缩放。一个信息放一个像素。简单的示意图：</p>"}');export{c as comp,h as data};
