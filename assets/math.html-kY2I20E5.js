import{_ as a}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as i,c as t,b as r}from"./app-EpDlH_S7.js";const n="/assets/20211207225905-iLojK8sh.png",e="/assets/20211207230324-_yvAfLo_.png",s="/assets/20211207230800-zZYwWD-W.png",o="/assets/20211207231104-m0CKJrm2.png",g="/assets/20211207234046-DF7aiwjB.png",d="/assets/20211207235710-_x9HT035.png",p="/assets/20211208214146-E3pzCkPe.png",c="/assets/20211208215438-jPk1Uo4-.png",h="/assets/20211208220321-Zxpq1TKa.png",f="/assets/20211208221430-nISpnYGf.png",l="/assets/20211208220504-zzP1gIBO.png",u="/assets/20211208221753-cp3De1-A.png",_="/assets/20211208235200-lxOwQf93.png",m="/assets/20211208235455-07uPvlEP.png",x="/assets/20211209000349-30jru1mf.png",b="/assets/20211209000319--Qxm_UwI.png",z="/assets/20211209000926-GZUGCtaR.png",y="/assets/20211209002542-yqAjPjjR.png",v="/assets/20211209003205-b33ufPRL.png",j="/assets/20211209003917-wjiov8nF.png",P="/assets/20211209005026-EkMibevE.png",k="/assets/20211209005154-f47_MYL7.png",w={},A=r('<h1 id="math" tabindex="-1"><a class="header-anchor" href="#math" aria-hidden="true">#</a> Math</h1><h2 id="向量" tabindex="-1"><a class="header-anchor" href="#向量" aria-hidden="true">#</a> 向量</h2><p>向量实际用的到一些小例子：</p><h3 id="线性插值" tabindex="-1"><a class="header-anchor" href="#线性插值" aria-hidden="true">#</a> 线性插值</h3><p>两个向量值的插值范围</p><figure><img src="'+n+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="向量投影" tabindex="-1"><a class="header-anchor" href="#向量投影" aria-hidden="true">#</a> 向量投影</h3><p>投影计算，已知<strong>o</strong>,<strong>q</strong>,<strong>v</strong>求得 <strong>s</strong> 点</p><figure><img src="'+e+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="平面判断" tabindex="-1"><a class="header-anchor" href="#平面判断" aria-hidden="true">#</a> 平面判断</h3><p>判断p点位平面那个方位</p><figure><img src="'+s+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>n</strong> 为平面的法线，只需要盘点法线和法线与平面交点点乘的结果正负即可。</p><figure><img src="'+o+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="射线与圆的碰撞" tabindex="-1"><a class="header-anchor" href="#射线与圆的碰撞" aria-hidden="true">#</a> 射线与圆的碰撞</h3><p>我们要求一个从p点出发的射线是否与以c点为圆心半径为r的圆相交也就是发生碰撞</p><figure><img src="'+g+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>首先我们假设交点为<strong>p</strong>(t),同时根据插值公式得到：<strong>p</strong>(t) = <strong>p</strong> + <strong>v</strong>t</p><p>我们只需要判断<strong>p</strong>(t)点到<strong>c</strong>点的距离是否等于圆心即可，就可以得到</p><p>||<strong>p</strong>(t) - <strong>c</strong>|| = r</p><p>两边在平方</p><p>||<strong>p</strong>(t) - <strong>c</strong>||² = r²</p><p>再根据一个向量的模的平方为该向量点乘自己</p><p>(<strong>p</strong> - <strong>c</strong> + t<strong>v</strong>) <strong>·</strong> (<strong>p</strong> - <strong>c</strong> + t<strong>v</strong>) = r²</p><p>根据多项式变形得到</p><p>(<strong>v · v</strong>)t² + 2(<strong>p</strong> - <strong>c</strong>) <strong>· v</strong>t + (<strong>p</strong> - <strong>c</strong>) · (<strong>p</strong> - <strong>c</strong>) - r² = 0</p><p>求解二元一次方程即可，一般解有三种情况：</p><ul><li>没有解：无交点</li><li>一个解：一个交点</li><li>两个解：两个交点</li></ul><h3 id="三角形的法线与面积" tabindex="-1"><a class="header-anchor" href="#三角形的法线与面积" aria-hidden="true">#</a> 三角形的法线与面积</h3><figure><img src="'+d+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>叉乘可以获得三角形的法向量和面积</li><li>法向量方向是根据叉乘的顺序获得</li></ul><h3 id="判断一个点是否在三角形内" tabindex="-1"><a class="header-anchor" href="#判断一个点是否在三角形内" aria-hidden="true">#</a> 判断一个点是否在三角形内</h3><figure><img src="'+p+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>与平面法向量同方向就在 内部</p><h3 id="重心" tabindex="-1"><a class="header-anchor" href="#重心" aria-hidden="true">#</a> 重心</h3><figure><img src="'+c+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>点乘法向量是因为如果点在三角形外面，他的面积就可能是负值。也可以使用线性插值来计算。</p><p>使用在三角形着色上。</p><h3 id="四面体求体积" tabindex="-1"><a class="header-anchor" href="#四面体求体积" aria-hidden="true">#</a> 四面体求体积</h3><figure><img src="'+h+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="四面体重心权重" tabindex="-1"><a class="header-anchor" href="#四面体重心权重" aria-hidden="true">#</a> 四面体重心权重</h3><figure><img src="'+f+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="判断射线是否与三角形相交" tabindex="-1"><a class="header-anchor" href="#判断射线是否与三角形相交" aria-hidden="true">#</a> 判断射线是否与三角形相交</h3><figure><img src="'+l+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>只需要设置一个交点，然后使用交点与任意个顶点相连得到的向量，检测这个向量是否垂直于三角形的法向量 。</p><h2 id="矩阵" tabindex="-1"><a class="header-anchor" href="#矩阵" aria-hidden="true">#</a> 矩阵</h2><figure><img src="'+u+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>转置矩阵</li><li>对角矩阵，对角线有值，其余地方为0</li><li>单位矩阵：特殊的对角矩阵</li><li>对称矩阵</li></ul><h3 id="正交矩阵" tabindex="-1"><a class="header-anchor" href="#正交矩阵" aria-hidden="true">#</a> 正交矩阵</h3><p>两两垂直的三个轴</p><figure><img src="'+_+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>如果使用一个正交矩阵代表着局部坐标，然后对其旋转。</p><p>这个旋转矩阵就是描述物体本地坐标的状态。</p><figure><img src="'+m+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="奇异值分解" tabindex="-1"><a class="header-anchor" href="#奇异值分解" aria-hidden="true">#</a> 奇异值分解</h3><figure><img src="'+x+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>任何的线性变化都可以分解成三个步骤：旋转，缩放，旋转</p><figure><img src="'+b+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="特征值分解" tabindex="-1"><a class="header-anchor" href="#特征值分解" aria-hidden="true">#</a> 特征值分解</h3><p>只考虑对称值的特征分解</p><figure><img src="'+z+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="对称" tabindex="-1"><a class="header-anchor" href="#对称" aria-hidden="true">#</a> 对称</h3><h3 id="正定矩阵" tabindex="-1"><a class="header-anchor" href="#正定矩阵" aria-hidden="true">#</a> 正定矩阵</h3><h2 id="线性问题" tabindex="-1"><a class="header-anchor" href="#线性问题" aria-hidden="true">#</a> 线性问题</h2><figure><img src="'+y+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>已知矩阵<strong>A</strong>和结果向量<strong>b</strong>，需要求解x</p><p>一般不使用A的逆来做，因为计算量大和内存消耗大</p><h3 id="直接法" tabindex="-1"><a class="header-anchor" href="#直接法" aria-hidden="true">#</a> 直接法</h3><figure><img src="'+v+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="迭代法" tabindex="-1"><a class="header-anchor" href="#迭代法" aria-hidden="true">#</a> 迭代法</h3><figure><img src="'+j+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="微积分" tabindex="-1"><a class="header-anchor" href="#微积分" aria-hidden="true">#</a> 微积分</h2><h3 id="一阶导数" tabindex="-1"><a class="header-anchor" href="#一阶导数" aria-hidden="true">#</a> 一阶导数</h3><p>向量对实数求导</p><figure><img src="'+P+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>向量对向量求导</p><figure><img src="'+k+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="二阶导数" tabindex="-1"><a class="header-anchor" href="#二阶导数" aria-hidden="true">#</a> 二阶导数</h3><h3 id="计算弹簧" tabindex="-1"><a class="header-anchor" href="#计算弹簧" aria-hidden="true">#</a> 计算弹簧</h3>',79),E=[A];function B(L,q){return i(),t("div",null,E)}const G=a(w,[["render",B],["__file","math.html.vue"]]);export{G as default};
