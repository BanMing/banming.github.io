const l=JSON.parse('{"key":"v-108e8e71","path":"/Basic/os/","title":"操作系统","lang":"en-US","frontmatter":{"date":"2020-11-30T22:26:35.000Z","tag":["OS"]},"headers":[{"level":2,"title":"进程与线程","slug":"进程与线程","link":"#进程与线程","children":[]},{"level":2,"title":"进程之间的通信方式以及优缺点","slug":"进程之间的通信方式以及优缺点","link":"#进程之间的通信方式以及优缺点","children":[]},{"level":2,"title":"线程之间的通信方式","slug":"线程之间的通信方式","link":"#线程之间的通信方式","children":[]},{"level":2,"title":"进程之间私有和共享的资源","slug":"进程之间私有和共享的资源","link":"#进程之间私有和共享的资源","children":[]},{"level":2,"title":"线程之间私有和共享的资源","slug":"线程之间私有和共享的资源","link":"#线程之间私有和共享的资源","children":[]},{"level":2,"title":"多进程与多线程间的对比、优劣与选择","slug":"多进程与多线程间的对比、优劣与选择","link":"#多进程与多线程间的对比、优劣与选择","children":[{"level":3,"title":"对比","slug":"对比","link":"#对比","children":[]},{"level":3,"title":"优劣","slug":"优劣","link":"#优劣","children":[]},{"level":3,"title":"选择","slug":"选择","link":"#选择","children":[]}]},{"level":2,"title":"死锁","slug":"死锁","link":"#死锁","children":[{"level":3,"title":"原因","slug":"原因","link":"#原因","children":[]},{"level":3,"title":"产生条件","slug":"产生条件","link":"#产生条件","children":[]},{"level":3,"title":"预防","slug":"预防","link":"#预防","children":[]},{"level":3,"title":"文件系统","slug":"文件系统","link":"#文件系统","children":[]}]},{"level":2,"title":"主机字节序与网络字节序","slug":"主机字节序与网络字节序","link":"#主机字节序与网络字节序","children":[{"level":3,"title":"主机字节序（CPU字节序）","slug":"主机字节序-cpu字节序","link":"#主机字节序-cpu字节序","children":[]},{"level":3,"title":"网络字节序","slug":"网络字节序","link":"#网络字节序","children":[]}]},{"level":2,"title":"页面置换算法","slug":"页面置换算法","link":"#页面置换算法","children":[{"level":3,"title":"分类","slug":"分类","link":"#分类","children":[]},{"level":3,"title":"算法","slug":"算法","link":"#算法","children":[]}]},{"level":2,"title":"内存管理","slug":"内存管理","link":"#内存管理","children":[{"level":3,"title":"虚拟内存","slug":"虚拟内存","link":"#虚拟内存","children":[]},{"level":3,"title":"分页系统地址映射","slug":"分页系统地址映射","link":"#分页系统地址映射","children":[]},{"level":3,"title":"页面置换算法","slug":"页面置换算法-1","link":"#页面置换算法-1","children":[]},{"level":3,"title":"分段","slug":"分段","link":"#分段","children":[]},{"level":3,"title":"段页式","slug":"段页式","link":"#段页式","children":[]},{"level":3,"title":"分页与分段的比较","slug":"分页与分段的比较","link":"#分页与分段的比较","children":[]}]}],"git":{"createdTime":1699280150000,"updatedTime":1707212881000,"contributors":[{"name":"BanMing","email":"ban-ming@foxmail.com","commits":3},{"name":"wupeng","email":"wupeng_a2484@virtuos.com.cn","commits":2}]},"readingTime":{"minutes":15.28,"words":4585},"filePathRelative":"Basic/os/README.md","localizedDate":"November 30, 2020","excerpt":"<h1> 操作系统</h1>\\n<h2> 进程与线程</h2>\\n<p>对于有线程系统：</p>\\n<ul>\\n<li>进程是资源分配的独立单位</li>\\n<li>线程是资源调度的独立单位</li>\\n</ul>\\n<p>对于无线程系统：</p>\\n<ul>\\n<li>进程是资源调度、分配的独立单位</li>\\n</ul>\\n<h2> 进程之间的通信方式以及优缺点</h2>\\n<ul>\\n<li>\\n<p>管道（PIPE)</p>\\n<ul>\\n<li>\\n<p>有名管道：一种半双工的通信方式，它允许无亲缘关系进程间的通信</p>\\n<ul>\\n<li>优点：可以实现任意关系的进程间的通信</li>\\n<li>缺点：\\n<ol>\\n<li>长期存系统中，使用不当容易出错</li>\\n<li>缓冲区有限</li>\\n</ol>\\n</li>\\n</ul>\\n</li>\\n<li>\\n<p>无名管道：一种半双工的通信方式，只能在具有亲缘关系的进程间使用（父子进程）</p>\\n<ul>\\n<li>优点：简单方便</li>\\n<li>缺点：\\n<ol>\\n<li>局限于单向通信</li>\\n<li>只能创建在它的进程以及其有亲缘关系的进程之间</li>\\n<li>缓冲区有限</li>\\n</ol>\\n</li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li>\\n<p>信号量（Semaphore）：一个计数器，可以用来控制多个线程对共享资源的访问</p>\\n<ul>\\n<li>优点：可以同步进程</li>\\n<li>缺点：信号量有限</li>\\n</ul>\\n</li>\\n<li>\\n<p>信号（Signal）：一种比较复杂的通信方式，用于通知接收进程某个时间已经发生</p>\\n</li>\\n<li>\\n<p>消息队列（Message Queue）：是消息的链表，存放在内核中并由消息队列标识符标识</p>\\n<ul>\\n<li>优点：可以实现任意进程间的通信，并通过系统调用函数来实现消息发送和接收之间的同步，无需考虑同步问题，方便</li>\\n<li>缺点：信息的肤质需要额外消耗CPU的时间，不适宜于信息量大或操作频繁的场合</li>\\n</ul>\\n</li>\\n<li>\\n<p>共享内存（Shared Memory）：映射一端能被其他进程所访问的内存，这段共享内存由一个进程创建，但多个进程都可以访问</p>\\n<ul>\\n<li>优点：无须复制，快捷，信息量大</li>\\n<li>缺点：\\n<ol>\\n<li>通信是通过将共享空间缓冲区直接附加到进程的虚拟地址空间中来实现的，因此进程间的读写操作的同步问题</li>\\n<li>利用内存缓冲区直接交换信息，内存的实体存在于计算机中，只能同一个计算机系统中的诸多进程共享，不方便网络通信</li>\\n</ol>\\n</li>\\n</ul>\\n</li>\\n<li>\\n<p>套接字（Socket）：可以用于同计算机间的进程通信</p>\\n<ul>\\n<li>优点：\\n<ol>\\n<li>传输数据为字节级，传输数据可自定义，数据量小效率高</li>\\n<li>传输数据时间段，性能高</li>\\n<li>适合于客户端和服务器端之间信息实时交互</li>\\n<li>可以加密，数据安全性强</li>\\n</ol>\\n</li>\\n<li>缺点：需对传输的数据进行解析，转化成应用级的数据</li>\\n</ul>\\n</li>\\n</ul>"}');export{l as data};
