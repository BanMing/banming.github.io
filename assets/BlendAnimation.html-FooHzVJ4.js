import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as a,c as n,e as i}from"./app-r28LZu7J.js";const d={},t=i(`<h1 id="blend-between-animations" tabindex="-1"><a class="header-anchor" href="#blend-between-animations" aria-hidden="true">#</a> Blend between Animations</h1><h2 id="pose-blending" tabindex="-1"><a class="header-anchor" href="#pose-blending" aria-hidden="true">#</a> Pose blending</h2><p>线性插值两个pose，跟插值两个<code>vector</code>类似。在混合两个姿势时，分别混合每个节点的<code>Transform</code>信息，这里我们使用本地空间来做混合。</p><p>我们可以设置一个混合父节点，在混合时，我们只混合这个父节点一下的节点。这样就可以让我们在每次混合时，不需要去混合一些不动的节点。</p><h2 id="crossfading-animation" tabindex="-1"><a class="header-anchor" href="#crossfading-animation" aria-hidden="true">#</a> Crossfading animation</h2><p>是一种快速的动画到另一个动画的混合。交叉淡出的目的是隐藏两个动画直接的过渡。</p><h2 id="additive-blending" tabindex="-1"><a class="header-anchor" href="#additive-blending" aria-hidden="true">#</a> Additive blending</h2><p>用于通过添加额外的关节运动来修改动画，公式：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>outPose = inPose + (addPose - basePose)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,9),o=[t];function s(r,c){return a(),n("div",null,o)}const m=e(d,[["render",s],["__file","BlendAnimation.html.vue"]]);export{m as default};
