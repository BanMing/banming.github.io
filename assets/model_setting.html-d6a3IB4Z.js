import{_ as o}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as l,o as n,c as r,a as e,b as t,d as i,e as s}from"./app-rHfn_iPT.js";const c={},h=s('<h1 id="模型设置" tabindex="-1"><a class="header-anchor" href="#模型设置" aria-hidden="true">#</a> 模型设置</h1><p>模型导入Model设置：Read/Write Enabled - 关闭</p><p>这个开关是控制我们在运行游戏是去改变模型的mesh数据同步到GPU内存中，并是否保存在GUP内存中，或者去读取mesh中的数据。在大多数情况下设置为false，除了以下情况设置为true：</p><ul><li>使用了StaticBatchingUtility.Combine() 合并mesh的时候</li><li>使用Mesh去烘焙成NavMesh</li><li>使用了Mesh Collider并且transform拥有负数的大小（如：scale（-1,1,1））</li><li>使用了Mesh Collider并且对transform做了裁剪和扭曲</li><li>使用了Mesh Collider并且 Mesh Collider 的 Cooking 设置不是默认值</li></ul><p>原理：</p><p>如果勾选了这个选项，那么这个FBX是会在内存中存在一个拷贝，硬盘上存在一个么。要是不勾选的话，是不是只有硬盘中有一份，内存中没有了。这个解释有待考证</p><p>需要打开：Optimize Game Object</p><p>少一些节点，会在加载速度有所提升。在动画机update上也会有所减少消耗</p>',8),p={href:"https://zhuanlan.zhihu.com/p/27378492",target:"_blank",rel:"noopener noreferrer"};function d(m,_){const a=l("ExternalLinkIcon");return n(),r("div",null,[h,e("p",null,[t("参考： "),e("a",p,[t("https://zhuanlan.zhihu.com/p/27378492"),i(a)])])])}const x=o(c,[["render",d],["__file","model_setting.html.vue"]]);export{x as default};
