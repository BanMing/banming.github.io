const n=JSON.parse('{"key":"v-276c7301","path":"/Basic/language/Cplusplus/DisableFunctionOptimization.html","title":"Disable Function Optimization with Attribute","lang":"en-US","frontmatter":{"date":"2020-09-10T22:45:25.000Z"},"headers":[{"level":2,"title":"Single function definition","slug":"single-function-definition","link":"#single-function-definition","children":[{"level":3,"title":"Clang","slug":"clang","link":"#clang","children":[]},{"level":3,"title":"GCC","slug":"gcc","link":"#gcc","children":[]}]},{"level":2,"title":"Multiply function definition","slug":"multiply-function-definition","link":"#multiply-function-definition","children":[{"level":3,"title":"Clang","slug":"clang-1","link":"#clang-1","children":[]},{"level":3,"title":"Visual Studio","slug":"visual-studio","link":"#visual-studio","children":[]},{"level":3,"title":"GCC","slug":"gcc-1","link":"#gcc-1","children":[]}]},{"level":2,"title":"Reference","slug":"reference","link":"#reference","children":[]}],"git":{"createdTime":1699280150000,"updatedTime":1706518071000,"contributors":[{"name":"BanMing","email":"ban-ming@foxmail.com","commits":3},{"name":"wupeng","email":"wupeng_a2484@virtuos.com.cn","commits":1}]},"readingTime":{"minutes":0.47,"words":140},"filePathRelative":"Basic/language/Cplusplus/DisableFunctionOptimization.md","localizedDate":"September 10, 2020","excerpt":"<h1> Disable Function Optimization with Attribute</h1>\\n<h2> Single function definition</h2>\\n<h3> Clang</h3>\\n<div class=\\"language-cpp line-numbers-mode\\" data-ext=\\"cpp\\"><pre class=\\"language-cpp\\"><code><span class=\\"token comment\\">// Clang</span>\\n<span class=\\"token comment\\">// GNU-style attribute</span>\\n<span class=\\"token function\\">__attribute__</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span>optnone<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token keyword\\">int</span> <span class=\\"token function\\">foo</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span>\\n<span class=\\"token comment\\">// C++11 attribute</span>\\n<span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">[</span>clang<span class=\\"token double-colon punctuation\\">::</span>optnone<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">]</span>\\n<span class=\\"token keyword\\">int</span> <span class=\\"token function\\">foo</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{n as data};
