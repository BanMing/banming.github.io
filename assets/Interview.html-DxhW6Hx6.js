import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,a as i,o as l}from"./app-BmzmI2du.js";const t={};function s(r,e){return l(),n("div",null,e[0]||(e[0]=[i('<h1 id="some-questions" tabindex="-1"><a class="header-anchor" href="#some-questions"><span>Some Questions</span></a></h1><h2 id="c-的编译过程" tabindex="-1"><a class="header-anchor" href="#c-的编译过程"><span>C#的编译过程</span></a></h2><p>C#-&gt;IL-&gt;机器码</p><h2 id="什么是il代码" tabindex="-1"><a class="header-anchor" href="#什么是il代码"><span>什么是IL代码</span></a></h2><p>IL-&gt; Intermediate Language，它是一个部分编译的代码</p><h2 id="什么是jit" tabindex="-1"><a class="header-anchor" href="#什么是jit"><span>什么是JIT</span></a></h2><p>JIT-&gt; Just in time compiler，使用JIT来编译IL代码到机器码</p><h2 id="为啥么要用il" tabindex="-1"><a class="header-anchor" href="#为啥么要用il"><span>为啥么要用IL</span></a></h2><p>因为开发环境和运行环境会有不同，根据运行环境JIT会来编译不同平带的机器码。同样在开发时，速度会更加的快了。</p><h2 id="什么是clr" tabindex="-1"><a class="header-anchor" href="#什么是clr"><span>什么是CLR</span></a></h2><p>CLR-&gt; Common Language Runtime</p><ul><li>CLR 触发JIT来编译IL代码</li><li>清理任何没有使用的对象通过GC</li></ul><h2 id="什么是托管代码和非托管代码" tabindex="-1"><a class="header-anchor" href="#什么是托管代码和非托管代码"><span>什么是托管代码和非托管代码</span></a></h2><ul><li>托管代码激活在CLR激活环境</li><li>非托管代码激活在CLR边界意外，简单的说就是一些引用的dll。</li></ul><h2 id="gc可以清理非托管代码" tabindex="-1"><a class="header-anchor" href="#gc可以清理非托管代码"><span>GC可以清理非托管代码</span></a></h2><p>不行</p>',16)]))}const p=a(t,[["render",s],["__file","Interview.html.vue"]]),o=JSON.parse('{"path":"/Basic/language/CSharp/Interview.html","title":"Some Questions","lang":"en-US","frontmatter":{"date":"2022-05-18T19:00:08.000Z","tag":["C#"]},"headers":[{"level":2,"title":"C#的编译过程","slug":"c-的编译过程","link":"#c-的编译过程","children":[]},{"level":2,"title":"什么是IL代码","slug":"什么是il代码","link":"#什么是il代码","children":[]},{"level":2,"title":"什么是JIT","slug":"什么是jit","link":"#什么是jit","children":[]},{"level":2,"title":"为啥么要用IL","slug":"为啥么要用il","link":"#为啥么要用il","children":[]},{"level":2,"title":"什么是CLR","slug":"什么是clr","link":"#什么是clr","children":[]},{"level":2,"title":"什么是托管代码和非托管代码","slug":"什么是托管代码和非托管代码","link":"#什么是托管代码和非托管代码","children":[]},{"level":2,"title":"GC可以清理非托管代码","slug":"gc可以清理非托管代码","link":"#gc可以清理非托管代码","children":[]}],"git":{"createdTime":1652871608000,"updatedTime":1707212881000,"contributors":[{"name":"BanMing","email":"ban-ming@foxmail.com","commits":3},{"name":"wupeng","email":"wupeng_a2484@virtuos.com.cn","commits":2}]},"readingTime":{"minutes":0.71,"words":212},"filePathRelative":"Basic/language/CSharp/Interview.md","localizedDate":"May 18, 2022","excerpt":"\\n<h2>C#的编译过程</h2>\\n<p>C#-&gt;IL-&gt;机器码</p>\\n<h2>什么是IL代码</h2>\\n<p>IL-&gt; Intermediate Language，它是一个部分编译的代码</p>\\n<h2>什么是JIT</h2>\\n<p>JIT-&gt; Just in time compiler，使用JIT来编译IL代码到机器码</p>\\n<h2>为啥么要用IL</h2>\\n<p>因为开发环境和运行环境会有不同，根据运行环境JIT会来编译不同平带的机器码。同样在开发时，速度会更加的快了。</p>\\n<h2>什么是CLR</h2>\\n<p>CLR-&gt; Common Language Runtime</p>"}');export{p as comp,o as data};
