import{_ as p}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as e,o,c as l,a,b as s,d as t,e as c}from"./app-YY-obGl-.js";const u="/assets/1594968731647-01ced26d-94a8-4cc2-abe4-c087defe5d91-zIHB-Gx2.png",i="/assets/1594968736208-1796a601-3452-4985-bdf7-e20e66bf2bf1-uiEt1CTW.png",r={},k=c('<h1 id="multi-platform-跨平台" tabindex="-1"><a class="header-anchor" href="#multi-platform-跨平台" aria-hidden="true">#</a> Multi-Platform 跨平台</h1><h2 id="mono" tabindex="-1"><a class="header-anchor" href="#mono" aria-hidden="true">#</a> Mono</h2><p>把c#转成IL（intermediatelanguage）中间语言，再在各平台上建上专属Mono VM（虚拟机），在VM上面运行IL即可以实现跨平台。 C#为静态语言，IL为动态语言。 难点： 实现各个平台的VM比较复杂，VM官方并没有实现太多。</p><figure><img src="'+u+'" alt="5.png" tabindex="0" loading="lazy"><figcaption>5.png</figcaption></figure><hr><h2 id="il2cpp" tabindex="-1"><a class="header-anchor" href="#il2cpp" aria-hidden="true">#</a> IL2CPP</h2><p>把C#直接转为各个平台原生C++执行，例如安卓使用ndk编译。这其中为了保证c#的一些原生特性，为此也加个一个VM，但是功能比较少，比如实现c#的GC功能等。</p><p><img src="'+i+`" alt="6.png" loading="lazy">   使用动态特性 可以使用link.xml文件来做黑名单：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>linker</span><span class="token punctuation">&gt;</span></span>
       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>assembly</span> <span class="token attr-name">fullname</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>System.Web.Services<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>type</span> <span class="token attr-name">fullname</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>System.Web.Services.Protocols.SoapTypeStubInfo<span class="token punctuation">&quot;</span></span> <span class="token attr-name">preserve</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>all<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>assembly</span><span class="token punctuation">&gt;</span></span>

       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>assembly</span> <span class="token attr-name">fullname</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>System<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>type</span> <span class="token attr-name">fullname</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>System.Net.Configuration.WebRequestModuleHandler<span class="token punctuation">&quot;</span></span> <span class="token attr-name">preserve</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>all<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>type</span> <span class="token attr-name">fullname</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>System.Net.HttpRequestCreator<span class="token punctuation">&quot;</span></span> <span class="token attr-name">preserve</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>all<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>type</span> <span class="token attr-name">fullname</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>System.Net.FileWebRequestCreator<span class="token punctuation">&quot;</span></span> <span class="token attr-name">preserve</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>all<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>assembly</span><span class="token punctuation">&gt;</span></span>

       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>assembly</span> <span class="token attr-name">fullname</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mscorlib<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>type</span> <span class="token attr-name">fullname</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>System.AppDomain<span class="token punctuation">&quot;</span></span> <span class="token attr-name">preserve</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>fields<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>type</span> <span class="token attr-name">fullname</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>System.InvalidOperationException<span class="token punctuation">&quot;</span></span> <span class="token attr-name">preserve</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>fields<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>method</span> <span class="token attr-name">signature</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>System.Void .ctor()<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>type</span><span class="token punctuation">&gt;</span></span>
               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>type</span> <span class="token attr-name">fullname</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>System.Object<span class="token punctuation">&quot;</span></span> <span class="token attr-name">preserve</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>nothing<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>method</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Finalize<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>type</span><span class="token punctuation">&gt;</span></span>
       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>assembly</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>linker</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><p>参考：</p>`,11),m={href:"https://docs.unity3d.com/Manual/IL2CPP-BytecodeStripping.html",target:"_blank",rel:"noopener noreferrer"},d={href:"https://zhuanlan.zhihu.com/p/19972689",target:"_blank",rel:"noopener noreferrer"},g=a("p",null,"扩展：.net 的跨平台",-1),v={href:"https://www.cnblogs.com/artech/p/how-to-cross-platform-03.html",target:"_blank",rel:"noopener noreferrer"};function q(h,b){const n=e("ExternalLinkIcon");return o(),l("div",null,[k,a("p",null,[a("a",m,[s("https://docs.unity3d.com/Manual/IL2CPP-BytecodeStripping.html"),t(n)])]),a("p",null,[a("a",d,[s("https://zhuanlan.zhihu.com/p/19972689"),t(n)])]),g,a("p",null,[a("a",v,[s("https://www.cnblogs.com/artech/p/how-to-cross-platform-03.html"),t(n)])])])}const _=p(r,[["render",q],["__file","Multi-Platform.html.vue"]]);export{_ as default};
